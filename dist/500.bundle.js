"use strict";(self.webpackChunkfinal_project=self.webpackChunkfinal_project||[]).push([[500],{699:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": () => (/* binding */ _003_alliance)\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(6540);\n// EXTERNAL MODULE: ./node_modules/d3/src/index.js + 272 modules\nvar src = __webpack_require__(1445);\n;// ./src/components/graphs/003_MigrationMap.js\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }\nfunction _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n\n\n\nvar MigrationMap = function MigrationMap() {\n  var svgRef = useRef();\n  var width = 800;\n  var height = 400;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    worldGeoJSON = _useState2[0],\n    setWorldGeoJSON = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    countryCentroids = _useState4[0],\n    setCountryCentroids = _useState4[1];\n  var _useState5 = useState({\n      "United States": [],\n      "Russia": [],\n      "China": []\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    tradeData = _useState6[0],\n    setTradeData = _useState6[1];\n  var _useState7 = useState(2014),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedYear = _useState8[0],\n    setSelectedYear = _useState8[1];\n  var _useState9 = useState("All"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    selectedCountry = _useState10[0],\n    setSelectedCountry = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    error = _useState12[0],\n    setError = _useState12[1];\n  var originColors = {\n    "United States": "#4682B4",\n    "Russia": "#DC143C",\n    "China": "#FFDB58",\n    "All": "#9467bd"\n  };\n  var urls = {\n    "United States": "".concat("https://raw.githubusercontent.com/dlee8267/arming-for-stability/main/public", "/data/processed/processed_recipients_of_us_arms_hierarchical.json"),\n    "Russia": "".concat("https://raw.githubusercontent.com/dlee8267/arming-for-stability/main/public", "/data/processed/processed_recipients_of_russia_arms_hierarchical.json"),\n    "China": "".concat("https://raw.githubusercontent.com/dlee8267/arming-for-stability/main/public", "/data/processed/processed_recipients_of_china_arms_hierarchical.json")\n  };\n  var geoJSONUrl = "".concat("https://raw.githubusercontent.com/dlee8267/arming-for-stability/main/public", "/countries-110m.json");\n  var normalizeCountryName = function normalizeCountryName(name) {\n    var mapping = {\n      "United States of America": "United States",\n      "USA": "United States",\n      "Russian Federation": "Russia",\n      "People\'s Republic of China": "China"\n    };\n    return mapping[name] || name;\n  };\n\n  // Load world GeoJSON data\n  useEffect(function () {\n    d3.json(geoJSONUrl).then(function (worldData) {\n      var centroids = {};\n      topojson.feature(worldData, worldData.objects.countries).features.forEach(function (feature) {\n        var countryName = feature.properties.name;\n        centroids[normalizeCountryName(countryName)] = d3.geoCentroid(feature);\n      });\n      setCountryCentroids(centroids);\n      setWorldGeoJSON(worldData);\n    })["catch"](function () {\n      setError("Error loading map data.");\n    });\n  }, []);\n\n  // Load trade data for each country\n  useEffect(function () {\n    Object.keys(urls).forEach(function (country) {\n      d3.json(urls[country]).then(function (data) {\n        if (data && data.recipients) {\n          setTradeData(function (prevData) {\n            return _objectSpread(_objectSpread({}, prevData), {}, _defineProperty({}, country, data.recipients));\n          });\n        } else {\n          setError("Failed to load ".concat(country, " trade data."));\n        }\n      })["catch"](function () {\n        setError("Error loading ".concat(country, " trade data."));\n      });\n    });\n  }, []);\n  useEffect(function () {\n    if (!worldGeoJSON || Object.values(tradeData).every(function (data) {\n      return data.length === 0;\n    })) return;\n    var svg = d3.select(svgRef.current).attr(\'viewBox\', "0 0 ".concat(width, " ").concat(height)).style(\'width\', \'100%\').style(\'height\', \'auto\');\n    svg.selectAll("*").remove();\n    var projection = d3.geoMercator().center([0, 20]).scale(130).translate([width / 2, height / 2]);\n    var path = d3.geoPath().projection(projection);\n    var mapContainer = svg.append("g").attr("class", "map-container");\n    var zoom = d3.zoom().scaleExtent([1, 8]).on("zoom", function (event) {\n      mapContainer.attr("transform", event.transform);\n    });\n    svg.call(zoom);\n\n    // Create tooltip div\n    var tooltip = d3.select("body").append("div").attr("class", "tooltip").style("position", "absolute").style("background", "rgba(0, 0, 0, 0.8)").style("color", "e0e0e0").style("padding", "8px 12px").style("border-radius", "4px").style("pointer-events", "none").style("font-size", "16px").style("display", "none");\n\n    // Draw countries\n    mapContainer.selectAll("path.country").data(topojson.feature(worldGeoJSON, worldGeoJSON.objects.countries).features).enter().append("path").attr("class", "country").attr("d", path).attr("fill", "#ccc").attr("stroke", "#333").attr("stroke-width", 1.5);\n\n    // Draw trade lines and circles for each country\n    var countriesToShow = selectedCountry === "All" ? ["United States", "Russia", "China"] : [selectedCountry];\n    countriesToShow.forEach(function (country) {\n      var validTrades = tradeData[country].map(function (recipient) {\n        var originCoords = countryCentroids[country];\n        var destCountry = normalizeCountryName(recipient.recipient);\n        var destCoords = countryCentroids[destCountry];\n        if (originCoords && destCoords) {\n          var tradeValue = recipient.years[selectedYear] || 0;\n          return {\n            originCountry: country,\n            destCountry: destCountry,\n            originX: projection(originCoords)[0],\n            originY: projection(originCoords)[1],\n            destX: projection(destCoords)[0],\n            destY: projection(destCoords)[1],\n            tradeValue: tradeValue\n          };\n        }\n        return null;\n      }).filter(function (d) {\n        return d && d.tradeValue > 0;\n      });\n      var topRecipients = validTrades.sort(function (a, b) {\n        return b.tradeValue - a.tradeValue;\n      }).slice(0, 5).map(function (d) {\n        return d.destCountry;\n      });\n      var maxTradeValue = d3.max(validTrades, function (d) {\n        return d.tradeValue;\n      }) || 0;\n      var strokeScale = d3.scaleSqrt().domain([0, maxTradeValue]).range([1, 4]);\n\n      // Draw trade lines\n      mapContainer.selectAll("line.trade-line-".concat(country)).data(validTrades).enter().append("line").attr("class", "trade-line-".concat(country)).attr("x1", function (d) {\n        return d.originX;\n      }).attr("y1", function (d) {\n        return d.originY;\n      }).attr("x2", function (d) {\n        return d.destX;\n      }).attr("y2", function (d) {\n        return d.destY;\n      }).attr("stroke", originColors[country]).attr("stroke-width", function (d) {\n        return strokeScale(d.tradeValue);\n      }).on("mouseover", function (event, d) {\n        tooltip.style("display", "block").html("\\n              <strong>Origin:</strong> ".concat(d.originCountry, "<br/>\\n              <strong>Destination:</strong> ").concat(d.destCountry, "<br/>\\n              <strong>Trade Value:</strong> ").concat(d.tradeValue, "B USD\\n            "));\n      }).on("mousemove", function (event) {\n        tooltip.style("left", "".concat(event.pageX + 10, "px")).style("top", "".concat(event.pageY + 10, "px"));\n      }).on("mouseout", function () {\n        tooltip.style("display", "none");\n      });\n\n      // Draw trade circles\n      mapContainer.selectAll("circle.trade-circle-".concat(country)).data(validTrades).enter().append("circle").attr("class", "trade-circle-".concat(country)).attr("cx", function (d) {\n        return d.destX;\n      }).attr("cy", function (d) {\n        return d.destY;\n      }).attr("r", function (d) {\n        return topRecipients.includes(d.destCountry) ? 6 : 3;\n      }).attr("fill", function (d) {\n        return topRecipients.includes(d.destCountry) ? "#8A2BE2" : originColors[country];\n      }).on("mouseover", function (event, d) {\n        tooltip.style("display", "block").html("\\n              <strong>Origin:</strong> ".concat(d.originCountry, "<br/>\\n              <strong>Destination:</strong> ").concat(d.destCountry, "<br/>\\n              <strong>Trade Value:</strong> ").concat(d.tradeValue, "B USD\\n            "));\n      }).on("mousemove", function (event) {\n        tooltip.style("left", "".concat(event.pageX + 10, "px")).style("top", "".concat(event.pageY + 10, "px"));\n      }).on("mouseout", function () {\n        tooltip.style("display", "none");\n      });\n    });\n    return function () {\n      return tooltip.remove();\n    };\n  }, [worldGeoJSON, tradeData, countryCentroids, selectedYear, selectedCountry]);\n\n  // Legend Component\n  var Legend = function Legend() {\n    return /*#__PURE__*/React.createElement("div", {\n      style: {\n        position: \'absolute\',\n        height: \'190px\',\n        width: \'170px\',\n        bottom: \'20px\',\n        left: \'20px\',\n        background: \'rgba(0, 0, 0, 0.9)\',\n        padding: \'10px\',\n        borderRadius: \'8px\',\n        fontSize: \'14px\',\n        color: \'#e0e0e0\'\n      }\n    }, /*#__PURE__*/React.createElement("div", {\n      style: {\n        marginBottom: \'10px\'\n      }\n    }, /*#__PURE__*/React.createElement("strong", null, "Origin Countries")), Object.entries(originColors).filter(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n        country = _ref2[0];\n      return country !== "All";\n    }).map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n        country = _ref4[0],\n        color = _ref4[1];\n      return /*#__PURE__*/React.createElement("div", {\n        key: country,\n        style: {\n          display: \'flex\',\n          alignItems: \'center\',\n          marginBottom: \'10px\'\n        }\n      }, /*#__PURE__*/React.createElement("div", {\n        style: {\n          width: \'12px\',\n          height: \'12px\',\n          backgroundColor: color,\n          marginRight: \'8px\',\n          borderRadius: \'50%\'\n        }\n      }), /*#__PURE__*/React.createElement("span", null, country));\n    }), /*#__PURE__*/React.createElement("div", {\n      style: {\n        marginTop: \'10px\'\n      }\n    }, /*#__PURE__*/React.createElement("strong", null, "Recipient Importance")), /*#__PURE__*/React.createElement("div", {\n      style: {\n        display: \'flex\',\n        alignItems: \'center\',\n        marginTop: \'5px\'\n      }\n    }, /*#__PURE__*/React.createElement("svg", {\n      width: "20",\n      height: "20",\n      style: {\n        marginRight: \'6px\'\n      }\n    }, /*#__PURE__*/React.createElement("circle", {\n      cx: "10",\n      cy: "10",\n      r: "3",\n      fill: "#e0e0e0"\n    })), /*#__PURE__*/React.createElement("span", null, "Normal Recipient")), /*#__PURE__*/React.createElement("div", {\n      style: {\n        display: \'flex\',\n        alignItems: \'center\',\n        marginTop: \'5px\'\n      }\n    }, /*#__PURE__*/React.createElement("svg", {\n      width: "20",\n      height: "20",\n      style: {\n        marginRight: \'6px\'\n      }\n    }, /*#__PURE__*/React.createElement("circle", {\n      cx: "10",\n      cy: "10",\n      r: "6",\n      fill: "#8A2BE2"\n    })), /*#__PURE__*/React.createElement("span", null, "Top Recipient")));\n  };\n  return /*#__PURE__*/React.createElement("div", {\n    style: {\n      position: \'relative\',\n      width: \'100%\'\n    }\n  }, /*#__PURE__*/React.createElement("h3", {\n    style: {\n      textAlign: \'center\',\n      fontSize: \'24px\',\n      color: \'#e74c3c\',\n      paddingTop: \'20px\'\n    }\n  }, "Global Arms Proliferation ", selectedYear), error && /*#__PURE__*/React.createElement("div", {\n    style: {\n      color: \'red\',\n      position: \'absolute\',\n      top: \'60px\',\n      left: \'50%\',\n      transform: \'translateX(-50%)\',\n      background: \'rgba(255,255,255,0.8)\',\n      padding: \'5px\',\n      borderRadius: \'4px\'\n    }\n  }, error), /*#__PURE__*/React.createElement("input", {\n    type: "range",\n    min: "1950",\n    max: "2023",\n    value: selectedYear,\n    onChange: function onChange(e) {\n      return setSelectedYear(+e.target.value);\n    },\n    style: {\n      width: \'80%\',\n      appearance: \'none\',\n      height: \'8px\',\n      backgroundColor: \'gray\',\n      borderRadius: \'5px\',\n      outline: \'none\',\n      margin: \'20px auto 10px\',\n      display: \'block\',\n      accentColor: \'#e74c3c\'\n    }\n  }), /*#__PURE__*/React.createElement("svg", {\n    ref: svgRef,\n    style: {\n      width: \'100%\',\n      height: \'80vh\',\n      border: \'3px solid #e74c3c\',\n      borderRadius: \'8px\'\n    }\n  }), worldGeoJSON && Object.values(tradeData).some(function (data) {\n    return data.length > 0;\n  }) && /*#__PURE__*/React.createElement(Legend, null), /*#__PURE__*/React.createElement("div", {\n    style: {\n      position: \'absolute\',\n      bottom: \'220px\',\n      left: \'20px\',\n      color: \'black\',\n      display: \'flex\',\n      flexDirection: \'column\'\n    }\n  }, /*#__PURE__*/React.createElement("label", {\n    htmlFor: "country",\n    style: {\n      display: \'block\',\n      marginBottom: \'10px\',\n      color: \'#e0e0e0\',\n      fontSize: \'14px\',\n      fontWeight: \'bold\'\n    }\n  }, "Select Country"), /*#__PURE__*/React.createElement("select", {\n    id: "country",\n    value: selectedCountry,\n    onChange: function onChange(e) {\n      return setSelectedCountry(e.target.value);\n    },\n    style: {\n      fontSize: \'12px\',\n      padding: \'6px 10px\',\n      width: \'170px\',\n      color: \'#e0e0e0\',\n      borderRadius: \'8px\',\n      backgroundColor: \'black\'\n    }\n  }, /*#__PURE__*/React.createElement("option", {\n    value: "All"\n  }, "All"), /*#__PURE__*/React.createElement("option", {\n    value: "United States"\n  }, "United States"), /*#__PURE__*/React.createElement("option", {\n    value: "Russia"\n  }, "Russia"), /*#__PURE__*/React.createElement("option", {\n    value: "China"\n  }, "China"))));\n};\n/* harmony default export */ const _003_MigrationMap = ((/* unused pure expression or super */ null && (MigrationMap)));\n;// ./src/components/graphs/003_ForceDirectedGraph.js\nfunction _003_ForceDirectedGraph_slicedToArray(r, e) { return _003_ForceDirectedGraph_arrayWithHoles(r) || _003_ForceDirectedGraph_iterableToArrayLimit(r, e) || _003_ForceDirectedGraph_unsupportedIterableToArray(r, e) || _003_ForceDirectedGraph_nonIterableRest(); }\nfunction _003_ForceDirectedGraph_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _003_ForceDirectedGraph_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _003_ForceDirectedGraph_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _003_ForceDirectedGraph_arrayLikeToArray(r, a) : void 0; } }\nfunction _003_ForceDirectedGraph_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _003_ForceDirectedGraph_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _003_ForceDirectedGraph_arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n\n\nvar ForceDirectedGraph = function ForceDirectedGraph() {\n  var svgRef = (0,react.useRef)();\n  var width = 1200;\n  var height = 670;\n  var dataUrl = "".concat("https://raw.githubusercontent.com/dlee8267/arming-for-stability/main/public", "/data/processed/processed_recipients_of_combined_us_china_russia_arms_hierarchical.json");\n\n  // State for the selected year\n  var _useState = (0,react.useState)(2014),\n    _useState2 = _003_ForceDirectedGraph_slicedToArray(_useState, 2),\n    selectedYear = _useState2[0],\n    setSelectedYear = _useState2[1];\n  (0,react.useEffect)(function () {\n    // Fetch data from the provided URL\n    src/* json */.Pq9(dataUrl).then(function (rawData) {\n      var data = rawData.data; // Access the main data array\n\n      // Clear previous SVG contents\n      var svg = src/* select */.Ltv(svgRef.current);\n      svg.selectAll("*").remove();\n\n      // Process nodes and links based on the dataset structure and selected year\n      var nodesArray = [];\n      var links = [];\n      var nodeMap = new Map(); // For faster lookup and avoiding duplicates\n\n      data.forEach(function (supplierEntry) {\n        var supplier = supplierEntry.supplier;\n        if (!nodeMap.has(supplier)) {\n          nodeMap.set(supplier, {\n            name: supplier,\n            group: \'supplier\'\n          });\n          nodesArray.push({\n            name: supplier,\n            group: \'supplier\'\n          });\n        }\n        supplierEntry.recipients.forEach(function (recipientEntry) {\n          var recipient = recipientEntry.recipient;\n          var tradeValue = recipientEntry.years[selectedYear] || 0;\n\n          // Only add the link if there\'s a trade value for the selected year\n          if (tradeValue > 0) {\n            if (!nodeMap.has(recipient)) {\n              nodeMap.set(recipient, {\n                name: recipient,\n                group: \'recipient\'\n              });\n              nodesArray.push({\n                name: recipient,\n                group: \'recipient\'\n              });\n            }\n            links.push({\n              source: supplier,\n              target: recipient,\n              value: tradeValue\n            });\n          }\n        });\n      });\n\n      // Define color assignments for specific suppliers\n      var colorScale = src/* scaleOrdinal */.UMr().domain([\'United States\', \'Russia\', \'China\', \'India\']).range([\'#4682B4\', \'#DC143C\', \'#FFDB58\', \'#FF671F\']); // Blue for US, Red for Russia, Yellow for China\n\n      var nodeSizeScale = src/* scaleSqrt */.Bv9().domain([0, src/* max */.T9B(links, function (d) {\n        return d.value;\n      })]).range([5, 20]);\n      svg.attr("viewBox", [0, 0, width, height]);\n\n      // Add container group for zooming\n      var container = svg.append("g");\n      var defaultTransform = src/* zoomIdentity */.GSI.translate(width / 8, height / 4) // Pan to adjust initial position\n      .scale(0.75); // Zoom level\n\n      svg.call(src/* zoom */.s_O().scaleExtent([0.5, 5]).on("zoom", function (event) {\n        container.attr("transform", event.transform);\n      }));\n      svg.call(src/* zoom */.s_O().transform, defaultTransform);\n\n      // Set the initial transform on the container\n      container.attr("transform", defaultTransform);\n\n      // Draw links with lower opacity for aesthetic effect\n      var link = container.append("g").attr("stroke-opacity", 0.3).selectAll("line").data(links).join("line").attr("stroke", "#e0e0e0").attr("stroke-width", function (d) {\n        return d.value / 100;\n      });\n\n      // Draw nodes with size and color based on group\n      var node = container.append("g").selectAll("circle").data(nodesArray).join("circle").attr("r", function (d) {\n        var _links$find;\n        return nodeSizeScale(((_links$find = links.find(function (link) {\n          return link.target === d.name || link.source === d.name;\n        })) === null || _links$find === void 0 ? void 0 : _links$find.value) || 1);\n      }).attr("fill", function (d) {\n        if (d.group === \'supplier\') return colorScale(d.name) || \'#e0e0e0\';\n        if (d.name === \'India\') return colorScale(d.name) || \'#e0e0e0\';\n        return \'#e0e0e0\'; // Default color for recipients\n      }).call(src/* drag */.$Er().on("start", function (event, d) {\n        if (!event.active) simulation.alphaTarget(0.3).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n      }).on("drag", function (event, d) {\n        d.fx = event.x;\n        d.fy = event.y;\n      }).on("end", function (event, d) {\n        if (!event.active) simulation.alphaTarget(0);\n        d.fx = null;\n        d.fy = null;\n      }));\n\n      // Add labels for each node\n      var label = container.append("g").selectAll("text").data(nodesArray).join("text").attr("dx", function (d) {\n        var _links$find2;\n        var nodeValue = ((_links$find2 = links.find(function (link) {\n          return link.target === d.name || link.source === d.name;\n        })) === null || _links$find2 === void 0 ? void 0 : _links$find2.value) || 1;\n        return nodeSizeScale(nodeValue) + 5; // Add 5px padding after the radius\n      }).attr("dy", 4).attr("font-size", "16px").attr("fill", "#e0e0e0").text(function (d) {\n        return d.name;\n      });\n\n      // Tooltip for node hover details\n      var tooltip = src/* select */.Ltv("body").append("div").style("position", "absolute").style("background", "rgba(0, 0, 0, 0.8)").style("color", "#e0e0e0").style("padding", "12px").style("border-radius", "8px").style("font-size", "16px").style("pointer-events", "none").style("display", "none");\n      node.on("mouseover", function (event, d) {\n        tooltip.style("display", "block").html("\\n            <strong>".concat(d.name, "</strong>\\n          "));\n      }).on("mousemove", function (event) {\n        tooltip.style("top", "".concat(event.pageY + 10, "px")).style("left", "".concat(event.pageX + 10, "px"));\n      }).on("mouseout", function () {\n        return tooltip.style("display", "none");\n      });\n\n      // Define simulation and apply forces\n      var simulation = src/* forceSimulation */.tXi(nodesArray).force("link", src/* forceLink */.kJC(links).id(function (d) {\n        return d.name;\n      }).distance(75).strength(0.25)).force("charge", src/* forceManyBody */.xJS().strength(-400)).force("center", src/* forceCenter */.jTM(width / 2, height / 2)).on("tick", function () {\n        link.attr("x1", function (d) {\n          return d.source.x;\n        }).attr("y1", function (d) {\n          return d.source.y;\n        }).attr("x2", function (d) {\n          return d.target.x;\n        }).attr("y2", function (d) {\n          return d.target.y;\n        });\n        node.attr("cx", function (d) {\n          return d.x;\n        }).attr("cy", function (d) {\n          return d.y;\n        });\n        label.attr("x", function (d) {\n          return d.x;\n        }).attr("y", function (d) {\n          return d.y;\n        });\n      });\n\n      // Cleanup on unmount\n      return function () {\n        tooltip.remove();\n      };\n    });\n  }, [selectedYear]);\n  return /*#__PURE__*/react.createElement("div", {\n    style: {\n      position: \'relative\',\n      width: \'100%\'\n    }\n  }, /*#__PURE__*/react.createElement("h3", {\n    style: {\n      textAlign: \'center\',\n      fontSize: \'24px\',\n      color: \'#e74c3c\',\n      paddingTop: \'20px\'\n    }\n  }, "Global Arms Trade Network ", selectedYear), /*#__PURE__*/react.createElement("input", {\n    type: "range",\n    min: "1950",\n    max: "2023",\n    value: selectedYear,\n    onChange: function onChange(e) {\n      return setSelectedYear(+e.target.value);\n    },\n    style: {\n      width: \'80%\',\n      appearance: \'none\',\n      height: \'8px\',\n      backgroundColor: \'gray\',\n      borderRadius: \'5px\',\n      outline: \'none\',\n      margin: \'20px auto 10px\',\n      display: \'block\',\n      accentColor: \'#e74c3c\'\n    }\n  }), /*#__PURE__*/react.createElement("svg", {\n    ref: svgRef,\n    style: {\n      width: \'100%\',\n      border: \'3px solid #e74c3c\',\n      borderRadius: \'8px\'\n    }\n  }));\n};\n/* harmony default export */ const _003_ForceDirectedGraph = (ForceDirectedGraph);\n// EXTERNAL MODULE: ./node_modules/@deck.gl/react/dist/deckgl.js + 128 modules\nvar deckgl = __webpack_require__(393);\n// EXTERNAL MODULE: ./node_modules/@deck.gl/layers/dist/arc-layer/arc-layer.js + 6 modules\nvar arc_layer = __webpack_require__(1681);\n// EXTERNAL MODULE: ./node_modules/react-map-gl/dist/esm/index.js + 21 modules\nvar esm = __webpack_require__(3263);\n// EXTERNAL MODULE: ./node_modules/mapbox-gl/dist/mapbox-gl.css\nvar mapbox_gl = __webpack_require__(4518);\n;// ./src/components/graphs/countryCoordinates.js\nvar countryCoordinates = {\n  \'Afghanistan\': [67.709953, 33.93911],\n  \'Albania\': [20.168331, 41.153332],\n  \'Algeria\': [1.659626, 28.033886],\n  \'Angola\': [17.873887, -11.202692],\n  \'Argentina\': [-63.616672, -38.416097],\n  \'Armenia\': [45.038189, 40.069099],\n  \'Australia\': [133.775136, -25.274398],\n  \'Austria\': [14.550072, 47.516231],\n  \'Azerbaijan\': [47.576927, 40.143105],\n  \'Bahrain\': [50.637772, 25.930414],\n  \'Bangladesh\': [90.356331, 23.684994],\n  \'Belarus\': [27.953389, 53.709807],\n  \'Belgium\': [4.469936, 50.503887],\n  \'Bolivia\': [-63.588653, -16.290154],\n  \'Bosnia-Herzegovina\': [17.679076, 43.915886],\n  \'Brazil\': [-51.92528, -14.235004],\n  \'Bulgaria\': [25.48583, 42.733883],\n  \'Cambodia\': [104.990963, 12.565679],\n  \'Canada\': [-106.346771, 56.130366],\n  \'Central African Republic\': [20.939444, 6.611111],\n  \'Chad\': [18.732207, 15.454166],\n  \'Chile\': [-71.542969, -35.675147],\n  \'China\': [104.195397, 35.86166],\n  \'Colombia\': [-74.297333, 4.570868],\n  \'Congo\': [15.827659, -0.228021],\n  \'Costa Rica\': [-83.753428, 9.748917],\n  "Cote d\'Ivoire": [-5.54708, 7.539989],\n  \'Croatia\': [15.2, 45.1],\n  \'Cuba\': [-77.781167, 21.521757],\n  \'Cyprus\': [33.429859, 35.126413],\n  \'Czechia\': [15.472962, 49.817492],\n  \'Czechoslovakia\': [15.5, 49.75],\n  \'Denmark\': [9.501785, 56.26392],\n  \'Dominican Republic\': [-70.162651, 18.735693],\n  \'DR Congo\': [21.758664, -4.038333],\n  \'East_Germany\': [13.404954, 52.520008],\n  \'Ecuador\': [-78.183406, -1.831239],\n  \'Egypt\': [30.802498, 26.820553],\n  \'El Salvador\': [-88.89653, 13.794185],\n  \'Eritrea\': [39.782334, 15.179384],\n  \'Ethiopia\': [40.489673, 9.145],\n  \'Finland\': [25.748151, 61.92411],\n  \'France\': [2.213749, 46.227638],\n  \'Georgia\': [43.356892, 42.315407],\n  \'Germany\': [10.451526, 51.165691],\n  \'Greece\': [21.824312, 39.074208],\n  \'Guatemala\': [-90.230759, 15.783471],\n  \'Guinea\': [-9.696645, 9.945587],\n  \'Guinea-Bissau\': [-15.180413, 11.803749],\n  \'Haiti\': [-72.285215, 18.971187],\n  \'Honduras\': [-86.241905, 15.199999],\n  \'Hungary\': [19.503304, 47.162494],\n  \'India\': [78.96288, 20.593684],\n  \'Indonesia\': [113.921327, -0.789275],\n  \'Iran\': [53.688046, 32.427908],\n  \'Iraq\': [43.679291, 33.223191],\n  \'Ireland\': [-8.24389, 53.41291],\n  \'Israel\': [34.851612, 31.046051],\n  \'Italy\': [12.56738, 41.87194],\n  \'Japan\': [138.252924, 36.204824],\n  \'Jordan\': [36.238414, 30.585164],\n  \'Kazakhstan\': [66.923684, 48.019573],\n  \'Kenya\': [37.906193, -0.023559],\n  \'Kuwait\': [47.481766, 29.31166],\n  \'Laos\': [102.495496, 19.85627],\n  \'Latvia\': [24.603189, 56.879635],\n  \'Lebanon\': [35.862285, 33.854721],\n  \'Libya\': [17.228331, 26.3351],\n  \'Madagascar\': [46.869107, -18.766947],\n  \'Malaysia\': [101.975766, 4.210484],\n  \'Mali\': [-3.996166, 17.570692],\n  \'Mauritania\': [-10.940835, 21.00789],\n  \'Mexico\': [-102.552784, 23.634501],\n  \'Mongolia\': [103.846656, 46.862496],\n  \'Morocco\': [-7.09262, 31.791702],\n  \'Mozambique\': [35.529562, -18.665695],\n  \'Myanmar\': [95.956223, 21.913965],\n  \'Namibia\': [18.49041, -22.95764],\n  \'Nepal\': [84.124008, 28.394857],\n  \'Netherlands\': [5.291266, 52.132633],\n  \'New Zealand\': [174.885971, -40.900557],\n  \'Nicaragua\': [-85.207229, 12.865416],\n  \'Nigeria\': [8.675277, 9.081999],\n  \'North Macedonia\': [21.745275, 41.608635],\n  \'North Yemen\': [48.516388, 15.552727],\n  \'North_Korea\': [127.510093, 40.339852],\n  \'Norway\': [8.468946, 60.472024],\n  \'Oman\': [55.923255, 21.512583],\n  \'Pakistan\': [69.345116, 30.375321],\n  \'Paraguay\': [-58.443832, -23.442503],\n  \'Peru\': [-75.015152, -9.189967],\n  \'Philippines\': [121.774017, 12.879721],\n  \'Poland\': [19.145136, 51.919438],\n  \'Portugal\': [-8.224454, 39.399872],\n  \'Qatar\': [51.183884, 25.354826],\n  \'Romania\': [24.96676, 45.943161],\n  \'Rwanda\': [29.873888, -1.940278],\n  \'Saudi Arabia\': [45.079162, 23.885942],\n  \'Serbia\': [21.005859, 44.016521],\n  \'Sierra Leone\': [-11.779889, 8.460555],\n  \'Singapore\': [103.819836, 1.352083],\n  \'Slovakia\': [19.699024, 48.669026],\n  \'Somalia\': [46.199616, 5.152149],\n  \'South Africa\': [22.937506, -30.559482],\n  \'South Korea\': [127.766922, 35.907757],\n  \'South Sudan\': [29.694924, 7.862685],\n  \'South Vietnam\': [106.6297, 10.8231],\n  \'South Yemen\': [45.0367, 12.805],\n  \'Spain\': [-3.74922, 40.463667],\n  \'Sri Lanka\': [80.771797, 7.873054],\n  \'Sudan\': [30.217636, 12.862807],\n  \'Sweden\': [18.643501, 60.128161],\n  \'Switzerland\': [8.227512, 46.818188],\n  \'Syria\': [38.996815, 34.802075],\n  \'Taiwan\': [120.960515, 23.69781],\n  \'Tajikistan\': [71.276093, 38.861034],\n  \'Tanzania\': [34.888822, -6.369028],\n  \'Thailand\': [100.992541, 15.870032],\n  \'Togo\': [0.824782, 8.619543],\n  \'Tunisia\': [9.537499, 33.886917],\n  \'Turkiye\': [35.243322, 38.963745],\n  \'Turkmenistan\': [59.556278, 38.969719],\n  \'UAE\': [53.847818, 23.424076],\n  \'Uganda\': [32.290275, 1.373333],\n  \'Ukraine\': [31.16558, 48.379433],\n  \'United_Kingdom\': [-3.435973, 55.378051],\n  \'United States\': [-105.53924145160018, 41.29853739464161],\n  \'Uruguay\': [-55.765835, -32.522779],\n  \'Venezuela\': [-66.58973, 6.42375],\n  \'Viet Nam\': [108.277199, 14.058324],\n  \'Yemen\': [48.516388, 15.552727],\n  \'Yugoslavia\': [21.005859, 44.016521],\n  \'Zambia\': [27.849332, -13.133897],\n  \'Zimbabwe\': [29.154857, -19.015438],\n  \'Soviet_Union\': [105.318756, 61.52401],\n  \'Russia\': [105.318756, 61.52401],\n  \'Kyrgyzstan\': [74.766098, 41.20438],\n  \'Slovenia\': [14.995463, 46.151241],\n  \'Moldova\': [28.369885, 47.411631],\n  \'Uzbekistan\': [64.5853, 41.3775],\n  \'Botswana\': [24.6849, -22.3285],\n  \'Burkina Faso\': [-1.5616, 12.2383],\n  \'Cabo Verde\': [-23.0418, 16.5388],\n  \'Cameroon\': [12.3547, 7.3697],\n  \'Djibouti\': [42.5903, 11.8251],\n  \'Estonia\': [25.0136, 58.5953],\n  \'Gabon\': [11.6094, -0.8037],\n  \'Ghana\': [-1.0232, 7.9465],\n  \'Guyana\': [-58.9302, 4.8604],\n  \'Jamaica\': [-77.2975, 18.1096],\n  \'Kosovo\': [20.9029, 42.6026],\n  \'Lithuania\': [23.8813, 55.1694],\n  \'Luxembourg\': [6.1296, 49.8153],\n  \'Maldives\': [73.2207, 3.2028],\n  \'Malta\': [14.3754, 35.9375],\n  \'Montenegro\': [19.3744, 42.7087],\n  \'Niger\': [8.0817, 17.6078],\n  \'Senegal\': [-14.4524, 14.4974],\n  \'Antigua and Barbuda\': [-61.7964, 17.0608],\n  \'Benin\': [2.3158, 9.3077],\n  \'Brunei\': [114.7277, 4.5353],\n  \'Equatorial Guinea\': [10.2679, 1.6508],\n  \'Gambia\': [-15.3101, 13.4432],\n  \'Malawi\': [34.3015, -13.2543],\n  \'Mauritius\': [57.5522, -20.3484],\n  \'Seychelles\': [55.4919, -4.6796],\n  \'Suriname\': [-56.0278, 3.9193],\n  \'Trinidad and Tobago\': [-61.2225, 10.6918]\n};\n/* harmony default export */ const graphs_countryCoordinates = (countryCoordinates);\n;// ./src/components/graphs/003_WorldChord.js\nfunction _003_WorldChord_typeof(o) { "@babel/helpers - typeof"; return _003_WorldChord_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _003_WorldChord_typeof(o); }\nfunction _003_WorldChord_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _003_WorldChord_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _003_WorldChord_ownKeys(Object(t), !0).forEach(function (r) { _003_WorldChord_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : _003_WorldChord_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _003_WorldChord_defineProperty(e, r, t) { return (r = _003_WorldChord_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _003_WorldChord_toPropertyKey(t) { var i = _003_WorldChord_toPrimitive(t, "string"); return "symbol" == _003_WorldChord_typeof(i) ? i : i + ""; }\nfunction _003_WorldChord_toPrimitive(t, r) { if ("object" != _003_WorldChord_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _003_WorldChord_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nfunction _003_WorldChord_slicedToArray(r, e) { return _003_WorldChord_arrayWithHoles(r) || _003_WorldChord_iterableToArrayLimit(r, e) || _003_WorldChord_unsupportedIterableToArray(r, e) || _003_WorldChord_nonIterableRest(); }\nfunction _003_WorldChord_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _003_WorldChord_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _003_WorldChord_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _003_WorldChord_arrayLikeToArray(r, a) : void 0; } }\nfunction _003_WorldChord_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _003_WorldChord_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _003_WorldChord_arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n\n\n\n\n\n\nvar MAPBOX_TOKEN = \'pk.eyJ1Ijoia3dwdGhlZ3JlYXQiLCJhIjoiY20zajljd3Z2MDExZjJycHRvcGE0dm9uYyJ9.9IwsWKd3rM0aVxjXND4LUQ\'; // Replace with your actual Mapbox token\n\n// Function to extract the year from a record dynamically\nfunction extractYearFromRecord(record) {\n  // Example: If the record has a `date` field with a year, extract it\n  if (record.date) {\n    var match = record.date.match(/\\b(20\\d{2})\\b/); // Match years like 2000-2099\n    return match ? parseInt(match[0], 10) : null;\n  }\n\n  // If no valid year can be extracted, return null\n  /*\n  console.warn(\'Year not found for record:\', record);\n  */\n  return null;\n}\nfunction WorldChord() {\n  var _useState = (0,react.useState)([]),\n    _useState2 = _003_WorldChord_slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = (0,react.useState)([]),\n    _useState4 = _003_WorldChord_slicedToArray(_useState3, 2),\n    filteredData = _useState4[0],\n    setFilteredData = _useState4[1];\n  var _useState5 = (0,react.useState)(2014),\n    _useState6 = _003_WorldChord_slicedToArray(_useState5, 2),\n    year = _useState6[0],\n    setYear = _useState6[1]; // Default year for the slider filter\n  var _useState7 = (0,react.useState)(\'all\'),\n    _useState8 = _003_WorldChord_slicedToArray(_useState7, 2),\n    selectedCountry = _useState8[0],\n    setSelectedCountry = _useState8[1];\n  var _useState9 = (0,react.useState)(null),\n    _useState10 = _003_WorldChord_slicedToArray(_useState9, 2),\n    hoveredInfo = _useState10[0],\n    setHoveredInfo = _useState10[1];\n  var countryColors = {\n    "United States": [70, 130, 180],\n    // Steel Blue (rgb format)\n    "Russia": [220, 20, 60],\n    // Crimson (rgb format)\n    "China": [255, 219, 88] // Light Gold (rgb format)\n    // Add more countries and colors as needed\n  };\n  (0,react.useEffect)(function () {\n    // Fetch data from converted_data.json\n    fetch("".concat("https://raw.githubusercontent.com/dlee8267/arming-for-stability/main/public", "/data/processed/converted_data.json")).then(function (response) {\n      return response.json();\n    }).then(function (fetchedData) {\n      // Add the `year` field dynamically if missing\n      var updatedData = fetchedData.map(function (d) {\n        return _003_WorldChord_objectSpread(_003_WorldChord_objectSpread({}, d), {}, {\n          year: d.year || extractYearFromRecord(d) // Add year dynamically if needed\n        });\n      });\n      setData(updatedData);\n\n      // Filter the data for the initial year\n      var initialFilteredData = updatedData.filter(function (d) {\n        return d.year === year;\n      });\n      setFilteredData(initialFilteredData);\n    })["catch"](function (error) {\n      return console.error(\'Error loading JSON data:\', error);\n    });\n  }, [year]);\n  (0,react.useEffect)(function () {\n    // Update filtered data when year changes\n    if (data.length > 0) {\n      var updatedFilteredData = data.filter(function (d) {\n        return d.year === year;\n      });\n      setFilteredData(updatedFilteredData);\n    }\n  }, [year, data]);\n  var filteredByCountry = filteredData.filter(function (d) {\n    if (selectedCountry === \'all\') return true; // Show all if \'all\' is selected\n    return d.origin.toLowerCase() === selectedCountry.toLowerCase(); // Filter by selected country\n  });\n  // Filter out invalid records\n  var validFilteredData = filteredByCountry.filter(function (d) {\n    var source = graphs_countryCoordinates[d.origin];\n    var target = graphs_countryCoordinates[d.destination];\n    if (!["China", "Russia", "United States"].includes(d.origin)) {\n      return false; // Skip records where the origin is not one of these\n    }\n\n    // Log missing countries\n    /*\n    if (!source) console.warn(`Missing source coordinates for: ${d.origin}`);\n    if (!target) console.warn(`Missing target coordinates for: ${d.destination}`);\n    */\n    // Keep only valid records\n    return source && target;\n  });\n  var layers = new arc_layer/* default */.A({\n    id: \'arc-layer\',\n    data: validFilteredData,\n    // Use only validated data\n    getSourcePosition: function getSourcePosition(d) {\n      return graphs_countryCoordinates[d.origin];\n    },\n    getTargetPosition: function getTargetPosition(d) {\n      return graphs_countryCoordinates[d.destination];\n    },\n    getSourceColor: function getSourceColor(d) {\n      return countryColors[d.origin] || [255, 255, 255];\n    },\n    getTargetColor: function getTargetColor(d) {\n      return countryColors[d.origin] || [0, 128, 255];\n    },\n    // Default to blue if country color is missing\n    getWidth: function getWidth(d) {\n      return Math.log(d.quantity + 1);\n    },\n    pickable: true,\n    getTooltip: function getTooltip(_ref) {\n      var object = _ref.object;\n      return object ? "".concat(object.origin, " to ").concat(object.destination, ": ").concat(object.quantity, " ").concat(object.weapon, " (").concat(object.year, ")") : null;\n    }\n  });\n  return /*#__PURE__*/react.createElement("div", {\n    style: {\n      position: \'relative\',\n      width: \'100%\',\n      height: \'80vh\'\n    }\n  }, /*#__PURE__*/react.createElement("h3", {\n    style: {\n      textAlign: \'center\',\n      fontSize: \'24px\',\n      color: \'#e74c3c\',\n      paddingTop: \'20px\'\n    }\n  }, "Global Arms Proliferation ", year), /*#__PURE__*/react.createElement("input", {\n    type: "range",\n    min: "1950",\n    max: "2023",\n    value: year,\n    onChange: function onChange(e) {\n      return setYear(+e.target.value);\n    },\n    style: {\n      width: \'80%\',\n      appearance: \'none\',\n      height: \'8px\',\n      backgroundColor: \'gray\',\n      borderRadius: \'5px\',\n      outline: \'none\',\n      margin: \'20px auto 10px\',\n      display: \'block\',\n      accentColor: \'#e74c3c\'\n    }\n  }), /*#__PURE__*/react.createElement("div", {\n    style: {\n      position: \'absolute\',\n      bottom: 0,\n      width: \'100%\',\n      height: \'calc(100% - 90px)\'\n    }\n  }, /*#__PURE__*/react.createElement(deckgl/* default */.A, {\n    style: {\n      width: \'100%\',\n      height: \'100%\',\n      border: \'3px solid #e74c3c\',\n      borderRadius: \'8px\'\n    },\n    initialViewState: {\n      latitude: 20,\n      longitude: 0,\n      zoom: 1.5,\n      pitch: 30\n    },\n    controller: true,\n    layers: [layers],\n    onHover: function onHover(info) {\n      if (info.object) {\n        setHoveredInfo(info);\n      } else {\n        setHoveredInfo(null);\n      }\n    }\n  }, /*#__PURE__*/react.createElement(esm/* Map */.T5, {\n    mapboxAccessToken: MAPBOX_TOKEN,\n    mapStyle: "mapbox://styles/mapbox/light-v10",\n    attributionControl: false,\n    interactiveLayerIds: [\'arc-layer\']\n  }), hoveredInfo && hoveredInfo.object && /*#__PURE__*/react.createElement("div", {\n    style: {\n      position: \'absolute\',\n      left: hoveredInfo.x,\n      top: hoveredInfo.y,\n      backgroundColor: \'rgba(0, 0, 0, 0.8)\',\n      color: \'e0e0e0\',\n      padding: \'8px 12px\',\n      borderRadius: \'8px\',\n      pointerEvents: \'none\',\n      fontSize: \'16px\',\n      whiteSpace: \'nowrap\'\n    }\n  }, "".concat(hoveredInfo.object.origin, " to ").concat(hoveredInfo.object.destination, ": ").concat(hoveredInfo.object.quantity))), /*#__PURE__*/react.createElement("div", {\n    style: {\n      position: \'absolute\',\n      height: \'80px\',\n      width: \'120px\',\n      top: \'20px\',\n      left: \'20px\',\n      background: \'rgba(0, 0, 0, 0.9)\',\n      padding: \'10px\',\n      borderRadius: \'8px\',\n      fontSize: \'14px\',\n      color: \'#e0e0e0\'\n    }\n  }, /*#__PURE__*/react.createElement("p", {\n    style: {\n      display: \'block\',\n      marginBottom: \'10px\',\n      color: \'#e0e0e0\',\n      fontSize: \'14px\',\n      fontWeight: \'bold\'\n    }\n  }, "Select Country"), /*#__PURE__*/react.createElement("select", {\n    name: "countrySelector",\n    value: selectedCountry,\n    onChange: function onChange(e) {\n      return setSelectedCountry(e.target.value);\n    },\n    style: {\n      position: \'absolute\',\n      padding: \'6px 10px\',\n      width: \'100px\',\n      color: \'#e0e0e0\',\n      backgroundColor: \'black\',\n      borderRadius: \'8px\',\n      fontSize: \'14px\'\n    }\n  }, /*#__PURE__*/react.createElement("option", {\n    value: "all"\n  }, "All"), /*#__PURE__*/react.createElement("option", {\n    value: "United States"\n  }, "US"), /*#__PURE__*/react.createElement("option", {\n    value: "Russia"\n  }, "Russia"), /*#__PURE__*/react.createElement("option", {\n    value: "China"\n  }, "China")))));\n}\n/* harmony default export */ const _003_WorldChord = (WorldChord);\n;// ./src/components/003_alliance.js\n\n\n\n\nvar alliance = function alliance() {\n  return /*#__PURE__*/react.createElement("section", {\n    id: "003"\n  }, /*#__PURE__*/react.createElement("p", {\n    className: "custom-title",\n    style: {\n      cssText: \'margin-top: 0\'\n    }\n  }, "Strength in Alliance & Partnership"), /*#__PURE__*/react.createElement("p", {\n    className: "custom-paragraph"\n  }, "The ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#4682B4"\n    }\n  }, "United States"), " uses arms exports strategically to build alliances and shape regional power dynamics, especially against major powers like", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#DC143C"\n    }\n  }, " Russia"), " and ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#FFDB58"\n    }\n  }, "China"), ". By equipping allies in key areas\\u2014such as ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#D2B48C"\n    }\n  }, "Eastern Europe"), ", ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#D2B48C"\n    }\n  }, "the Middle East"), ", and ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#D2B48C"\n    }\n  }, "Asia-Pacific"), "\\u2014the ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#4682B4"\n    }\n  }, "United States"), " bolsters defense, deters aggression, and strengthens long-term partnerships. These alliances, supported by advanced weaponry, create a coordinated front that counters ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#FFDB58"\n    }\n  }, "China\'s"), " and ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#DC143C"\n    }\n  }, "Russia\'s"), " influence."), /*#__PURE__*/react.createElement("p", {\n    className: "custom-paragraph"\n  }, "In contrast, ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#DC143C"\n    }\n  }, "Russia"), " and ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#FFDB58"\n    }\n  }, "China"), " use arms transfers to establish footholds in their own spheres, particularly in the ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#D2B48C"\n    }\n  }, "Middle East"), ", ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#D2B48C"\n    }\n  }, "Africa"), ", and ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#D2B48C"\n    }\n  }, "Southeast Asia"), ". This distribution evidences an effort by the ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#4682B4"\n    }\n  }, "US"), ", ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#FFDB58"\n    }\n  }, " China"), ", and ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#DC143C"\n    }\n  }, "Russia"), " to expand their spheres of influence or contain each other."), /*#__PURE__*/react.createElement("p", {\n    className: "custom-paragraph"\n  }, "A quick case study, as shown on the map, highlights a significant increase in ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#FFDB58"\n    }\n  }, "China\'s"), " arms trade with ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#D2B48C"\n    }\n  }, "Africa"), " prior to the initiation of the Belt and Road Initiative, which officially started in 2013. This emphasizes China\'s broader geopolitical strategy of leveraging arms trade to secure access to resources and establish influence in developing regions."), /*#__PURE__*/react.createElement("div", {\n    className: "chart-container",\n    style: {\n      width: \'80%\'\n    }\n  }, /*#__PURE__*/react.createElement(_003_WorldChord, null)), /*#__PURE__*/react.createElement("p", {\n    className: "custom-title"\n  }, "An Alternative Way to Visualize International Relations: Force Directed Graph"), /*#__PURE__*/react.createElement("p", {\n    className: "custom-paragraph"\n  }, "This Global Arms Trade Network further illustrates a complex geopolitical chessboard where the ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#4682B4"\n    }\n  }, "United States"), ", ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#DC143C"\n    }\n  }, "Russia"), ", and ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#FFDB58"\n    }\n  }, "China "), "use arms exports to expand influence and secure alliances across strategic regions. Each superpower\\u2019s network centers around key allies:"), /*#__PURE__*/react.createElement("ul", null, /*#__PURE__*/react.createElement("li", null, "The ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#4682B4"\n    }\n  }, "United States"), " supports countries in", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#D2B48C",\n      fontStyle: "italic"\n    }\n  }, " Europe, the Middle East, and Asia-Pacific"), ", reinforcing a defense line against rivals."), /*#__PURE__*/react.createElement("br", null), /*#__PURE__*/react.createElement("li", null, /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#DC143C"\n    }\n  }, "Russia"), " supplies nations in", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#D2B48C",\n      fontStyle: "italic"\n    }\n  }, " Eastern Europe and Central Asia"), " to counter NATO\'s reach."), /*#__PURE__*/react.createElement("br", null), /*#__PURE__*/react.createElement("li", null, /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#FFDB58"\n    }\n  }, "China"), " arms countries in", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#D2B48C",\n      fontStyle: "italic"\n    }\n  }, " Southeast Asia, Africa, and South Asia"), ", expanding its foothold in resource-rich areas."), /*#__PURE__*/react.createElement("br", null), /*#__PURE__*/react.createElement("li", null, "Countries like ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#FF671F"\n    }\n  }, "India"), " illustrate a multilateral approach, balancing relationships with the ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#4682B4"\n    }\n  }, "US"), ", ", /*#__PURE__*/react.createElement("span", {\n    style: {\n      color: "#DC143C"\n    }\n  }, "Russia"), ", and others.")), /*#__PURE__*/react.createElement("p", {\n    className: "custom-paragraph"\n  }, "Through this network, arms transfers reveal interdependent alliances, bolstered influence, and efforts to contain rivals. The map underscores how arms exports are not just about military strength but also about shaping the strategic relationships that define the global order."), /*#__PURE__*/react.createElement("div", {\n    className: "chart-container",\n    style: {\n      width: \'80%\'\n    }\n  }, /*#__PURE__*/react.createElement(_003_ForceDirectedGraph, null)));\n};\n/* harmony default export */ const _003_alliance = (alliance);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUUsQ0FBQyxRQUFRLENBQUM7RUFDcEMsTUFBTSxFQUFFLENBQUMsU0FBUyxFQUFFLFNBQVMsQ0FBQztFQUM5QixNQUFNLEVBQUUsQ0FBQyxTQUFTLEVBQUUsU0FBUyxDQUFDO0VBQzlCLFNBQVMsRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLFFBQVEsQ0FBQztFQUMvQixRQUFRLEVBQUUsQ0FBQyxTQUFTLEVBQUUsU0FBUyxDQUFDO0VBQ2hDLE9BQU8sRUFBRSxDQUFDLFFBQVEsRUFBRSxRQUFRLENBQUM7RUFDN0IsT0FBTyxFQUFFLENBQUMsVUFBVSxFQUFFLFNBQVMsQ0FBQztFQUNoQyxRQUFRLEVBQUUsQ0FBQyxTQUFTLEVBQUUsU0FBUyxDQUFDO0VBQ2hDLFlBQVksRUFBRSxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUM7RUFDcEMsT0FBTyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUMsUUFBUSxDQUFDO0VBQy9CLFFBQVEsRUFBRSxDQUFDLFNBQVMsRUFBRSxRQUFRLENBQUM7RUFDL0IsTUFBTSxFQUFFLENBQUMsVUFBVSxFQUFFLFFBQVEsQ0FBQztFQUM5QixRQUFRLEVBQUUsQ0FBQyxTQUFTLEVBQUUsU0FBUyxDQUFDO0VBQ2hDLFNBQVMsRUFBRSxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUM7RUFDakMsT0FBTyxFQUFFLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQztFQUM3QixZQUFZLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxTQUFTLENBQUM7RUFDckMsVUFBVSxFQUFFLENBQUMsVUFBVSxFQUFFLFFBQVEsQ0FBQztFQUNsQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLFFBQVEsRUFBRSxTQUFTLENBQUM7RUFDOUIsWUFBWSxFQUFFLENBQUMsQ0FBQyxTQUFTLEVBQUUsUUFBUSxDQUFDO0VBQ3BDLFFBQVEsRUFBRSxDQUFDLENBQUMsVUFBVSxFQUFFLFNBQVMsQ0FBQztFQUNsQyxVQUFVLEVBQUUsQ0FBQyxVQUFVLEVBQUUsU0FBUyxDQUFDO0VBQ25DLFNBQVMsRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLFNBQVMsQ0FBQztFQUNoQyxZQUFZLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxTQUFTLENBQUM7RUFDckMsU0FBUyxFQUFFLENBQUMsU0FBUyxFQUFFLFNBQVMsQ0FBQztFQUNqQyxTQUFTLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxRQUFRLENBQUM7RUFDaEMsT0FBTyxFQUFFLENBQUMsU0FBUyxFQUFFLFNBQVMsQ0FBQztFQUMvQixhQUFhLEVBQUUsQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDO0VBQ3BDLGFBQWEsRUFBRSxDQUFDLFVBQVUsRUFBRSxDQUFDLFNBQVMsQ0FBQztFQUN2QyxXQUFXLEVBQUUsQ0FBQyxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUM7RUFDcEMsU0FBUyxFQUFFLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQztFQUMvQixpQkFBaUIsRUFBRSxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUM7RUFDekMsYUFBYSxFQUFFLENBQUMsU0FBUyxFQUFFLFNBQVMsQ0FBQztFQUNyQyxhQUFhLEVBQUUsQ0FBQyxVQUFVLEVBQUUsU0FBUyxDQUFDO0VBQ3RDLFFBQVEsRUFBRSxDQUFDLFFBQVEsRUFBRSxTQUFTLENBQUM7RUFDL0IsTUFBTSxFQUFFLENBQUMsU0FBUyxFQUFFLFNBQVMsQ0FBQztFQUM5QixVQUFVLEVBQUUsQ0FBQyxTQUFTLEVBQUUsU0FBUyxDQUFDO0VBQ2xDLFVBQVUsRUFBRSxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUMsU0FBUyxDQUFDO0VBQ3BDLE1BQU0sRUFBRSxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUMsUUFBUSxDQUFDO0VBQy9CLGFBQWEsRUFBRSxDQUFDLFVBQVUsRUFBRSxTQUFTLENBQUM7RUFDdEMsUUFBUSxFQUFFLENBQUMsU0FBUyxFQUFFLFNBQVMsQ0FBQztFQUNoQyxVQUFVLEVBQUUsQ0FBQyxDQUFDLFFBQVEsRUFBRSxTQUFTLENBQUM7RUFDbEMsT0FBTyxFQUFFLENBQUMsU0FBUyxFQUFFLFNBQVMsQ0FBQztFQUMvQixTQUFTLEVBQUUsQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDO0VBQ2hDLFFBQVEsRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDLFFBQVEsQ0FBQztFQUNoQyxjQUFjLEVBQUUsQ0FBQyxTQUFTLEVBQUUsU0FBUyxDQUFDO0VBQ3RDLFFBQVEsRUFBRSxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUM7RUFDaEMsY0FBYyxFQUFFLENBQUMsQ0FBQyxTQUFTLEVBQUUsUUFBUSxDQUFDO0VBQ3RDLFdBQVcsRUFBRSxDQUFDLFVBQVUsRUFBRSxRQUFRLENBQUM7RUFDbkMsVUFBVSxFQUFFLENBQUMsU0FBUyxFQUFFLFNBQVMsQ0FBQztFQUNsQyxTQUFTLEVBQUUsQ0FBQyxTQUFTLEVBQUUsUUFBUSxDQUFDO0VBQ2hDLGNBQWMsRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDLFNBQVMsQ0FBQztFQUN2QyxhQUFhLEVBQUUsQ0FBQyxVQUFVLEVBQUUsU0FBUyxDQUFDO0VBQ3RDLGFBQWEsRUFBRSxDQUFDLFNBQVMsRUFBRSxRQUFRLENBQUM7RUFDcEMsZUFBZSxFQUFFLENBQUMsUUFBUSxFQUFFLE9BQU8sQ0FBQztFQUNwQyxhQUFhLEVBQUUsQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDO0VBQ2hDLE9BQU8sRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLFNBQVMsQ0FBQztFQUM5QixXQUFXLEVBQUUsQ0FBQyxTQUFTLEVBQUUsUUFBUSxDQUFDO0VBQ2xDLE9BQU8sRUFBRSxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUM7RUFDL0IsUUFBUSxFQUFFLENBQUMsU0FBUyxFQUFFLFNBQVMsQ0FBQztFQUNoQyxhQUFhLEVBQUUsQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDO0VBQ3BDLE9BQU8sRUFBRSxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUM7RUFDL0IsUUFBUSxFQUFFLENBQUMsVUFBVSxFQUFFLFFBQVEsQ0FBQztFQUNoQyxZQUFZLEVBQUUsQ0FBQyxTQUFTLEVBQUUsU0FBUyxDQUFDO0VBQ3BDLFVBQVUsRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDLFFBQVEsQ0FBQztFQUNsQyxVQUFVLEVBQUUsQ0FBQyxVQUFVLEVBQUUsU0FBUyxDQUFDO0VBQ25DLE1BQU0sRUFBRSxDQUFDLFFBQVEsRUFBRSxRQUFRLENBQUM7RUFDNUIsU0FBUyxFQUFFLENBQUMsUUFBUSxFQUFFLFNBQVMsQ0FBQztFQUNoQyxTQUFTLEVBQUUsQ0FBQyxTQUFTLEVBQUUsU0FBUyxDQUFDO0VBQ2pDLGNBQWMsRUFBRSxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUM7RUFDdEMsS0FBSyxFQUFFLENBQUMsU0FBUyxFQUFFLFNBQVMsQ0FBQztFQUM3QixRQUFRLEVBQUUsQ0FBQyxTQUFTLEVBQUUsUUFBUSxDQUFDO0VBQy9CLFNBQVMsRUFBRSxDQUFDLFFBQVEsRUFBRSxTQUFTLENBQUM7RUFDaEMsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDLFFBQVEsRUFBRSxTQUFTLENBQUM7RUFDeEMsZUFBZSxFQUFFLENBQUMsQ0FBQyxrQkFBa0IsRUFBRSxpQkFBaUIsQ0FBQztFQUN6RCxTQUFTLEVBQUUsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDLFNBQVMsQ0FBQztFQUNuQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLFFBQVEsRUFBRSxPQUFPLENBQUM7RUFDakMsVUFBVSxFQUFFLENBQUMsVUFBVSxFQUFFLFNBQVMsQ0FBQztFQUNuQyxPQUFPLEVBQUUsQ0FBQyxTQUFTLEVBQUUsU0FBUyxDQUFDO0VBQy9CLFlBQVksRUFBRSxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUM7RUFDcEMsUUFBUSxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUMsU0FBUyxDQUFDO0VBQ2pDLFVBQVUsRUFBRSxDQUFDLFNBQVMsRUFBRSxDQUFDLFNBQVMsQ0FBQztFQUNuQyxjQUFjLEVBQUUsQ0FBQyxVQUFVLEVBQUUsUUFBUSxDQUFDO0VBQ3RDLFFBQVEsRUFBRSxDQUFDLFVBQVUsRUFBRSxRQUFRLENBQUM7RUFDaEMsWUFBWSxFQUFFLENBQUMsU0FBUyxFQUFFLFFBQVEsQ0FBQztFQUNuQyxVQUFVLEVBQUUsQ0FBQyxTQUFTLEVBQUUsU0FBUyxDQUFDO0VBQ2xDLFNBQVMsRUFBRSxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUM7RUFDakMsWUFBWSxFQUFFLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQztFQUNoQyxVQUFVLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxPQUFPLENBQUM7RUFDL0IsY0FBYyxFQUFFLENBQUMsQ0FBQyxNQUFNLEVBQUUsT0FBTyxDQUFDO0VBQ2xDLFlBQVksRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQztFQUNqQyxVQUFVLEVBQUUsQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDO0VBQzdCLFVBQVUsRUFBRSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUM7RUFDOUIsU0FBUyxFQUFFLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQztFQUM3QixPQUFPLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxNQUFNLENBQUM7RUFDM0IsT0FBTyxFQUFFLENBQUMsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDO0VBQzFCLFFBQVEsRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQztFQUM1QixTQUFTLEVBQUUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUM7RUFDOUIsUUFBUSxFQUFFLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQztFQUM1QixXQUFXLEVBQUUsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDO0VBQy9CLFlBQVksRUFBRSxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUM7RUFDL0IsVUFBVSxFQUFFLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQztFQUM3QixPQUFPLEVBQUUsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDO0VBQzNCLFlBQVksRUFBRSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUM7RUFDaEMsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQztFQUMxQixTQUFTLEVBQUUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUM7RUFDOUIscUJBQXFCLEVBQUUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUM7RUFDMUMsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQztFQUN6QixRQUFRLEVBQUUsQ0FBQyxRQUFRLEVBQUUsTUFBTSxDQUFDO0VBQzVCLG1CQUFtQixFQUFFLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQztFQUN0QyxRQUFRLEVBQUUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUM7RUFDN0IsUUFBUSxFQUFFLENBQUMsT0FBTyxFQUFFLENBQUMsT0FBTyxDQUFDO0VBQzdCLFdBQVcsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDLE9BQU8sQ0FBQztFQUNoQyxZQUFZLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxNQUFNLENBQUM7RUFDaEMsVUFBVSxFQUFFLENBQUMsQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDO0VBQzlCLHFCQUFxQixFQUFFLENBQUMsQ0FBQyxPQUFPLEVBQUUsT0FBTztBQUMzQyxDQUFDO0FBRUQsZ0VBQWVBLGtCQUFrQixFOzs7Ozs7Ozs7Ozs7OztBQzNLa0I7QUFDZjtBQUNPO0FBQ1I7QUFDRztBQUNnQjtBQUV0RCxJQUFNRyxZQUFZLEdBQUcsZ0dBQWdHLENBQUMsQ0FBQzs7QUFFdkg7QUFDQSxTQUFTQyxxQkFBcUJBLENBQUNDLE1BQU0sRUFBRTtFQUNyQztFQUNBLElBQUlBLE1BQU0sQ0FBQ0MsSUFBSSxFQUFFO0lBQ2YsSUFBTUMsS0FBSyxHQUFHRixNQUFNLENBQUNDLElBQUksQ0FBQ0MsS0FBSyxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUM7SUFDbEQsT0FBT0EsS0FBSyxHQUFHQyxRQUFRLENBQUNELEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsR0FBRyxJQUFJO0VBQzlDOztFQUVBO0VBQ0E7QUFDRjtBQUNBO0VBQ0UsT0FBTyxJQUFJO0FBQ2I7QUFFQSxTQUFTRSxVQUFVQSxDQUFBLEVBQUc7RUFDcEIsSUFBQXROLFNBQUEsR0FBd0JQLGtCQUFRLENBQUMsRUFBRSxDQUFDO0lBQUFRLFVBQUEsR0FBQUMsNkJBQUEsQ0FBQUYsU0FBQTtJQUE3QmtELElBQUksR0FBQWpELFVBQUE7SUFBRXNOLE9BQU8sR0FBQXROLFVBQUE7RUFDcEIsSUFBQUksVUFBQSxHQUF3Q1osa0JBQVEsQ0FBQyxFQUFFLENBQUM7SUFBQWEsVUFBQSxHQUFBSiw2QkFBQSxDQUFBRyxVQUFBO0lBQTdDbU4sWUFBWSxHQUFBbE4sVUFBQTtJQUFFbU4sZUFBZSxHQUFBbk4sVUFBQTtFQUNwQyxJQUFBRyxVQUFBLEdBQXdCaEIsa0JBQVEsQ0FBQyxJQUFJLENBQUM7SUFBQWlCLFVBQUEsR0FBQVIsNkJBQUEsQ0FBQU8sVUFBQTtJQUEvQmlOLElBQUksR0FBQWhOLFVBQUE7SUFBRWlOLE9BQU8sR0FBQWpOLFVBQUEsSUFBbUIsQ0FBQztFQUN4QyxJQUFBRyxVQUFBLEdBQThDcEIsa0JBQVEsQ0FBQyxLQUFLLENBQUM7SUFBQXFCLFVBQUEsR0FBQVosNkJBQUEsQ0FBQVcsVUFBQTtJQUF0RE0sZUFBZSxHQUFBTCxVQUFBO0lBQUVNLGtCQUFrQixHQUFBTixVQUFBO0VBQzFDLElBQUFHLFVBQUEsR0FBc0N4QixrQkFBUSxDQUFDLElBQUksQ0FBQztJQUFBeUIsV0FBQSxHQUFBaEIsNkJBQUEsQ0FBQWUsVUFBQTtJQUE3QzJNLFdBQVcsR0FBQTFNLFdBQUE7SUFBRTJNLGNBQWMsR0FBQTNNLFdBQUE7RUFFbEMsSUFBTTRNLGFBQWEsR0FBRztJQUNwQixlQUFlLEVBQUUsQ0FBQyxFQUFFLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQztJQUFFO0lBQ2pDLFFBQVEsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDO0lBQUU7SUFDekIsT0FBTyxFQUFFLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBRTtJQUN6QjtFQUNGLENBQUM7RUFFRHZPLG1CQUFTLENBQUMsWUFBTTtJQUNkO0lBQ0F3TyxLQUFLLElBQUFwTSxNQUFBLENBQUlDLDZFQUFzQix3Q0FBcUMsQ0FBQyxDQUNsRVEsSUFBSSxDQUFDLFVBQUE0TCxRQUFRO01BQUEsT0FBSUEsUUFBUSxDQUFDN0wsSUFBSSxDQUFDLENBQUM7SUFBQSxFQUFDLENBQ2pDQyxJQUFJLENBQUMsVUFBQTZMLFdBQVcsRUFBSTtNQUVuQjtNQUNBLElBQU1DLFdBQVcsR0FBR0QsV0FBVyxDQUFDN0ksR0FBRyxDQUFDLFVBQUFhLENBQUM7UUFBQSxPQUFBNUMsNEJBQUEsQ0FBQUEsNEJBQUEsS0FDaEM0QyxDQUFDO1VBQ0p5SCxJQUFJLEVBQUV6SCxDQUFDLENBQUN5SCxJQUFJLElBQUlULHFCQUFxQixDQUFDaEgsQ0FBQyxDQUFDLENBQUM7UUFBQTtNQUFBLENBQ3pDLENBQUM7TUFFSHNILE9BQU8sQ0FBQ1csV0FBVyxDQUFDOztNQUVwQjtNQUNBLElBQU1DLG1CQUFtQixHQUFHRCxXQUFXLENBQUNsSSxNQUFNLENBQUMsVUFBQUMsQ0FBQztRQUFBLE9BQUlBLENBQUMsQ0FBQ3lILElBQUksS0FBS0EsSUFBSTtNQUFBLEVBQUM7TUFDcEVELGVBQWUsQ0FBQ1UsbUJBQW1CLENBQUM7SUFDdEMsQ0FBQyxDQUFDLFNBQ0ksQ0FBQyxVQUFBNU0sS0FBSztNQUFBLE9BQUk2TSxPQUFPLENBQUM3TSxLQUFLLENBQUMsMEJBQTBCLEVBQUVBLEtBQUssQ0FBQztJQUFBLEVBQUM7RUFDckUsQ0FBQyxFQUFFLENBQUNtTSxJQUFJLENBQUMsQ0FBQztFQUVWbk8sbUJBQVMsQ0FBQyxZQUFNO0lBQ2Q7SUFDQSxJQUFJMkQsSUFBSSxDQUFDTyxNQUFNLEdBQUcsQ0FBQyxFQUFFO01BQ25CLElBQU00SyxtQkFBbUIsR0FBR25MLElBQUksQ0FBQzhDLE1BQU0sQ0FBQyxVQUFBQyxDQUFDO1FBQUEsT0FBSUEsQ0FBQyxDQUFDeUgsSUFBSSxLQUFLQSxJQUFJO01BQUEsRUFBQztNQUM3REQsZUFBZSxDQUFDWSxtQkFBbUIsQ0FBQztJQUN0QztFQUNGLENBQUMsRUFBRSxDQUFDWCxJQUFJLEVBQUV4SyxJQUFJLENBQUMsQ0FBQztFQUVoQixJQUFNb0wsaUJBQWlCLEdBQUdkLFlBQVksQ0FBQ3hILE1BQU0sQ0FBQyxVQUFBQyxDQUFDLEVBQUk7SUFDakQsSUFBSTlFLGVBQWUsS0FBSyxLQUFLLEVBQUUsT0FBTyxJQUFJLENBQUMsQ0FBQztJQUM1QyxPQUFPOEUsQ0FBQyxDQUFDc0ksTUFBTSxDQUFDQyxXQUFXLENBQUMsQ0FBQyxLQUFLck4sZUFBZSxDQUFDcU4sV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDO0VBQ25FLENBQUMsQ0FBQztFQUNGO0VBQ0EsSUFBTUMsaUJBQWlCLEdBQUdILGlCQUFpQixDQUFDdEksTUFBTSxDQUFDLFVBQUFDLENBQUMsRUFBSTtJQUN0RCxJQUFNNEUsTUFBTSxHQUFHZ0MseUJBQWtCLENBQUM1RyxDQUFDLENBQUNzSSxNQUFNLENBQUM7SUFDM0MsSUFBTXBGLE1BQU0sR0FBRzBELHlCQUFrQixDQUFDNUcsQ0FBQyxDQUFDeUksV0FBVyxDQUFDO0lBRWhELElBQUksQ0FBQyxDQUFDLE9BQU8sRUFBRSxRQUFRLEVBQUUsZUFBZSxDQUFDLENBQUMxSCxRQUFRLENBQUNmLENBQUMsQ0FBQ3NJLE1BQU0sQ0FBQyxFQUFFO01BQzVELE9BQU8sS0FBSyxDQUFDLENBQUM7SUFDaEI7O0lBRUE7SUFDQTtBQUNKO0FBQ0E7QUFDQTtJQUNJO0lBQ0EsT0FBTzFELE1BQU0sSUFBSTFCLE1BQU07RUFDekIsQ0FBQyxDQUFDO0VBRUYsSUFBTXdGLE1BQU0sR0FBRyxJQUFJNUIsd0JBQVEsQ0FBQztJQUMxQmpELEVBQUUsRUFBRSxXQUFXO0lBQ2Y1RyxJQUFJLEVBQUV1TCxpQkFBaUI7SUFBRTtJQUN6QkcsaUJBQWlCLEVBQUUsU0FBbkJBLGlCQUFpQkEsQ0FBRTNJLENBQUM7TUFBQSxPQUFJNEcseUJBQWtCLENBQUM1RyxDQUFDLENBQUNzSSxNQUFNLENBQUM7SUFBQTtJQUNwRE0saUJBQWlCLEVBQUUsU0FBbkJBLGlCQUFpQkEsQ0FBRTVJLENBQUM7TUFBQSxPQUFJNEcseUJBQWtCLENBQUM1RyxDQUFDLENBQUN5SSxXQUFXLENBQUM7SUFBQTtJQUN6REksY0FBYyxFQUFFLFNBQWhCQSxjQUFjQSxDQUFFN0ksQ0FBQztNQUFBLE9BQUk2SCxhQUFhLENBQUM3SCxDQUFDLENBQUNzSSxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDO0lBQUE7SUFDL0RRLGNBQWMsRUFBRSxTQUFoQkEsY0FBY0EsQ0FBRTlJLENBQUM7TUFBQSxPQUFJNkgsYUFBYSxDQUFDN0gsQ0FBQyxDQUFDc0ksTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQztJQUFBO0lBQUU7SUFDL0RTLFFBQVEsRUFBRSxTQUFWQSxRQUFRQSxDQUFFL0ksQ0FBQztNQUFBLE9BQUlnSixJQUFJLENBQUNDLEdBQUcsQ0FBQ2pKLENBQUMsQ0FBQ2tKLFFBQVEsR0FBRyxDQUFDLENBQUM7SUFBQTtJQUN2Q0MsUUFBUSxFQUFFLElBQUk7SUFDZEMsVUFBVSxFQUFFLFNBQVpBLFVBQVVBLENBQUF4SCxJQUFBLEVBQWtCO01BQUEsSUFBYnlILE1BQU0sR0FBQXpILElBQUEsQ0FBTnlILE1BQU07TUFDbkIsT0FBT0EsTUFBTSxNQUFBM04sTUFBQSxDQUNOMk4sTUFBTSxDQUFDZixNQUFNLFVBQUE1TSxNQUFBLENBQU8yTixNQUFNLENBQUNaLFdBQVcsUUFBQS9NLE1BQUEsQ0FBSzJOLE1BQU0sQ0FBQ0gsUUFBUSxPQUFBeE4sTUFBQSxDQUFJMk4sTUFBTSxDQUFDQyxNQUFNLFFBQUE1TixNQUFBLENBQUsyTixNQUFNLENBQUM1QixJQUFJLFNBQzlGLElBQUk7SUFDVjtFQUNGLENBQUMsQ0FBQztFQUVGLG9CQUNFcE8sbUJBQUE7SUFBS3dFLEtBQUssRUFBRTtNQUFFcUQsUUFBUSxFQUFFLFVBQVU7TUFBRXJILEtBQUssRUFBRSxNQUFNO01BQUVDLE1BQU0sRUFBRTtJQUFNO0VBQUUsZ0JBRWpFVCxtQkFBQTtJQUFJd0UsS0FBSyxFQUFFO01BQUM2RSxTQUFTLEVBQUUsUUFBUTtNQUFFbEIsUUFBUSxFQUFFLE1BQU07TUFBRUMsS0FBSyxFQUFFLFNBQVM7TUFBRWtCLFVBQVUsRUFBRTtJQUFPO0VBQUUsR0FBQyw0QkFDN0QsRUFBQzhFLElBQzNCLENBQUMsZUFFTHBPLG1CQUFBO0lBQ0l3SixJQUFJLEVBQUMsT0FBTztJQUNaQyxHQUFHLEVBQUMsTUFBTTtJQUNWdkMsR0FBRyxFQUFDLE1BQU07SUFDVndDLEtBQUssRUFBRTBFLElBQUs7SUFDWnpFLFFBQVEsRUFBRSxTQUFWQSxRQUFRQSxDQUFHQyxDQUFDO01BQUEsT0FBS3lFLE9BQU8sQ0FBQyxDQUFDekUsQ0FBQyxDQUFDQyxNQUFNLENBQUNILEtBQUssQ0FBQztJQUFBLENBQUM7SUFDMUNsRixLQUFLLEVBQUU7TUFDTGhFLEtBQUssRUFBRSxLQUFLO01BQ1pzSixVQUFVLEVBQUUsTUFBTTtNQUNsQnJKLE1BQU0sRUFBRSxLQUFLO01BQ2JxSSxlQUFlLEVBQUUsTUFBTTtNQUN2QlosWUFBWSxFQUFFLEtBQUs7TUFDbkI2QixPQUFPLEVBQUUsTUFBTTtNQUNmQyxNQUFNLEVBQUUsZ0JBQWdCO01BQ3hCcEIsT0FBTyxFQUFFLE9BQU87TUFDaEJxQixXQUFXLEVBQUU7SUFDZjtFQUFFLENBQ0wsQ0FBQyxlQUNGakssbUJBQUE7SUFBS3dFLEtBQUssRUFBRTtNQUFDcUQsUUFBUSxFQUFFLFVBQVU7TUFBRUMsTUFBTSxFQUFFLENBQUM7TUFBRXRILEtBQUssRUFBRSxNQUFNO01BQUVDLE1BQU0sRUFBRTtJQUFtQjtFQUFFLGdCQUN4RlQsbUJBQUEsQ0FBQ3dOLHFCQUFNO0lBQ0xoSixLQUFLLEVBQUU7TUFBRWhFLEtBQUssRUFBRSxNQUFNO01BQUVDLE1BQU0sRUFBRSxNQUFNO01BQUUwSixNQUFNLEVBQUUsbUJBQW1CO01BQUVqQyxZQUFZLEVBQUU7SUFBTSxDQUFFO0lBQzNGZ0ksZ0JBQWdCLEVBQUU7TUFDaEJDLFFBQVEsRUFBRSxFQUFFO01BQ1pDLFNBQVMsRUFBRSxDQUFDO01BQ1poTCxJQUFJLEVBQUUsR0FBRztNQUNUaUwsS0FBSyxFQUFFO0lBQ1QsQ0FBRTtJQUNGQyxVQUFVLEVBQUUsSUFBSztJQUNqQmpCLE1BQU0sRUFBRSxDQUFDQSxNQUFNLENBQUU7SUFBQWtCLE9BQU8sRUFBRSxTQUFUQSxPQUFPQSxDQUFHQyxJQUFJLEVBQUs7TUFDbEMsSUFBSUEsSUFBSSxDQUFDUixNQUFNLEVBQUU7UUFDZnpCLGNBQWMsQ0FBQ2lDLElBQUksQ0FBQztNQUN0QixDQUFDLE1BQU07UUFDTGpDLGNBQWMsQ0FBQyxJQUFJLENBQUM7TUFDdEI7SUFDRjtFQUFFLGdCQUVGdk8sbUJBQUEsQ0FBQytLLGVBQUc7SUFDRjBGLGlCQUFpQixFQUFFL0MsWUFBYTtJQUNoQ2dELFFBQVEsRUFBQyxrQ0FBa0M7SUFDM0NDLGtCQUFrQixFQUFFLEtBQU07SUFDMUJDLG1CQUFtQixFQUFFLENBQUMsV0FBVztFQUFFLENBQ3BDLENBQUMsRUFDRHRDLFdBQVcsSUFBSUEsV0FBVyxDQUFDMEIsTUFBTSxpQkFDOUJoUSxtQkFBQTtJQUNFd0UsS0FBSyxFQUFFO01BQ0xxRCxRQUFRLEVBQUUsVUFBVTtNQUNwQkUsSUFBSSxFQUFFdUcsV0FBVyxDQUFDN0IsQ0FBQztNQUNuQmxELEdBQUcsRUFBRStFLFdBQVcsQ0FBQzNCLENBQUM7TUFDbEI3RCxlQUFlLEVBQUUsb0JBQW9CO01BQ3JDVixLQUFLLEVBQUUsUUFBUTtNQUNmSCxPQUFPLEVBQUUsVUFBVTtNQUNuQkMsWUFBWSxFQUFFLEtBQUs7TUFDbkIySSxhQUFhLEVBQUUsTUFBTTtNQUNyQjFJLFFBQVEsRUFBRSxNQUFNO01BQ2hCMkksVUFBVSxFQUFFO0lBQ2Q7RUFBRSxNQUFBek8sTUFBQSxDQUVFaU0sV0FBVyxDQUFDMEIsTUFBTSxDQUFDZixNQUFNLFVBQUE1TSxNQUFBLENBQU9pTSxXQUFXLENBQUMwQixNQUFNLENBQUNaLFdBQVcsUUFBQS9NLE1BQUEsQ0FBS2lNLFdBQVcsQ0FBQzBCLE1BQU0sQ0FBQ0gsUUFBUSxDQUMvRixDQUVILENBQUMsZUFFWDdQLG1CQUFBO0lBQUt3RSxLQUFLLEVBQUU7TUFDVnFELFFBQVEsRUFBRSxVQUFVO01BQ3BCcEgsTUFBTSxFQUFFLE1BQU07TUFDZEQsS0FBSyxFQUFFLE9BQU87TUFDZCtJLEdBQUcsRUFBRSxNQUFNO01BQ1h4QixJQUFJLEVBQUUsTUFBTTtNQUNaQyxVQUFVLEVBQUUsb0JBQW9CO01BQ2hDQyxPQUFPLEVBQUUsTUFBTTtNQUNmQyxZQUFZLEVBQUUsS0FBSztNQUNuQkMsUUFBUSxFQUFFLE1BQU07TUFDaEJDLEtBQUssRUFBRTtJQUNUO0VBQUUsZ0JBQ0FwSSxtQkFBQTtJQUFHd0UsS0FBSyxFQUFFO01BQUVvRSxPQUFPLEVBQUUsT0FBTztNQUFFUCxZQUFZLEVBQUUsTUFBTTtNQUFFRCxLQUFLLEVBQUUsU0FBUztNQUFFRCxRQUFRLEVBQUUsTUFBTTtNQUFFb0MsVUFBVSxFQUFFO0lBQU07RUFBRSxHQUFDLGdCQUFpQixDQUFDLGVBRS9IdkssbUJBQUE7SUFDRTJDLElBQUksRUFBQyxpQkFBaUI7SUFDdEIrRyxLQUFLLEVBQUU3SCxlQUFnQjtJQUN2QjhILFFBQVEsRUFBRSxTQUFWQSxRQUFRQSxDQUFHQyxDQUFDO01BQUEsT0FBSzlILGtCQUFrQixDQUFDOEgsQ0FBQyxDQUFDQyxNQUFNLENBQUNILEtBQUssQ0FBQztJQUFBLENBQUM7SUFDcERsRixLQUFLLEVBQUU7TUFDTHFELFFBQVEsRUFBRSxVQUFVO01BQ3BCSSxPQUFPLEVBQUUsVUFBVTtNQUNuQnpILEtBQUssRUFBRSxPQUFPO01BQ2Q0SCxLQUFLLEVBQUUsU0FBUztNQUNoQlUsZUFBZSxFQUFFLE9BQU87TUFDeEJaLFlBQVksRUFBRSxLQUFLO01BQ25CQyxRQUFRLEVBQUU7SUFDWjtFQUFFLGdCQUVGbkksbUJBQUE7SUFBUTBKLEtBQUssRUFBQztFQUFLLEdBQUMsS0FBVyxDQUFDLGVBQ2hDMUosbUJBQUE7SUFBUTBKLEtBQUssRUFBQztFQUFlLEdBQUMsSUFBVSxDQUFDLGVBQ3pDMUosbUJBQUE7SUFBUTBKLEtBQUssRUFBQztFQUFRLEdBQUMsUUFBYyxDQUFDLGVBQ3RDMUosbUJBQUE7SUFBUTBKLEtBQUssRUFBQztFQUFPLEdBQUMsT0FBYSxDQUM3QixDQUNILENBQ0YsQ0FDRixDQUFDO0FBRVY7QUFFQSxzREFBZXNFLFVBQVUsRTs7QUNyTkM7QUFDMkI7QUFDWTtBQUNoQjtBQUVqRCxJQUFNK0MsUUFBUSxHQUFHLFNBQVhBLFFBQVFBLENBQUEsRUFBUztFQUNyQixvQkFDRS9RLG1CQUFBO0lBQVN3SyxFQUFFLEVBQUM7RUFBSyxnQkFDZnhLLG1CQUFBO0lBQUdnUixTQUFTLEVBQUMsY0FBYztJQUFDeE0sS0FBSyxFQUFFO01BQUV5TSxPQUFPLEVBQUU7SUFBZ0I7RUFBRSxHQUFDLG9DQUU5RCxDQUFDLGVBRUpqUixtQkFBQTtJQUFHZ1IsU0FBUyxFQUFDO0VBQWtCLEdBQUMsTUFDMUIsZUFBQWhSLG1CQUFBO0lBQU13RSxLQUFLLEVBQUU7TUFBRTRELEtBQUssRUFBRTtJQUFVO0VBQUUsR0FBQyxlQUFtQixDQUFDLCtIQUMzRCxlQUFBcEksbUJBQUE7SUFBTXdFLEtBQUssRUFBRTtNQUFFNEQsS0FBSyxFQUFFO0lBQVU7RUFBRSxHQUFDLFNBQWEsQ0FBQyxTQUFLLGVBQUFwSSxtQkFBQTtJQUFNd0UsS0FBSyxFQUFFO01BQUU0RCxLQUFLLEVBQUU7SUFBVTtFQUFFLEdBQUMsT0FBVyxDQUFDLG9EQUM1RCxlQUFBcEksbUJBQUE7SUFBTXdFLEtBQUssRUFBRTtNQUFFNEQsS0FBSyxFQUFFO0lBQVU7RUFBRSxHQUFDLGdCQUFvQixDQUFDLE1BQUUsZUFBQXBJLG1CQUFBO0lBQU13RSxLQUFLLEVBQUU7TUFBRTRELEtBQUssRUFBRTtJQUFVO0VBQUUsR0FBQyxpQkFBcUIsQ0FBQyxVQUFNLGVBQUFwSSxtQkFBQTtJQUFNd0UsS0FBSyxFQUFFO01BQUU0RCxLQUFLLEVBQUU7SUFBVTtFQUFFLEdBQUMsY0FBa0IsQ0FBQyxjQUFLLGVBQUFwSSxtQkFBQTtJQUFNd0UsS0FBSyxFQUFFO01BQUU0RCxLQUFLLEVBQUU7SUFBVTtFQUFFLEdBQUMsZUFBbUIsQ0FBQyw0S0FDMUwsZUFBQXBJLG1CQUFBO0lBQU13RSxLQUFLLEVBQUU7TUFBRTRELEtBQUssRUFBRTtJQUFVO0VBQUUsR0FBQyxTQUFhLENBQUMsU0FBSyxlQUFBcEksbUJBQUE7SUFBTXdFLEtBQUssRUFBRTtNQUFFNEQsS0FBSyxFQUFFO0lBQVU7RUFBRSxHQUFDLFVBQWMsQ0FBQyxlQUNqTSxDQUFDLGVBRUpwSSxtQkFBQTtJQUFHZ1IsU0FBUyxFQUFDO0VBQWtCLEdBQUMsZUFDakIsZUFBQWhSLG1CQUFBO0lBQU13RSxLQUFLLEVBQUU7TUFBRTRELEtBQUssRUFBRTtJQUFVO0VBQUUsR0FBQyxRQUFZLENBQUMsU0FBSyxlQUFBcEksbUJBQUE7SUFBTXdFLEtBQUssRUFBRTtNQUFFNEQsS0FBSyxFQUFFO0lBQVU7RUFBRSxHQUFDLE9BQVcsQ0FBQyx5RkFBcUYsZUFBQXBJLG1CQUFBO0lBQU13RSxLQUFLLEVBQUU7TUFBRTRELEtBQUssRUFBRTtJQUFVO0VBQUUsR0FBQyxhQUFpQixDQUFDLE1BQUUsZUFBQXBJLG1CQUFBO0lBQU13RSxLQUFLLEVBQUU7TUFBRTRELEtBQUssRUFBRTtJQUFVO0VBQUUsR0FBQyxRQUFZLENBQUMsVUFBTSxlQUFBcEksbUJBQUE7SUFBTXdFLEtBQUssRUFBRTtNQUFFNEQsS0FBSyxFQUFFO0lBQVU7RUFBRSxHQUFDLGdCQUFvQixDQUFDLG1EQUM5VCxlQUFBcEksbUJBQUE7SUFBTXdFLEtBQUssRUFBRTtNQUFFNEQsS0FBSyxFQUFFO0lBQVU7RUFBRSxHQUFDLElBQVEsQ0FBQyxNQUFFLGVBQUFwSSxtQkFBQTtJQUFNd0UsS0FBSyxFQUFFO01BQUU0RCxLQUFLLEVBQUU7SUFBVTtFQUFFLEdBQUMsUUFBWSxDQUFDLFVBQU0sZUFBQXBJLG1CQUFBO0lBQU13RSxLQUFLLEVBQUU7TUFBRTRELEtBQUssRUFBRTtJQUFVO0VBQUUsR0FBQyxRQUFZLENBQUMsZ0VBQ2hNLENBQUMsZUFFSnBJLG1CQUFBO0lBQUdnUixTQUFTLEVBQUM7RUFBa0IsR0FBQyxnRkFDZ0QsZUFBQWhSLG1CQUFBO0lBQU13RSxLQUFLLEVBQUU7TUFBRTRELEtBQUssRUFBRTtJQUFVO0VBQUUsR0FBQyxTQUFhLENBQUMscUJBQWlCLGVBQUFwSSxtQkFBQTtJQUFNd0UsS0FBSyxFQUFFO01BQUU0RCxLQUFLLEVBQUU7SUFBVTtFQUFFLEdBQUMsUUFBWSxDQUFDLDJQQUMvTCxDQUFDLGVBRUpwSSxtQkFBQTtJQUFLZ1IsU0FBUyxFQUFDLGlCQUFpQjtJQUFDeE0sS0FBSyxFQUFFO01BQUVoRSxLQUFLLEVBQUU7SUFBTTtFQUFFLGdCQUN2RFIsbUJBQUEsQ0FBQ2dPLGVBQVUsTUFBRSxDQUNWLENBQUMsZUFFTmhPLG1CQUFBO0lBQUdnUixTQUFTLEVBQUM7RUFBYyxHQUFDLCtFQUV6QixDQUFDLGVBRUpoUixtQkFBQTtJQUFHZ1IsU0FBUyxFQUFDO0VBQWtCLEdBQUMsaUdBQ2lFLGVBQUFoUixtQkFBQTtJQUFNd0UsS0FBSyxFQUFFO01BQUU0RCxLQUFLLEVBQUU7SUFBVTtFQUFFLEdBQUMsZUFBbUIsQ0FBQyxNQUFFLGVBQUFwSSxtQkFBQTtJQUFNd0UsS0FBSyxFQUFFO01BQUU0RCxLQUFLLEVBQUU7SUFBVTtFQUFFLEdBQUMsUUFBWSxDQUFDLFVBQU0sZUFBQXBJLG1CQUFBO0lBQU13RSxLQUFLLEVBQUU7TUFBRTRELEtBQUssRUFBRTtJQUFVO0VBQUUsR0FBQyxRQUFZLENBQUMsaUpBRTdQLENBQUMsZUFFSnBJLG1CQUFBLDBCQUNFQSxtQkFBQSxhQUFJLE1BQ0UsZUFBQUEsbUJBQUE7SUFBTXdFLEtBQUssRUFBRTtNQUFFNEQsS0FBSyxFQUFFO0lBQVU7RUFBRSxHQUFDLGVBQW1CLENBQUMsMEJBQzNELGVBQUFwSSxtQkFBQTtJQUFNd0UsS0FBSyxFQUFFO01BQUU0RCxLQUFLLEVBQUUsU0FBUztNQUFFOEksU0FBUyxFQUFFO0lBQVM7RUFBRSxHQUFDLDRDQUFnRCxDQUFDLGdEQUN2RyxDQUFDLGVBQUFsUixtQkFBQSxXQUFJLENBQUMsZUFDVkEsbUJBQUEsMEJBQ0VBLG1CQUFBO0lBQU13RSxLQUFLLEVBQUU7TUFBRTRELEtBQUssRUFBRTtJQUFVO0VBQUUsR0FBQyxRQUFZLENBQUMsd0JBQ2hELGVBQUFwSSxtQkFBQTtJQUFNd0UsS0FBSyxFQUFFO01BQUU0RCxLQUFLLEVBQUUsU0FBUztNQUFFOEksU0FBUyxFQUFFO0lBQVM7RUFBRSxHQUFDLGtDQUFzQyxDQUFDLDZCQUM3RixDQUFDLGVBQUFsUixtQkFBQSxXQUFJLENBQUMsZUFDVkEsbUJBQUEsMEJBQ0VBLG1CQUFBO0lBQU13RSxLQUFLLEVBQUU7TUFBRTRELEtBQUssRUFBRTtJQUFVO0VBQUUsR0FBQyxPQUFXLENBQUMsc0JBQy9DLGVBQUFwSSxtQkFBQTtJQUFNd0UsS0FBSyxFQUFFO01BQUU0RCxLQUFLLEVBQUUsU0FBUztNQUFFOEksU0FBUyxFQUFFO0lBQVM7RUFBRSxHQUFDLHlDQUE2QyxDQUFDLG9EQUNwRyxDQUFDLGVBQUFsUixtQkFBQSxXQUFJLENBQUMsZUFDVkEsbUJBQUEsYUFBSSxpQkFDYSxlQUFBQSxtQkFBQTtJQUFNd0UsS0FBSyxFQUFFO01BQUU0RCxLQUFLLEVBQUU7SUFBVTtFQUFFLEdBQUMsT0FBVyxDQUFDLDBFQUFzRSxlQUFBcEksbUJBQUE7SUFBTXdFLEtBQUssRUFBRTtNQUFFNEQsS0FBSyxFQUFFO0lBQVU7RUFBRSxHQUFDLElBQVEsQ0FBQyxNQUFFLGVBQUFwSSxtQkFBQTtJQUFNd0UsS0FBSyxFQUFFO01BQUU0RCxLQUFLLEVBQUU7SUFBVTtFQUFFLEdBQUMsUUFBWSxDQUFDLGlCQUNoTyxDQUNGLENBQUMsZUFFTHBJLG1CQUFBO0lBQUdnUixTQUFTLEVBQUM7RUFBa0IsR0FBQyxzUkFFN0IsQ0FBQyxlQUVKaFIsbUJBQUE7SUFBS2dSLFNBQVMsRUFBQyxpQkFBaUI7SUFBQ3hNLEtBQUssRUFBRTtNQUFFaEUsS0FBSyxFQUFFO0lBQU07RUFBRSxnQkFDdkRSLG1CQUFBLENBQUN5Syx1QkFBa0IsTUFBRSxDQUNsQixDQUNFLENBQUM7QUFFZCxDQUFDO0FBRUQsb0RBQWVzRyxRQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmluYWxfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL2dyYXBocy8wMDNfTWlncmF0aW9uTWFwLmpzPzg3NGQiLCJ3ZWJwYWNrOi8vZmluYWxfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL2dyYXBocy8wMDNfRm9yY2VEaXJlY3RlZEdyYXBoLmpzPzQ1ZTQiLCJ3ZWJwYWNrOi8vZmluYWxfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL2dyYXBocy9jb3VudHJ5Q29vcmRpbmF0ZXMuanM/NDVhYyIsIndlYnBhY2s6Ly9maW5hbF9wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvZ3JhcGhzLzAwM19Xb3JsZENob3JkLmpzPzkwYzIiLCJ3ZWJwYWNrOi8vZmluYWxfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzLzAwM19hbGxpYW5jZS5qcz81YzdmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgKiBhcyBkMyBmcm9tICdkMyc7XG5pbXBvcnQgKiBhcyB0b3BvanNvbiBmcm9tICd0b3BvanNvbi1jbGllbnQnO1xuXG5cbmNvbnN0IE1pZ3JhdGlvbk1hcCA9ICgpID0+IHtcbiAgY29uc3Qgc3ZnUmVmID0gdXNlUmVmKCk7XG4gIGNvbnN0IHdpZHRoID0gODAwO1xuICBjb25zdCBoZWlnaHQgPSA0MDA7XG5cbiAgY29uc3QgW3dvcmxkR2VvSlNPTiwgc2V0V29ybGRHZW9KU09OXSA9IHVzZVN0YXRlKG51bGwpO1xuICBjb25zdCBbY291bnRyeUNlbnRyb2lkcywgc2V0Q291bnRyeUNlbnRyb2lkc10gPSB1c2VTdGF0ZSh7fSk7XG4gIGNvbnN0IFt0cmFkZURhdGEsIHNldFRyYWRlRGF0YV0gPSB1c2VTdGF0ZSh7XG4gICAgXCJVbml0ZWQgU3RhdGVzXCI6IFtdLFxuICAgIFwiUnVzc2lhXCI6IFtdLFxuICAgIFwiQ2hpbmFcIjogW11cbiAgfSk7XG4gIGNvbnN0IFtzZWxlY3RlZFllYXIsIHNldFNlbGVjdGVkWWVhcl0gPSB1c2VTdGF0ZSgyMDE0KTtcbiAgY29uc3QgW3NlbGVjdGVkQ291bnRyeSwgc2V0U2VsZWN0ZWRDb3VudHJ5XSA9IHVzZVN0YXRlKFwiQWxsXCIpO1xuICBjb25zdCBbZXJyb3IsIHNldEVycm9yXSA9IHVzZVN0YXRlKG51bGwpO1xuXG4gIGNvbnN0IG9yaWdpbkNvbG9ycyA9IHtcbiAgICBcIlVuaXRlZCBTdGF0ZXNcIjogXCIjNDY4MkI0XCIsXG4gICAgXCJSdXNzaWFcIjogXCIjREMxNDNDXCIsXG4gICAgXCJDaGluYVwiOiBcIiNGRkRCNThcIixcbiAgICBcIkFsbFwiOiBcIiM5NDY3YmRcIlxuICB9O1xuXG4gIGNvbnN0IHVybHMgPSB7XG4gICAgXCJVbml0ZWQgU3RhdGVzXCI6IGAke3Byb2Nlc3MuZW52LlBVQkxJQ19VUkx9L2RhdGEvcHJvY2Vzc2VkL3Byb2Nlc3NlZF9yZWNpcGllbnRzX29mX3VzX2FybXNfaGllcmFyY2hpY2FsLmpzb25gLFxuICAgIFwiUnVzc2lhXCI6IGAke3Byb2Nlc3MuZW52LlBVQkxJQ19VUkx9L2RhdGEvcHJvY2Vzc2VkL3Byb2Nlc3NlZF9yZWNpcGllbnRzX29mX3J1c3NpYV9hcm1zX2hpZXJhcmNoaWNhbC5qc29uYCxcbiAgICBcIkNoaW5hXCI6IGAke3Byb2Nlc3MuZW52LlBVQkxJQ19VUkx9L2RhdGEvcHJvY2Vzc2VkL3Byb2Nlc3NlZF9yZWNpcGllbnRzX29mX2NoaW5hX2FybXNfaGllcmFyY2hpY2FsLmpzb25gLFxuICB9O1xuXG4gIGNvbnN0IGdlb0pTT05VcmwgPSBgJHtwcm9jZXNzLmVudi5QVUJMSUNfVVJMfS9jb3VudHJpZXMtMTEwbS5qc29uYDtcblxuICBjb25zdCBub3JtYWxpemVDb3VudHJ5TmFtZSA9IChuYW1lKSA9PiB7XG4gICAgY29uc3QgbWFwcGluZyA9IHtcbiAgICAgIFwiVW5pdGVkIFN0YXRlcyBvZiBBbWVyaWNhXCI6IFwiVW5pdGVkIFN0YXRlc1wiLFxuICAgICAgXCJVU0FcIjogXCJVbml0ZWQgU3RhdGVzXCIsXG4gICAgICBcIlJ1c3NpYW4gRmVkZXJhdGlvblwiOiBcIlJ1c3NpYVwiLFxuICAgICAgXCJQZW9wbGUncyBSZXB1YmxpYyBvZiBDaGluYVwiOiBcIkNoaW5hXCIsXG4gICAgfTtcbiAgICByZXR1cm4gbWFwcGluZ1tuYW1lXSB8fCBuYW1lO1xuICB9O1xuXG4gIC8vIExvYWQgd29ybGQgR2VvSlNPTiBkYXRhXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgZDMuanNvbihnZW9KU09OVXJsKVxuICAgICAgLnRoZW4od29ybGREYXRhID0+IHtcbiAgICAgICAgY29uc3QgY2VudHJvaWRzID0ge307XG4gICAgICAgIHRvcG9qc29uLmZlYXR1cmUod29ybGREYXRhLCB3b3JsZERhdGEub2JqZWN0cy5jb3VudHJpZXMpLmZlYXR1cmVzLmZvckVhY2goZmVhdHVyZSA9PiB7XG4gICAgICAgICAgY29uc3QgY291bnRyeU5hbWUgPSBmZWF0dXJlLnByb3BlcnRpZXMubmFtZTtcbiAgICAgICAgICBjZW50cm9pZHNbbm9ybWFsaXplQ291bnRyeU5hbWUoY291bnRyeU5hbWUpXSA9IGQzLmdlb0NlbnRyb2lkKGZlYXR1cmUpO1xuICAgICAgICB9KTtcbiAgICAgICAgc2V0Q291bnRyeUNlbnRyb2lkcyhjZW50cm9pZHMpO1xuICAgICAgICBzZXRXb3JsZEdlb0pTT04od29ybGREYXRhKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKCkgPT4ge1xuICAgICAgICBzZXRFcnJvcihcIkVycm9yIGxvYWRpbmcgbWFwIGRhdGEuXCIpO1xuICAgICAgfSk7XG4gIH0sIFtdKTtcblxuICAvLyBMb2FkIHRyYWRlIGRhdGEgZm9yIGVhY2ggY291bnRyeVxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIE9iamVjdC5rZXlzKHVybHMpLmZvckVhY2goY291bnRyeSA9PiB7XG4gICAgICBkMy5qc29uKHVybHNbY291bnRyeV0pXG4gICAgICAgIC50aGVuKGRhdGEgPT4ge1xuICAgICAgICAgIGlmIChkYXRhICYmIGRhdGEucmVjaXBpZW50cykge1xuICAgICAgICAgICAgc2V0VHJhZGVEYXRhKHByZXZEYXRhID0+ICh7XG4gICAgICAgICAgICAgIC4uLnByZXZEYXRhLFxuICAgICAgICAgICAgICBbY291bnRyeV06IGRhdGEucmVjaXBpZW50c1xuICAgICAgICAgICAgfSkpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzZXRFcnJvcihgRmFpbGVkIHRvIGxvYWQgJHtjb3VudHJ5fSB0cmFkZSBkYXRhLmApO1xuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKCgpID0+IHtcbiAgICAgICAgICBzZXRFcnJvcihgRXJyb3IgbG9hZGluZyAke2NvdW50cnl9IHRyYWRlIGRhdGEuYCk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuICB9LCBbXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIXdvcmxkR2VvSlNPTiB8fCBPYmplY3QudmFsdWVzKHRyYWRlRGF0YSkuZXZlcnkoZGF0YSA9PiBkYXRhLmxlbmd0aCA9PT0gMCkpIHJldHVybjtcblxuICAgIGNvbnN0IHN2ZyA9IGQzLnNlbGVjdChzdmdSZWYuY3VycmVudClcbiAgICAgIC5hdHRyKCd2aWV3Qm94JywgYDAgMCAke3dpZHRofSAke2hlaWdodH1gKVxuICAgICAgLnN0eWxlKCd3aWR0aCcsICcxMDAlJylcbiAgICAgIC5zdHlsZSgnaGVpZ2h0JywgJ2F1dG8nKTtcbiAgICBzdmcuc2VsZWN0QWxsKFwiKlwiKS5yZW1vdmUoKTtcblxuICAgIGNvbnN0IHByb2plY3Rpb24gPSBkMy5nZW9NZXJjYXRvcigpLmNlbnRlcihbMCwgMjBdKS5zY2FsZSgxMzApLnRyYW5zbGF0ZShbd2lkdGggLyAyLCBoZWlnaHQgLyAyXSk7XG4gICAgY29uc3QgcGF0aCA9IGQzLmdlb1BhdGgoKS5wcm9qZWN0aW9uKHByb2plY3Rpb24pO1xuXG4gICAgY29uc3QgbWFwQ29udGFpbmVyID0gc3ZnLmFwcGVuZChcImdcIikuYXR0cihcImNsYXNzXCIsIFwibWFwLWNvbnRhaW5lclwiKTtcblxuICAgIGNvbnN0IHpvb20gPSBkMy56b29tKClcbiAgICAgIC5zY2FsZUV4dGVudChbMSwgOF0pXG4gICAgICAub24oXCJ6b29tXCIsIChldmVudCkgPT4ge1xuICAgICAgICBtYXBDb250YWluZXIuYXR0cihcInRyYW5zZm9ybVwiLCBldmVudC50cmFuc2Zvcm0pO1xuICAgICAgfSk7XG5cbiAgICBzdmcuY2FsbCh6b29tKTtcblxuICAgIC8vIENyZWF0ZSB0b29sdGlwIGRpdlxuICAgIGNvbnN0IHRvb2x0aXAgPSBkMy5zZWxlY3QoXCJib2R5XCIpLmFwcGVuZChcImRpdlwiKVxuICAgICAgLmF0dHIoXCJjbGFzc1wiLCBcInRvb2x0aXBcIilcbiAgICAgIC5zdHlsZShcInBvc2l0aW9uXCIsIFwiYWJzb2x1dGVcIilcbiAgICAgIC5zdHlsZShcImJhY2tncm91bmRcIiwgXCJyZ2JhKDAsIDAsIDAsIDAuOClcIilcbiAgICAgIC5zdHlsZShcImNvbG9yXCIsIFwiZTBlMGUwXCIpXG4gICAgICAuc3R5bGUoXCJwYWRkaW5nXCIsIFwiOHB4IDEycHhcIilcbiAgICAgIC5zdHlsZShcImJvcmRlci1yYWRpdXNcIiwgXCI0cHhcIilcbiAgICAgIC5zdHlsZShcInBvaW50ZXItZXZlbnRzXCIsIFwibm9uZVwiKVxuICAgICAgLnN0eWxlKFwiZm9udC1zaXplXCIsIFwiMTZweFwiKVxuICAgICAgLnN0eWxlKFwiZGlzcGxheVwiLCBcIm5vbmVcIik7XG5cbiAgICAvLyBEcmF3IGNvdW50cmllc1xuICAgIG1hcENvbnRhaW5lci5zZWxlY3RBbGwoXCJwYXRoLmNvdW50cnlcIilcbiAgICAgIC5kYXRhKHRvcG9qc29uLmZlYXR1cmUod29ybGRHZW9KU09OLCB3b3JsZEdlb0pTT04ub2JqZWN0cy5jb3VudHJpZXMpLmZlYXR1cmVzKVxuICAgICAgLmVudGVyKClcbiAgICAgIC5hcHBlbmQoXCJwYXRoXCIpXG4gICAgICAuYXR0cihcImNsYXNzXCIsIFwiY291bnRyeVwiKVxuICAgICAgLmF0dHIoXCJkXCIsIHBhdGgpXG4gICAgICAuYXR0cihcImZpbGxcIiwgXCIjY2NjXCIpXG4gICAgICAuYXR0cihcInN0cm9rZVwiLCBcIiMzMzNcIilcbiAgICAgIC5hdHRyKFwic3Ryb2tlLXdpZHRoXCIsIDEuNSk7XG5cbiAgICAvLyBEcmF3IHRyYWRlIGxpbmVzIGFuZCBjaXJjbGVzIGZvciBlYWNoIGNvdW50cnlcbiAgICBjb25zdCBjb3VudHJpZXNUb1Nob3cgPSBzZWxlY3RlZENvdW50cnkgPT09IFwiQWxsXCIgPyBbXCJVbml0ZWQgU3RhdGVzXCIsIFwiUnVzc2lhXCIsIFwiQ2hpbmFcIl0gOiBbc2VsZWN0ZWRDb3VudHJ5XTtcbiAgICBjb3VudHJpZXNUb1Nob3cuZm9yRWFjaChjb3VudHJ5ID0+IHtcbiAgICAgIGNvbnN0IHZhbGlkVHJhZGVzID0gdHJhZGVEYXRhW2NvdW50cnldXG4gICAgICAgIC5tYXAocmVjaXBpZW50ID0+IHtcbiAgICAgICAgICBjb25zdCBvcmlnaW5Db29yZHMgPSBjb3VudHJ5Q2VudHJvaWRzW2NvdW50cnldO1xuICAgICAgICAgIGNvbnN0IGRlc3RDb3VudHJ5ID0gbm9ybWFsaXplQ291bnRyeU5hbWUocmVjaXBpZW50LnJlY2lwaWVudCk7XG4gICAgICAgICAgY29uc3QgZGVzdENvb3JkcyA9IGNvdW50cnlDZW50cm9pZHNbZGVzdENvdW50cnldO1xuXG4gICAgICAgICAgaWYgKG9yaWdpbkNvb3JkcyAmJiBkZXN0Q29vcmRzKSB7XG4gICAgICAgICAgICBjb25zdCB0cmFkZVZhbHVlID0gcmVjaXBpZW50LnllYXJzW3NlbGVjdGVkWWVhcl0gfHwgMDtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgIG9yaWdpbkNvdW50cnk6IGNvdW50cnksXG4gICAgICAgICAgICAgIGRlc3RDb3VudHJ5LFxuICAgICAgICAgICAgICBvcmlnaW5YOiBwcm9qZWN0aW9uKG9yaWdpbkNvb3JkcylbMF0sXG4gICAgICAgICAgICAgIG9yaWdpblk6IHByb2plY3Rpb24ob3JpZ2luQ29vcmRzKVsxXSxcbiAgICAgICAgICAgICAgZGVzdFg6IHByb2plY3Rpb24oZGVzdENvb3JkcylbMF0sXG4gICAgICAgICAgICAgIGRlc3RZOiBwcm9qZWN0aW9uKGRlc3RDb29yZHMpWzFdLFxuICAgICAgICAgICAgICB0cmFkZVZhbHVlXG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfSlcbiAgICAgICAgLmZpbHRlcihkID0+IGQgJiYgZC50cmFkZVZhbHVlID4gMCk7XG5cbiAgICAgIGNvbnN0IHRvcFJlY2lwaWVudHMgPSB2YWxpZFRyYWRlc1xuICAgICAgICAuc29ydCgoYSwgYikgPT4gYi50cmFkZVZhbHVlIC0gYS50cmFkZVZhbHVlKVxuICAgICAgICAuc2xpY2UoMCwgNSlcbiAgICAgICAgLm1hcChkID0+IGQuZGVzdENvdW50cnkpO1xuXG4gICAgICBjb25zdCBtYXhUcmFkZVZhbHVlID0gZDMubWF4KHZhbGlkVHJhZGVzLCBkID0+IGQudHJhZGVWYWx1ZSkgfHwgMDtcbiAgICAgIGNvbnN0IHN0cm9rZVNjYWxlID0gZDMuc2NhbGVTcXJ0KCkuZG9tYWluKFswLCBtYXhUcmFkZVZhbHVlXSkucmFuZ2UoWzEsIDRdKTtcblxuICAgICAgLy8gRHJhdyB0cmFkZSBsaW5lc1xuICAgICAgbWFwQ29udGFpbmVyLnNlbGVjdEFsbChgbGluZS50cmFkZS1saW5lLSR7Y291bnRyeX1gKVxuICAgICAgICAuZGF0YSh2YWxpZFRyYWRlcylcbiAgICAgICAgLmVudGVyKClcbiAgICAgICAgLmFwcGVuZChcImxpbmVcIilcbiAgICAgICAgLmF0dHIoXCJjbGFzc1wiLCBgdHJhZGUtbGluZS0ke2NvdW50cnl9YClcbiAgICAgICAgLmF0dHIoXCJ4MVwiLCBkID0+IGQub3JpZ2luWClcbiAgICAgICAgLmF0dHIoXCJ5MVwiLCBkID0+IGQub3JpZ2luWSlcbiAgICAgICAgLmF0dHIoXCJ4MlwiLCBkID0+IGQuZGVzdFgpXG4gICAgICAgIC5hdHRyKFwieTJcIiwgZCA9PiBkLmRlc3RZKVxuICAgICAgICAuYXR0cihcInN0cm9rZVwiLCBvcmlnaW5Db2xvcnNbY291bnRyeV0pXG4gICAgICAgIC5hdHRyKFwic3Ryb2tlLXdpZHRoXCIsIGQgPT4gc3Ryb2tlU2NhbGUoZC50cmFkZVZhbHVlKSlcbiAgICAgICAgLm9uKFwibW91c2VvdmVyXCIsIChldmVudCwgZCkgPT4ge1xuICAgICAgICAgIHRvb2x0aXBcbiAgICAgICAgICAgIC5zdHlsZShcImRpc3BsYXlcIiwgXCJibG9ja1wiKVxuICAgICAgICAgICAgLmh0bWwoYFxuICAgICAgICAgICAgICA8c3Ryb25nPk9yaWdpbjo8L3N0cm9uZz4gJHtkLm9yaWdpbkNvdW50cnl9PGJyLz5cbiAgICAgICAgICAgICAgPHN0cm9uZz5EZXN0aW5hdGlvbjo8L3N0cm9uZz4gJHtkLmRlc3RDb3VudHJ5fTxici8+XG4gICAgICAgICAgICAgIDxzdHJvbmc+VHJhZGUgVmFsdWU6PC9zdHJvbmc+ICR7ZC50cmFkZVZhbHVlfUIgVVNEXG4gICAgICAgICAgICBgKTtcbiAgICAgICAgfSlcbiAgICAgICAgLm9uKFwibW91c2Vtb3ZlXCIsIChldmVudCkgPT4ge1xuICAgICAgICAgIHRvb2x0aXBcbiAgICAgICAgICAgIC5zdHlsZShcImxlZnRcIiwgYCR7ZXZlbnQucGFnZVggKyAxMH1weGApXG4gICAgICAgICAgICAuc3R5bGUoXCJ0b3BcIiwgYCR7ZXZlbnQucGFnZVkgKyAxMH1weGApO1xuICAgICAgICB9KVxuICAgICAgICAub24oXCJtb3VzZW91dFwiLCAoKSA9PiB7XG4gICAgICAgICAgdG9vbHRpcC5zdHlsZShcImRpc3BsYXlcIiwgXCJub25lXCIpO1xuICAgICAgICB9KTtcblxuICAgICAgLy8gRHJhdyB0cmFkZSBjaXJjbGVzXG4gICAgICBtYXBDb250YWluZXIuc2VsZWN0QWxsKGBjaXJjbGUudHJhZGUtY2lyY2xlLSR7Y291bnRyeX1gKVxuICAgICAgICAuZGF0YSh2YWxpZFRyYWRlcylcbiAgICAgICAgLmVudGVyKClcbiAgICAgICAgLmFwcGVuZChcImNpcmNsZVwiKVxuICAgICAgICAuYXR0cihcImNsYXNzXCIsIGB0cmFkZS1jaXJjbGUtJHtjb3VudHJ5fWApXG4gICAgICAgIC5hdHRyKFwiY3hcIiwgZCA9PiBkLmRlc3RYKVxuICAgICAgICAuYXR0cihcImN5XCIsIGQgPT4gZC5kZXN0WSlcbiAgICAgICAgLmF0dHIoXCJyXCIsIGQgPT4gdG9wUmVjaXBpZW50cy5pbmNsdWRlcyhkLmRlc3RDb3VudHJ5KSA/IDYgOiAzKVxuICAgICAgICAuYXR0cihcImZpbGxcIiwgZCA9PiB0b3BSZWNpcGllbnRzLmluY2x1ZGVzKGQuZGVzdENvdW50cnkpID8gXCIjOEEyQkUyXCIgOiBvcmlnaW5Db2xvcnNbY291bnRyeV0pXG4gICAgICAgIC5vbihcIm1vdXNlb3ZlclwiLCAoZXZlbnQsIGQpID0+IHtcbiAgICAgICAgICB0b29sdGlwXG4gICAgICAgICAgICAuc3R5bGUoXCJkaXNwbGF5XCIsIFwiYmxvY2tcIilcbiAgICAgICAgICAgIC5odG1sKGBcbiAgICAgICAgICAgICAgPHN0cm9uZz5PcmlnaW46PC9zdHJvbmc+ICR7ZC5vcmlnaW5Db3VudHJ5fTxici8+XG4gICAgICAgICAgICAgIDxzdHJvbmc+RGVzdGluYXRpb246PC9zdHJvbmc+ICR7ZC5kZXN0Q291bnRyeX08YnIvPlxuICAgICAgICAgICAgICA8c3Ryb25nPlRyYWRlIFZhbHVlOjwvc3Ryb25nPiAke2QudHJhZGVWYWx1ZX1CIFVTRFxuICAgICAgICAgICAgYCk7XG4gICAgICAgIH0pXG4gICAgICAgIC5vbihcIm1vdXNlbW92ZVwiLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICB0b29sdGlwXG4gICAgICAgICAgICAuc3R5bGUoXCJsZWZ0XCIsIGAke2V2ZW50LnBhZ2VYICsgMTB9cHhgKVxuICAgICAgICAgICAgLnN0eWxlKFwidG9wXCIsIGAke2V2ZW50LnBhZ2VZICsgMTB9cHhgKTtcbiAgICAgICAgfSlcbiAgICAgICAgLm9uKFwibW91c2VvdXRcIiwgKCkgPT4ge1xuICAgICAgICAgIHRvb2x0aXAuc3R5bGUoXCJkaXNwbGF5XCIsIFwibm9uZVwiKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gKCkgPT4gdG9vbHRpcC5yZW1vdmUoKTtcbiAgfSwgW3dvcmxkR2VvSlNPTiwgdHJhZGVEYXRhLCBjb3VudHJ5Q2VudHJvaWRzLCBzZWxlY3RlZFllYXIsIHNlbGVjdGVkQ291bnRyeV0pO1xuXG4gIC8vIExlZ2VuZCBDb21wb25lbnRcbiAgY29uc3QgTGVnZW5kID0gKCkgPT4gKFxuICAgIDxkaXYgc3R5bGU9e3tcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgaGVpZ2h0OiAnMTkwcHgnLFxuICAgICAgd2lkdGg6ICcxNzBweCcsXG4gICAgICBib3R0b206ICcyMHB4JyxcbiAgICAgIGxlZnQ6ICcyMHB4JyxcbiAgICAgIGJhY2tncm91bmQ6ICdyZ2JhKDAsIDAsIDAsIDAuOSknLFxuICAgICAgcGFkZGluZzogJzEwcHgnLFxuICAgICAgYm9yZGVyUmFkaXVzOiAnOHB4JyxcbiAgICAgIGZvbnRTaXplOiAnMTRweCcsXG4gICAgICBjb2xvcjogJyNlMGUwZTAnLFxuICAgIH19PlxuICAgICAgPGRpdiBzdHlsZT17eyBtYXJnaW5Cb3R0b206ICcxMHB4JyB9fT48c3Ryb25nPk9yaWdpbiBDb3VudHJpZXM8L3N0cm9uZz48L2Rpdj5cblxuICAgICAge09iamVjdC5lbnRyaWVzKG9yaWdpbkNvbG9ycylcbiAgICAgICAgLmZpbHRlcigoW2NvdW50cnldKSA9PiBjb3VudHJ5ICE9PSBcIkFsbFwiKVxuICAgICAgICAubWFwKChbY291bnRyeSwgY29sb3JdKSA9PiAoXG4gICAgICAgICAgPGRpdiBrZXk9e2NvdW50cnl9IHN0eWxlPXt7IGRpc3BsYXk6ICdmbGV4JywgYWxpZ25JdGVtczogJ2NlbnRlcicsIG1hcmdpbkJvdHRvbTogJzEwcHgnIH19PlxuICAgICAgICAgICAgPGRpdiBzdHlsZT17e1xuICAgICAgICAgICAgICB3aWR0aDogJzEycHgnLCBoZWlnaHQ6ICcxMnB4JywgYmFja2dyb3VuZENvbG9yOiBjb2xvciwgbWFyZ2luUmlnaHQ6ICc4cHgnLCBib3JkZXJSYWRpdXM6ICc1MCUnXG4gICAgICAgICAgICB9fT48L2Rpdj5cbiAgICAgICAgICAgIDxzcGFuPntjb3VudHJ5fTwvc3Bhbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICkpfVxuICAgICAgPGRpdiBzdHlsZT17eyBtYXJnaW5Ub3A6ICcxMHB4JyB9fT48c3Ryb25nPlJlY2lwaWVudCBJbXBvcnRhbmNlPC9zdHJvbmc+PC9kaXY+XG4gICAgICA8ZGl2IHN0eWxlPXt7IGRpc3BsYXk6ICdmbGV4JywgYWxpZ25JdGVtczogJ2NlbnRlcicsIG1hcmdpblRvcDogJzVweCcgfX0+XG4gICAgICAgIDxzdmcgd2lkdGg9XCIyMFwiIGhlaWdodD1cIjIwXCIgc3R5bGU9e3sgbWFyZ2luUmlnaHQ6ICc2cHgnIH19PlxuICAgICAgICAgIDxjaXJjbGUgY3g9XCIxMFwiIGN5PVwiMTBcIiByPVwiM1wiIGZpbGw9XCIjZTBlMGUwXCIgLz5cbiAgICAgICAgPC9zdmc+XG4gICAgICAgIDxzcGFuPk5vcm1hbCBSZWNpcGllbnQ8L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgc3R5bGU9e3sgZGlzcGxheTogJ2ZsZXgnLCBhbGlnbkl0ZW1zOiAnY2VudGVyJywgbWFyZ2luVG9wOiAnNXB4JyB9fT5cbiAgICAgICAgPHN2ZyB3aWR0aD1cIjIwXCIgaGVpZ2h0PVwiMjBcIiBzdHlsZT17eyBtYXJnaW5SaWdodDogJzZweCcgfX0+XG4gICAgICAgICAgPGNpcmNsZSBjeD1cIjEwXCIgY3k9XCIxMFwiIHI9XCI2XCIgZmlsbD1cIiM4QTJCRTJcIiAvPlxuICAgICAgICA8L3N2Zz5cbiAgICAgICAgPHNwYW4+VG9wIFJlY2lwaWVudDwvc3Bhbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBzdHlsZT17eyBwb3NpdGlvbjogJ3JlbGF0aXZlJywgd2lkdGg6ICcxMDAlJ319PlxuXG4gICAgICA8aDMgc3R5bGU9e3t0ZXh0QWxpZ246ICdjZW50ZXInLCBmb250U2l6ZTogJzI0cHgnLCBjb2xvcjogJyNlNzRjM2MnLCBwYWRkaW5nVG9wOiAnMjBweCcsfX0+XG4gICAgICAgICAgR2xvYmFsIEFybXMgUHJvbGlmZXJhdGlvbiB7c2VsZWN0ZWRZZWFyfVxuICAgICAgPC9oMz5cblxuICAgICAgey8qIERpc3BsYXkgZXJyb3IgbWVzc2FnZXMgaWYgYW55ICovfVxuICAgICAge2Vycm9yICYmIDxkaXYgc3R5bGU9e3sgY29sb3I6ICdyZWQnLCBwb3NpdGlvbjogJ2Fic29sdXRlJywgdG9wOiAnNjBweCcsIGxlZnQ6ICc1MCUnLCB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKC01MCUpJywgYmFja2dyb3VuZDogJ3JnYmEoMjU1LDI1NSwyNTUsMC44KScsIHBhZGRpbmc6ICc1cHgnLCBib3JkZXJSYWRpdXM6ICc0cHgnIH19PntlcnJvcn08L2Rpdj59XG4gICAgICBcbiAgICAgIDxpbnB1dFxuICAgICAgICAgIHR5cGU9XCJyYW5nZVwiXG4gICAgICAgICAgbWluPVwiMTk1MFwiXG4gICAgICAgICAgbWF4PVwiMjAyM1wiXG4gICAgICAgICAgdmFsdWU9e3NlbGVjdGVkWWVhcn1cbiAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFNlbGVjdGVkWWVhcigrZS50YXJnZXQudmFsdWUpfVxuICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICB3aWR0aDogJzgwJScsXG4gICAgICAgICAgICBhcHBlYXJhbmNlOiAnbm9uZScsXG4gICAgICAgICAgICBoZWlnaHQ6ICc4cHgnLFxuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnZ3JheScsXG4gICAgICAgICAgICBib3JkZXJSYWRpdXM6ICc1cHgnLFxuICAgICAgICAgICAgb3V0bGluZTogJ25vbmUnLFxuICAgICAgICAgICAgbWFyZ2luOiAnMjBweCBhdXRvIDEwcHgnLFxuICAgICAgICAgICAgZGlzcGxheTogJ2Jsb2NrJyxcbiAgICAgICAgICAgIGFjY2VudENvbG9yOiAnI2U3NGMzYycsXG4gICAgICAgICAgfX1cbiAgICAgIC8+XG5cbiAgICAgIHsvKiBTVkcgTWFwICovfVxuICAgICAgPHN2ZyByZWY9e3N2Z1JlZn0gc3R5bGU9e3sgd2lkdGg6ICcxMDAlJywgaGVpZ2h0OiAnODB2aCcsIGJvcmRlcjogJzNweCBzb2xpZCAjZTc0YzNjJywgYm9yZGVyUmFkaXVzOiAnOHB4JyB9fT48L3N2Zz5cblxuICAgICAgey8qIExlZ2VuZCAqL31cbiAgICAgIHt3b3JsZEdlb0pTT04gJiYgT2JqZWN0LnZhbHVlcyh0cmFkZURhdGEpLnNvbWUoZGF0YSA9PiBkYXRhLmxlbmd0aCA+IDApICYmIDxMZWdlbmQgLz59XG5cbiAgICAgIHsvKiBDb250cm9scyAqL31cbiAgICAgIDxkaXYgc3R5bGU9e3sgcG9zaXRpb246ICdhYnNvbHV0ZScsIGJvdHRvbTogJzIyMHB4JywgbGVmdDogJzIwcHgnLCBjb2xvcjogJ2JsYWNrJywgZGlzcGxheTogJ2ZsZXgnLCBmbGV4RGlyZWN0aW9uOiAnY29sdW1uJ319PlxuXG4gICAgICAgIFxuICAgICAgICA8bGFiZWwgaHRtbEZvcj1cImNvdW50cnlcIiBzdHlsZT17eyBkaXNwbGF5OiAnYmxvY2snLCBtYXJnaW5Cb3R0b206ICcxMHB4JywgY29sb3I6ICcjZTBlMGUwJywgZm9udFNpemU6ICcxNHB4JywgZm9udFdlaWdodDogJ2JvbGQnfX0+U2VsZWN0IENvdW50cnk8L2xhYmVsPlxuICAgICAgICA8c2VsZWN0IFxuICAgICAgICAgIGlkPVwiY291bnRyeVwiIFxuICAgICAgICAgIHZhbHVlPXtzZWxlY3RlZENvdW50cnl9IFxuICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0U2VsZWN0ZWRDb3VudHJ5KGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgZm9udFNpemU6ICcxMnB4JyxcbiAgICAgICAgICAgIHBhZGRpbmc6ICc2cHggMTBweCcsXG4gICAgICAgICAgICB3aWR0aDogJzE3MHB4JyxcbiAgICAgICAgICAgIGNvbG9yOiAnI2UwZTBlMCcsXG4gICAgICAgICAgICBib3JkZXJSYWRpdXM6ICc4cHgnLFxuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnYmxhY2snXG4gICAgICAgICAgfX1cbiAgICAgICAgPlxuICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJBbGxcIj5BbGw8L29wdGlvbj5cbiAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiVW5pdGVkIFN0YXRlc1wiPlVuaXRlZCBTdGF0ZXM8L29wdGlvbj5cbiAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiUnVzc2lhXCI+UnVzc2lhPC9vcHRpb24+XG4gICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIkNoaW5hXCI+Q2hpbmE8L29wdGlvbj5cbiAgICAgICAgPC9zZWxlY3Q+XG5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgTWlncmF0aW9uTWFwO1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZVJlZiwgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJztcblxuXG5jb25zdCBGb3JjZURpcmVjdGVkR3JhcGggPSAoKSA9PiB7XG4gIGNvbnN0IHN2Z1JlZiA9IHVzZVJlZigpO1xuICBjb25zdCB3aWR0aCA9IDEyMDA7XG4gIGNvbnN0IGhlaWdodCA9IDY3MDtcbiAgY29uc3QgZGF0YVVybCA9IGAke3Byb2Nlc3MuZW52LlBVQkxJQ19VUkx9L2RhdGEvcHJvY2Vzc2VkL3Byb2Nlc3NlZF9yZWNpcGllbnRzX29mX2NvbWJpbmVkX3VzX2NoaW5hX3J1c3NpYV9hcm1zX2hpZXJhcmNoaWNhbC5qc29uYDtcbiAgXG4gIC8vIFN0YXRlIGZvciB0aGUgc2VsZWN0ZWQgeWVhclxuICBjb25zdCBbc2VsZWN0ZWRZZWFyLCBzZXRTZWxlY3RlZFllYXJdID0gdXNlU3RhdGUoMjAxNCk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBGZXRjaCBkYXRhIGZyb20gdGhlIHByb3ZpZGVkIFVSTFxuICAgIGQzLmpzb24oZGF0YVVybCkudGhlbihyYXdEYXRhID0+IHtcbiAgICAgIGNvbnN0IGRhdGEgPSByYXdEYXRhLmRhdGE7IC8vIEFjY2VzcyB0aGUgbWFpbiBkYXRhIGFycmF5XG5cbiAgICAgIC8vIENsZWFyIHByZXZpb3VzIFNWRyBjb250ZW50c1xuICAgICAgY29uc3Qgc3ZnID0gZDMuc2VsZWN0KHN2Z1JlZi5jdXJyZW50KTtcbiAgICAgIHN2Zy5zZWxlY3RBbGwoXCIqXCIpLnJlbW92ZSgpO1xuXG4gICAgICAvLyBQcm9jZXNzIG5vZGVzIGFuZCBsaW5rcyBiYXNlZCBvbiB0aGUgZGF0YXNldCBzdHJ1Y3R1cmUgYW5kIHNlbGVjdGVkIHllYXJcbiAgICAgIGNvbnN0IG5vZGVzQXJyYXkgPSBbXTtcbiAgICAgIGNvbnN0IGxpbmtzID0gW107XG4gICAgICBjb25zdCBub2RlTWFwID0gbmV3IE1hcCgpOyAvLyBGb3IgZmFzdGVyIGxvb2t1cCBhbmQgYXZvaWRpbmcgZHVwbGljYXRlc1xuXG4gICAgICBkYXRhLmZvckVhY2goc3VwcGxpZXJFbnRyeSA9PiB7XG4gICAgICAgIGNvbnN0IHN1cHBsaWVyID0gc3VwcGxpZXJFbnRyeS5zdXBwbGllcjtcbiAgICAgICAgaWYgKCFub2RlTWFwLmhhcyhzdXBwbGllcikpIHtcbiAgICAgICAgICBub2RlTWFwLnNldChzdXBwbGllciwgeyBuYW1lOiBzdXBwbGllciwgZ3JvdXA6ICdzdXBwbGllcicgfSk7XG4gICAgICAgICAgbm9kZXNBcnJheS5wdXNoKHsgbmFtZTogc3VwcGxpZXIsIGdyb3VwOiAnc3VwcGxpZXInIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgc3VwcGxpZXJFbnRyeS5yZWNpcGllbnRzLmZvckVhY2gocmVjaXBpZW50RW50cnkgPT4ge1xuICAgICAgICAgIGNvbnN0IHJlY2lwaWVudCA9IHJlY2lwaWVudEVudHJ5LnJlY2lwaWVudDtcbiAgICAgICAgICBjb25zdCB0cmFkZVZhbHVlID0gcmVjaXBpZW50RW50cnkueWVhcnNbc2VsZWN0ZWRZZWFyXSB8fCAwO1xuXG4gICAgICAgICAgLy8gT25seSBhZGQgdGhlIGxpbmsgaWYgdGhlcmUncyBhIHRyYWRlIHZhbHVlIGZvciB0aGUgc2VsZWN0ZWQgeWVhclxuICAgICAgICAgIGlmICh0cmFkZVZhbHVlID4gMCkge1xuICAgICAgICAgICAgaWYgKCFub2RlTWFwLmhhcyhyZWNpcGllbnQpKSB7XG4gICAgICAgICAgICAgIG5vZGVNYXAuc2V0KHJlY2lwaWVudCwgeyBuYW1lOiByZWNpcGllbnQsIGdyb3VwOiAncmVjaXBpZW50JyB9KTtcbiAgICAgICAgICAgICAgbm9kZXNBcnJheS5wdXNoKHsgbmFtZTogcmVjaXBpZW50LCBncm91cDogJ3JlY2lwaWVudCcgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsaW5rcy5wdXNoKHtcbiAgICAgICAgICAgICAgc291cmNlOiBzdXBwbGllcixcbiAgICAgICAgICAgICAgdGFyZ2V0OiByZWNpcGllbnQsXG4gICAgICAgICAgICAgIHZhbHVlOiB0cmFkZVZhbHVlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuXG4gICAgICAvLyBEZWZpbmUgY29sb3IgYXNzaWdubWVudHMgZm9yIHNwZWNpZmljIHN1cHBsaWVyc1xuICAgICAgY29uc3QgY29sb3JTY2FsZSA9IGQzLnNjYWxlT3JkaW5hbCgpXG4gICAgICAgIC5kb21haW4oWydVbml0ZWQgU3RhdGVzJywgJ1J1c3NpYScsICdDaGluYScsICdJbmRpYSddKVxuICAgICAgICAucmFuZ2UoWycjNDY4MkI0JywgJyNEQzE0M0MnLCAnI0ZGREI1OCcsICcjRkY2NzFGJ10pOyAvLyBCbHVlIGZvciBVUywgUmVkIGZvciBSdXNzaWEsIFllbGxvdyBmb3IgQ2hpbmFcblxuICAgICAgY29uc3Qgbm9kZVNpemVTY2FsZSA9IGQzLnNjYWxlU3FydCgpXG4gICAgICAgIC5kb21haW4oWzAsIGQzLm1heChsaW5rcywgZCA9PiBkLnZhbHVlKV0pXG4gICAgICAgIC5yYW5nZShbNSwgMjBdKTtcblxuICAgICAgc3ZnLmF0dHIoXCJ2aWV3Qm94XCIsIFswLCAwLCB3aWR0aCwgaGVpZ2h0XSk7XG5cbiAgICAgIC8vIEFkZCBjb250YWluZXIgZ3JvdXAgZm9yIHpvb21pbmdcbiAgICAgIGNvbnN0IGNvbnRhaW5lciA9IHN2Zy5hcHBlbmQoXCJnXCIpO1xuXG4gICAgICBjb25zdCBkZWZhdWx0VHJhbnNmb3JtID0gZDMuem9vbUlkZW50aXR5XG4gICAgICAgIC50cmFuc2xhdGUod2lkdGggLyA4LCBoZWlnaHQgLyA0KSAvLyBQYW4gdG8gYWRqdXN0IGluaXRpYWwgcG9zaXRpb25cbiAgICAgICAgLnNjYWxlKDAuNzUpOyAvLyBab29tIGxldmVsXG5cbiAgICAgIHN2Zy5jYWxsKGQzLnpvb20oKVxuICAgICAgICAuc2NhbGVFeHRlbnQoWzAuNSwgNV0pXG4gICAgICAgIC5vbihcInpvb21cIiwgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgY29udGFpbmVyLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgZXZlbnQudHJhbnNmb3JtKTtcbiAgICAgICAgfSkpO1xuXG4gICAgICBzdmcuY2FsbChkMy56b29tKCkudHJhbnNmb3JtLCBkZWZhdWx0VHJhbnNmb3JtKTtcblxuICAgICAgLy8gU2V0IHRoZSBpbml0aWFsIHRyYW5zZm9ybSBvbiB0aGUgY29udGFpbmVyXG4gICAgICBjb250YWluZXIuYXR0cihcInRyYW5zZm9ybVwiLCBkZWZhdWx0VHJhbnNmb3JtKTtcblxuICAgICAgLy8gRHJhdyBsaW5rcyB3aXRoIGxvd2VyIG9wYWNpdHkgZm9yIGFlc3RoZXRpYyBlZmZlY3RcbiAgICAgIGNvbnN0IGxpbmsgPSBjb250YWluZXIuYXBwZW5kKFwiZ1wiKVxuICAgICAgICAuYXR0cihcInN0cm9rZS1vcGFjaXR5XCIsIDAuMylcbiAgICAgICAgLnNlbGVjdEFsbChcImxpbmVcIilcbiAgICAgICAgLmRhdGEobGlua3MpXG4gICAgICAgIC5qb2luKFwibGluZVwiKVxuICAgICAgICAuYXR0cihcInN0cm9rZVwiLCBcIiNlMGUwZTBcIilcbiAgICAgICAgLmF0dHIoXCJzdHJva2Utd2lkdGhcIiwgZCA9PiBkLnZhbHVlIC8gMTAwKTtcblxuICAgICAgLy8gRHJhdyBub2RlcyB3aXRoIHNpemUgYW5kIGNvbG9yIGJhc2VkIG9uIGdyb3VwXG4gICAgICBjb25zdCBub2RlID0gY29udGFpbmVyLmFwcGVuZChcImdcIilcbiAgICAgICAgLnNlbGVjdEFsbChcImNpcmNsZVwiKVxuICAgICAgICAuZGF0YShub2Rlc0FycmF5KVxuICAgICAgICAuam9pbihcImNpcmNsZVwiKVxuICAgICAgICAuYXR0cihcInJcIiwgZCA9PiBub2RlU2l6ZVNjYWxlKGxpbmtzLmZpbmQobGluayA9PiBsaW5rLnRhcmdldCA9PT0gZC5uYW1lIHx8IGxpbmsuc291cmNlID09PSBkLm5hbWUpPy52YWx1ZSB8fCAxKSlcbiAgICAgICAgLmF0dHIoXCJmaWxsXCIsIGQgPT4ge1xuICAgICAgICAgIGlmIChkLmdyb3VwID09PSAnc3VwcGxpZXInKSByZXR1cm4gY29sb3JTY2FsZShkLm5hbWUpIHx8ICcjZTBlMGUwJztcbiAgICAgICAgICBpZiAoZC5uYW1lID09PSAnSW5kaWEnKSByZXR1cm4gY29sb3JTY2FsZShkLm5hbWUpIHx8ICcjZTBlMGUwJztcbiAgICAgICAgICByZXR1cm4gJyNlMGUwZTAnOyAvLyBEZWZhdWx0IGNvbG9yIGZvciByZWNpcGllbnRzXG4gICAgICAgIH0pXG4gICAgICAgIC5jYWxsKGQzLmRyYWcoKVxuICAgICAgICAgIC5vbihcInN0YXJ0XCIsIChldmVudCwgZCkgPT4ge1xuICAgICAgICAgICAgaWYgKCFldmVudC5hY3RpdmUpIHNpbXVsYXRpb24uYWxwaGFUYXJnZXQoMC4zKS5yZXN0YXJ0KCk7XG4gICAgICAgICAgICBkLmZ4ID0gZC54O1xuICAgICAgICAgICAgZC5meSA9IGQueTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5vbihcImRyYWdcIiwgKGV2ZW50LCBkKSA9PiB7XG4gICAgICAgICAgICBkLmZ4ID0gZXZlbnQueDtcbiAgICAgICAgICAgIGQuZnkgPSBldmVudC55O1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLm9uKFwiZW5kXCIsIChldmVudCwgZCkgPT4ge1xuICAgICAgICAgICAgaWYgKCFldmVudC5hY3RpdmUpIHNpbXVsYXRpb24uYWxwaGFUYXJnZXQoMCk7XG4gICAgICAgICAgICBkLmZ4ID0gbnVsbDtcbiAgICAgICAgICAgIGQuZnkgPSBudWxsO1xuICAgICAgICAgIH0pXG4gICAgICAgICk7XG5cbiAgICAgIC8vIEFkZCBsYWJlbHMgZm9yIGVhY2ggbm9kZVxuICAgICAgY29uc3QgbGFiZWwgPSBjb250YWluZXIuYXBwZW5kKFwiZ1wiKVxuICAgICAgICAuc2VsZWN0QWxsKFwidGV4dFwiKVxuICAgICAgICAuZGF0YShub2Rlc0FycmF5KVxuICAgICAgICAuam9pbihcInRleHRcIilcbiAgICAgICAgLmF0dHIoXCJkeFwiLCBkID0+IHtcbiAgICAgICAgICBjb25zdCBub2RlVmFsdWUgPSBsaW5rcy5maW5kKGxpbmsgPT4gbGluay50YXJnZXQgPT09IGQubmFtZSB8fCBsaW5rLnNvdXJjZSA9PT0gZC5uYW1lKT8udmFsdWUgfHwgMTtcbiAgICAgICAgICByZXR1cm4gbm9kZVNpemVTY2FsZShub2RlVmFsdWUpICsgNTsgLy8gQWRkIDVweCBwYWRkaW5nIGFmdGVyIHRoZSByYWRpdXNcbiAgICAgICAgfSlcbiAgICAgICAgLmF0dHIoXCJkeVwiLCA0KVxuICAgICAgICAuYXR0cihcImZvbnQtc2l6ZVwiLCBcIjE2cHhcIilcbiAgICAgICAgLmF0dHIoXCJmaWxsXCIsIFwiI2UwZTBlMFwiKVxuICAgICAgICAudGV4dChkID0+IGQubmFtZSk7XG5cbiAgICAgIC8vIFRvb2x0aXAgZm9yIG5vZGUgaG92ZXIgZGV0YWlsc1xuICAgICAgY29uc3QgdG9vbHRpcCA9IGQzLnNlbGVjdChcImJvZHlcIikuYXBwZW5kKFwiZGl2XCIpXG4gICAgICAgIC5zdHlsZShcInBvc2l0aW9uXCIsIFwiYWJzb2x1dGVcIilcbiAgICAgICAgLnN0eWxlKFwiYmFja2dyb3VuZFwiLCBcInJnYmEoMCwgMCwgMCwgMC44KVwiKVxuICAgICAgICAuc3R5bGUoXCJjb2xvclwiLCBcIiNlMGUwZTBcIilcbiAgICAgICAgLnN0eWxlKFwicGFkZGluZ1wiLCBcIjEycHhcIilcbiAgICAgICAgLnN0eWxlKFwiYm9yZGVyLXJhZGl1c1wiLCBcIjhweFwiKVxuICAgICAgICAuc3R5bGUoXCJmb250LXNpemVcIiwgXCIxNnB4XCIpXG4gICAgICAgIC5zdHlsZShcInBvaW50ZXItZXZlbnRzXCIsIFwibm9uZVwiKVxuICAgICAgICAuc3R5bGUoXCJkaXNwbGF5XCIsIFwibm9uZVwiKTtcblxuICAgICAgbm9kZS5vbihcIm1vdXNlb3ZlclwiLCAoZXZlbnQsIGQpID0+IHtcbiAgICAgICAgdG9vbHRpcC5zdHlsZShcImRpc3BsYXlcIiwgXCJibG9ja1wiKVxuICAgICAgICAgIC5odG1sKGBcbiAgICAgICAgICAgIDxzdHJvbmc+JHtkLm5hbWV9PC9zdHJvbmc+XG4gICAgICAgICAgYCk7XG4gICAgICB9KVxuICAgICAgLm9uKFwibW91c2Vtb3ZlXCIsIChldmVudCkgPT4ge1xuICAgICAgICB0b29sdGlwLnN0eWxlKFwidG9wXCIsIGAke2V2ZW50LnBhZ2VZICsgMTB9cHhgKVxuICAgICAgICAgIC5zdHlsZShcImxlZnRcIiwgYCR7ZXZlbnQucGFnZVggKyAxMH1weGApO1xuICAgICAgfSlcbiAgICAgIC5vbihcIm1vdXNlb3V0XCIsICgpID0+IHRvb2x0aXAuc3R5bGUoXCJkaXNwbGF5XCIsIFwibm9uZVwiKSk7XG5cbiAgICAgIC8vIERlZmluZSBzaW11bGF0aW9uIGFuZCBhcHBseSBmb3JjZXNcbiAgICAgIGNvbnN0IHNpbXVsYXRpb24gPSBkMy5mb3JjZVNpbXVsYXRpb24obm9kZXNBcnJheSlcbiAgICAgICAgLmZvcmNlKFwibGlua1wiLCBkMy5mb3JjZUxpbmsobGlua3MpLmlkKGQgPT4gZC5uYW1lKS5kaXN0YW5jZSg3NSkuc3RyZW5ndGgoMC4yNSkpXG4gICAgICAgIC5mb3JjZShcImNoYXJnZVwiLCBkMy5mb3JjZU1hbnlCb2R5KCkuc3RyZW5ndGgoLTQwMCkpXG4gICAgICAgIC5mb3JjZShcImNlbnRlclwiLCBkMy5mb3JjZUNlbnRlcih3aWR0aCAvIDIsIGhlaWdodCAvIDIpKVxuICAgICAgICAub24oXCJ0aWNrXCIsICgpID0+IHtcbiAgICAgICAgICBsaW5rXG4gICAgICAgICAgICAuYXR0cihcIngxXCIsIGQgPT4gZC5zb3VyY2UueClcbiAgICAgICAgICAgIC5hdHRyKFwieTFcIiwgZCA9PiBkLnNvdXJjZS55KVxuICAgICAgICAgICAgLmF0dHIoXCJ4MlwiLCBkID0+IGQudGFyZ2V0LngpXG4gICAgICAgICAgICAuYXR0cihcInkyXCIsIGQgPT4gZC50YXJnZXQueSk7XG5cbiAgICAgICAgICBub2RlXG4gICAgICAgICAgICAuYXR0cihcImN4XCIsIGQgPT4gZC54KVxuICAgICAgICAgICAgLmF0dHIoXCJjeVwiLCBkID0+IGQueSk7XG5cbiAgICAgICAgICBsYWJlbFxuICAgICAgICAgICAgLmF0dHIoXCJ4XCIsIGQgPT4gZC54KVxuICAgICAgICAgICAgLmF0dHIoXCJ5XCIsIGQgPT4gZC55KTtcbiAgICAgICAgfSk7XG5cbiAgICAgIC8vIENsZWFudXAgb24gdW5tb3VudFxuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgdG9vbHRpcC5yZW1vdmUoKTtcbiAgICAgIH07XG4gICAgfSk7XG4gIH0sIFtzZWxlY3RlZFllYXJdKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgc3R5bGU9e3sgcG9zaXRpb246ICdyZWxhdGl2ZScsIHdpZHRoOiAnMTAwJSd9fT5cbiAgICAgIDxoMyBzdHlsZT17e3RleHRBbGlnbjogJ2NlbnRlcicsIGZvbnRTaXplOiAnMjRweCcsIGNvbG9yOiAnI2U3NGMzYycsIHBhZGRpbmdUb3A6ICcyMHB4Jyx9fT5cbiAgICAgICAgICBHbG9iYWwgQXJtcyBUcmFkZSBOZXR3b3JrIHtzZWxlY3RlZFllYXJ9XG4gICAgICA8L2gzPlxuXG4gICAgICA8aW5wdXRcbiAgICAgICAgICB0eXBlPVwicmFuZ2VcIlxuICAgICAgICAgIG1pbj1cIjE5NTBcIlxuICAgICAgICAgIG1heD1cIjIwMjNcIlxuICAgICAgICAgIHZhbHVlPXtzZWxlY3RlZFllYXJ9XG4gICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRTZWxlY3RlZFllYXIoK2UudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgd2lkdGg6ICc4MCUnLFxuICAgICAgICAgICAgYXBwZWFyYW5jZTogJ25vbmUnLFxuICAgICAgICAgICAgaGVpZ2h0OiAnOHB4JyxcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ2dyYXknLFxuICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAnNXB4JyxcbiAgICAgICAgICAgIG91dGxpbmU6ICdub25lJyxcbiAgICAgICAgICAgIG1hcmdpbjogJzIwcHggYXV0byAxMHB4JyxcbiAgICAgICAgICAgIGRpc3BsYXk6ICdibG9jaycsXG4gICAgICAgICAgICBhY2NlbnRDb2xvcjogJyNlNzRjM2MnLFxuICAgICAgICAgIH19XG4gICAgICAvPlxuXG4gICAgICA8c3ZnIHJlZj17c3ZnUmVmfSBzdHlsZT17eyB3aWR0aDogJzEwMCUnLCBib3JkZXI6ICczcHggc29saWQgI2U3NGMzYycsIGJvcmRlclJhZGl1czogJzhweCcgfX0+PC9zdmc+XG4gICAgICBcbiAgICA8L2Rpdj5cbiAgKTsgIFxuICB9O1xuICBcbmV4cG9ydCBkZWZhdWx0IEZvcmNlRGlyZWN0ZWRHcmFwaDtcbiIsImNvbnN0IGNvdW50cnlDb29yZGluYXRlcyA9IHtcbiAgJ0FmZ2hhbmlzdGFuJzogWzY3LjcwOTk1MywgMzMuOTM5MTFdLFxuICAnQWxiYW5pYSc6IFsyMC4xNjgzMzEsIDQxLjE1MzMzMl0sXG4gICdBbGdlcmlhJzogWzEuNjU5NjI2LCAyOC4wMzM4ODZdLFxuICAnQW5nb2xhJzogWzE3Ljg3Mzg4NywgLTExLjIwMjY5Ml0sXG4gICdBcmdlbnRpbmEnOiBbLTYzLjYxNjY3MiwgLTM4LjQxNjA5N10sXG4gICdBcm1lbmlhJzogWzQ1LjAzODE4OSwgNDAuMDY5MDk5XSxcbiAgJ0F1c3RyYWxpYSc6IFsxMzMuNzc1MTM2LCAtMjUuMjc0Mzk4XSxcbiAgJ0F1c3RyaWEnOiBbMTQuNTUwMDcyLCA0Ny41MTYyMzFdLFxuICAnQXplcmJhaWphbic6IFs0Ny41NzY5MjcsIDQwLjE0MzEwNV0sXG4gICdCYWhyYWluJzogWzUwLjYzNzc3MiwgMjUuOTMwNDE0XSxcbiAgJ0JhbmdsYWRlc2gnOiBbOTAuMzU2MzMxLCAyMy42ODQ5OTRdLFxuICAnQmVsYXJ1cyc6IFsyNy45NTMzODksIDUzLjcwOTgwN10sXG4gICdCZWxnaXVtJzogWzQuNDY5OTM2LCA1MC41MDM4ODddLFxuICAnQm9saXZpYSc6IFstNjMuNTg4NjUzLCAtMTYuMjkwMTU0XSxcbiAgJ0Jvc25pYS1IZXJ6ZWdvdmluYSc6IFsxNy42NzkwNzYsIDQzLjkxNTg4Nl0sXG4gICdCcmF6aWwnOiBbLTUxLjkyNTI4LCAtMTQuMjM1MDA0XSxcbiAgJ0J1bGdhcmlhJzogWzI1LjQ4NTgzLCA0Mi43MzM4ODNdLFxuICAnQ2FtYm9kaWEnOiBbMTA0Ljk5MDk2MywgMTIuNTY1Njc5XSxcbiAgJ0NhbmFkYSc6IFstMTA2LjM0Njc3MSwgNTYuMTMwMzY2XSxcbiAgJ0NlbnRyYWwgQWZyaWNhbiBSZXB1YmxpYyc6IFsyMC45Mzk0NDQsIDYuNjExMTExXSxcbiAgJ0NoYWQnOiBbMTguNzMyMjA3LCAxNS40NTQxNjZdLFxuICAnQ2hpbGUnOiBbLTcxLjU0Mjk2OSwgLTM1LjY3NTE0N10sXG4gICdDaGluYSc6IFsxMDQuMTk1Mzk3LCAzNS44NjE2Nl0sXG4gICdDb2xvbWJpYSc6IFstNzQuMjk3MzMzLCA0LjU3MDg2OF0sXG4gICdDb25nbyc6IFsxNS44Mjc2NTksIC0wLjIyODAyMV0sXG4gICdDb3N0YSBSaWNhJzogWy04My43NTM0MjgsIDkuNzQ4OTE3XSxcbiAgXCJDb3RlIGQnSXZvaXJlXCI6IFstNS41NDcwOCwgNy41Mzk5ODldLFxuICAnQ3JvYXRpYSc6IFsxNS4yLCA0NS4xXSxcbiAgJ0N1YmEnOiBbLTc3Ljc4MTE2NywgMjEuNTIxNzU3XSxcbiAgJ0N5cHJ1cyc6IFszMy40Mjk4NTksIDM1LjEyNjQxM10sXG4gICdDemVjaGlhJzogWzE1LjQ3Mjk2MiwgNDkuODE3NDkyXSxcbiAgJ0N6ZWNob3Nsb3Zha2lhJzogWzE1LjUsIDQ5Ljc1XSxcbiAgJ0Rlbm1hcmsnOiBbOS41MDE3ODUsIDU2LjI2MzkyXSxcbiAgJ0RvbWluaWNhbiBSZXB1YmxpYyc6IFstNzAuMTYyNjUxLCAxOC43MzU2OTNdLFxuICAnRFIgQ29uZ28nOiBbMjEuNzU4NjY0LCAtNC4wMzgzMzNdLFxuICAnRWFzdF9HZXJtYW55JzogWzEzLjQwNDk1NCwgNTIuNTIwMDA4XSxcbiAgJ0VjdWFkb3InOiBbLTc4LjE4MzQwNiwgLTEuODMxMjM5XSxcbiAgJ0VneXB0JzogWzMwLjgwMjQ5OCwgMjYuODIwNTUzXSxcbiAgJ0VsIFNhbHZhZG9yJzogWy04OC44OTY1MywgMTMuNzk0MTg1XSxcbiAgJ0VyaXRyZWEnOiBbMzkuNzgyMzM0LCAxNS4xNzkzODRdLFxuICAnRXRoaW9waWEnOiBbNDAuNDg5NjczLCA5LjE0NV0sXG4gICdGaW5sYW5kJzogWzI1Ljc0ODE1MSwgNjEuOTI0MTFdLFxuICAnRnJhbmNlJzogWzIuMjEzNzQ5LCA0Ni4yMjc2MzhdLFxuICAnR2VvcmdpYSc6IFs0My4zNTY4OTIsIDQyLjMxNTQwN10sXG4gICdHZXJtYW55JzogWzEwLjQ1MTUyNiwgNTEuMTY1NjkxXSxcbiAgJ0dyZWVjZSc6IFsyMS44MjQzMTIsIDM5LjA3NDIwOF0sXG4gICdHdWF0ZW1hbGEnOiBbLTkwLjIzMDc1OSwgMTUuNzgzNDcxXSxcbiAgJ0d1aW5lYSc6IFstOS42OTY2NDUsIDkuOTQ1NTg3XSxcbiAgJ0d1aW5lYS1CaXNzYXUnOiBbLTE1LjE4MDQxMywgMTEuODAzNzQ5XSxcbiAgJ0hhaXRpJzogWy03Mi4yODUyMTUsIDE4Ljk3MTE4N10sXG4gICdIb25kdXJhcyc6IFstODYuMjQxOTA1LCAxNS4xOTk5OTldLFxuICAnSHVuZ2FyeSc6IFsxOS41MDMzMDQsIDQ3LjE2MjQ5NF0sXG4gICdJbmRpYSc6IFs3OC45NjI4OCwgMjAuNTkzNjg0XSxcbiAgJ0luZG9uZXNpYSc6IFsxMTMuOTIxMzI3LCAtMC43ODkyNzVdLFxuICAnSXJhbic6IFs1My42ODgwNDYsIDMyLjQyNzkwOF0sXG4gICdJcmFxJzogWzQzLjY3OTI5MSwgMzMuMjIzMTkxXSxcbiAgJ0lyZWxhbmQnOiBbLTguMjQzODksIDUzLjQxMjkxXSxcbiAgJ0lzcmFlbCc6IFszNC44NTE2MTIsIDMxLjA0NjA1MV0sXG4gICdJdGFseSc6IFsxMi41NjczOCwgNDEuODcxOTRdLFxuICAnSmFwYW4nOiBbMTM4LjI1MjkyNCwgMzYuMjA0ODI0XSxcbiAgJ0pvcmRhbic6IFszNi4yMzg0MTQsIDMwLjU4NTE2NF0sXG4gICdLYXpha2hzdGFuJzogWzY2LjkyMzY4NCwgNDguMDE5NTczXSxcbiAgJ0tlbnlhJzogWzM3LjkwNjE5MywgLTAuMDIzNTU5XSxcbiAgJ0t1d2FpdCc6IFs0Ny40ODE3NjYsIDI5LjMxMTY2XSxcbiAgJ0xhb3MnOiBbMTAyLjQ5NTQ5NiwgMTkuODU2MjddLFxuICAnTGF0dmlhJzogWzI0LjYwMzE4OSwgNTYuODc5NjM1XSxcbiAgJ0xlYmFub24nOiBbMzUuODYyMjg1LCAzMy44NTQ3MjFdLFxuICAnTGlieWEnOiBbMTcuMjI4MzMxLCAyNi4zMzUxXSxcbiAgJ01hZGFnYXNjYXInOiBbNDYuODY5MTA3LCAtMTguNzY2OTQ3XSxcbiAgJ01hbGF5c2lhJzogWzEwMS45NzU3NjYsIDQuMjEwNDg0XSxcbiAgJ01hbGknOiBbLTMuOTk2MTY2LCAxNy41NzA2OTJdLFxuICAnTWF1cml0YW5pYSc6IFstMTAuOTQwODM1LCAyMS4wMDc4OV0sXG4gICdNZXhpY28nOiBbLTEwMi41NTI3ODQsIDIzLjYzNDUwMV0sXG4gICdNb25nb2xpYSc6IFsxMDMuODQ2NjU2LCA0Ni44NjI0OTZdLFxuICAnTW9yb2Njbyc6IFstNy4wOTI2MiwgMzEuNzkxNzAyXSxcbiAgJ01vemFtYmlxdWUnOiBbMzUuNTI5NTYyLCAtMTguNjY1Njk1XSxcbiAgJ015YW5tYXInOiBbOTUuOTU2MjIzLCAyMS45MTM5NjVdLFxuICAnTmFtaWJpYSc6IFsxOC40OTA0MSwgLTIyLjk1NzY0XSxcbiAgJ05lcGFsJzogWzg0LjEyNDAwOCwgMjguMzk0ODU3XSxcbiAgJ05ldGhlcmxhbmRzJzogWzUuMjkxMjY2LCA1Mi4xMzI2MzNdLFxuICAnTmV3IFplYWxhbmQnOiBbMTc0Ljg4NTk3MSwgLTQwLjkwMDU1N10sXG4gICdOaWNhcmFndWEnOiBbLTg1LjIwNzIyOSwgMTIuODY1NDE2XSxcbiAgJ05pZ2VyaWEnOiBbOC42NzUyNzcsIDkuMDgxOTk5XSxcbiAgJ05vcnRoIE1hY2Vkb25pYSc6IFsyMS43NDUyNzUsIDQxLjYwODYzNV0sXG4gICdOb3J0aCBZZW1lbic6IFs0OC41MTYzODgsIDE1LjU1MjcyN10sXG4gICdOb3J0aF9Lb3JlYSc6IFsxMjcuNTEwMDkzLCA0MC4zMzk4NTJdLFxuICAnTm9yd2F5JzogWzguNDY4OTQ2LCA2MC40NzIwMjRdLFxuICAnT21hbic6IFs1NS45MjMyNTUsIDIxLjUxMjU4M10sXG4gICdQYWtpc3Rhbic6IFs2OS4zNDUxMTYsIDMwLjM3NTMyMV0sXG4gICdQYXJhZ3VheSc6IFstNTguNDQzODMyLCAtMjMuNDQyNTAzXSxcbiAgJ1BlcnUnOiBbLTc1LjAxNTE1MiwgLTkuMTg5OTY3XSxcbiAgJ1BoaWxpcHBpbmVzJzogWzEyMS43NzQwMTcsIDEyLjg3OTcyMV0sXG4gICdQb2xhbmQnOiBbMTkuMTQ1MTM2LCA1MS45MTk0MzhdLFxuICAnUG9ydHVnYWwnOiBbLTguMjI0NDU0LCAzOS4zOTk4NzJdLFxuICAnUWF0YXInOiBbNTEuMTgzODg0LCAyNS4zNTQ4MjZdLFxuICAnUm9tYW5pYSc6IFsyNC45NjY3NiwgNDUuOTQzMTYxXSxcbiAgJ1J3YW5kYSc6IFsyOS44NzM4ODgsIC0xLjk0MDI3OF0sXG4gICdTYXVkaSBBcmFiaWEnOiBbNDUuMDc5MTYyLCAyMy44ODU5NDJdLFxuICAnU2VyYmlhJzogWzIxLjAwNTg1OSwgNDQuMDE2NTIxXSxcbiAgJ1NpZXJyYSBMZW9uZSc6IFstMTEuNzc5ODg5LCA4LjQ2MDU1NV0sXG4gICdTaW5nYXBvcmUnOiBbMTAzLjgxOTgzNiwgMS4zNTIwODNdLFxuICAnU2xvdmFraWEnOiBbMTkuNjk5MDI0LCA0OC42NjkwMjZdLFxuICAnU29tYWxpYSc6IFs0Ni4xOTk2MTYsIDUuMTUyMTQ5XSxcbiAgJ1NvdXRoIEFmcmljYSc6IFsyMi45Mzc1MDYsIC0zMC41NTk0ODJdLFxuICAnU291dGggS29yZWEnOiBbMTI3Ljc2NjkyMiwgMzUuOTA3NzU3XSxcbiAgJ1NvdXRoIFN1ZGFuJzogWzI5LjY5NDkyNCwgNy44NjI2ODVdLFxuICAnU291dGggVmlldG5hbSc6IFsxMDYuNjI5NywgMTAuODIzMV0sXG4gICdTb3V0aCBZZW1lbic6IFs0NS4wMzY3LCAxMi44MDVdLFxuICAnU3BhaW4nOiBbLTMuNzQ5MjIsIDQwLjQ2MzY2N10sXG4gICdTcmkgTGFua2EnOiBbODAuNzcxNzk3LCA3Ljg3MzA1NF0sXG4gICdTdWRhbic6IFszMC4yMTc2MzYsIDEyLjg2MjgwN10sXG4gICdTd2VkZW4nOiBbMTguNjQzNTAxLCA2MC4xMjgxNjFdLFxuICAnU3dpdHplcmxhbmQnOiBbOC4yMjc1MTIsIDQ2LjgxODE4OF0sXG4gICdTeXJpYSc6IFszOC45OTY4MTUsIDM0LjgwMjA3NV0sXG4gICdUYWl3YW4nOiBbMTIwLjk2MDUxNSwgMjMuNjk3ODFdLFxuICAnVGFqaWtpc3Rhbic6IFs3MS4yNzYwOTMsIDM4Ljg2MTAzNF0sXG4gICdUYW56YW5pYSc6IFszNC44ODg4MjIsIC02LjM2OTAyOF0sXG4gICdUaGFpbGFuZCc6IFsxMDAuOTkyNTQxLCAxNS44NzAwMzJdLFxuICAnVG9nbyc6IFswLjgyNDc4MiwgOC42MTk1NDNdLFxuICAnVHVuaXNpYSc6IFs5LjUzNzQ5OSwgMzMuODg2OTE3XSxcbiAgJ1R1cmtpeWUnOiBbMzUuMjQzMzIyLCAzOC45NjM3NDVdLFxuICAnVHVya21lbmlzdGFuJzogWzU5LjU1NjI3OCwgMzguOTY5NzE5XSxcbiAgJ1VBRSc6IFs1My44NDc4MTgsIDIzLjQyNDA3Nl0sXG4gICdVZ2FuZGEnOiBbMzIuMjkwMjc1LCAxLjM3MzMzM10sXG4gICdVa3JhaW5lJzogWzMxLjE2NTU4LCA0OC4zNzk0MzNdLFxuICAnVW5pdGVkX0tpbmdkb20nOiBbLTMuNDM1OTczLCA1NS4zNzgwNTFdLFxuICAnVW5pdGVkIFN0YXRlcyc6IFstMTA1LjUzOTI0MTQ1MTYwMDE4LCA0MS4yOTg1MzczOTQ2NDE2MV0sXG4gICdVcnVndWF5JzogWy01NS43NjU4MzUsIC0zMi41MjI3NzldLFxuICAnVmVuZXp1ZWxhJzogWy02Ni41ODk3MywgNi40MjM3NV0sXG4gICdWaWV0IE5hbSc6IFsxMDguMjc3MTk5LCAxNC4wNTgzMjRdLFxuICAnWWVtZW4nOiBbNDguNTE2Mzg4LCAxNS41NTI3MjddLFxuICAnWXVnb3NsYXZpYSc6IFsyMS4wMDU4NTksIDQ0LjAxNjUyMV0sXG4gICdaYW1iaWEnOiBbMjcuODQ5MzMyLCAtMTMuMTMzODk3XSxcbiAgJ1ppbWJhYndlJzogWzI5LjE1NDg1NywgLTE5LjAxNTQzOF0sXG4gICdTb3ZpZXRfVW5pb24nOiBbMTA1LjMxODc1NiwgNjEuNTI0MDFdLFxuICAnUnVzc2lhJzogWzEwNS4zMTg3NTYsIDYxLjUyNDAxXSxcbiAgJ0t5cmd5enN0YW4nOiBbNzQuNzY2MDk4LCA0MS4yMDQzOF0sXG4gICdTbG92ZW5pYSc6IFsxNC45OTU0NjMsIDQ2LjE1MTI0MV0sXG4gICdNb2xkb3ZhJzogWzI4LjM2OTg4NSwgNDcuNDExNjMxXSxcbiAgJ1V6YmVraXN0YW4nOiBbNjQuNTg1MywgNDEuMzc3NV0sXG4gICdCb3Rzd2FuYSc6IFsyNC42ODQ5LCAtMjIuMzI4NV0sXG4gICdCdXJraW5hIEZhc28nOiBbLTEuNTYxNiwgMTIuMjM4M10sXG4gICdDYWJvIFZlcmRlJzogWy0yMy4wNDE4LCAxNi41Mzg4XSxcbiAgJ0NhbWVyb29uJzogWzEyLjM1NDcsIDcuMzY5N10sXG4gICdEamlib3V0aSc6IFs0Mi41OTAzLCAxMS44MjUxXSxcbiAgJ0VzdG9uaWEnOiBbMjUuMDEzNiwgNTguNTk1M10sXG4gICdHYWJvbic6IFsxMS42MDk0LCAtMC44MDM3XSxcbiAgJ0doYW5hJzogWy0xLjAyMzIsIDcuOTQ2NV0sXG4gICdHdXlhbmEnOiBbLTU4LjkzMDIsIDQuODYwNF0sXG4gICdKYW1haWNhJzogWy03Ny4yOTc1LCAxOC4xMDk2XSxcbiAgJ0tvc292byc6IFsyMC45MDI5LCA0Mi42MDI2XSxcbiAgJ0xpdGh1YW5pYSc6IFsyMy44ODEzLCA1NS4xNjk0XSxcbiAgJ0x1eGVtYm91cmcnOiBbNi4xMjk2LCA0OS44MTUzXSxcbiAgJ01hbGRpdmVzJzogWzczLjIyMDcsIDMuMjAyOF0sXG4gICdNYWx0YSc6IFsxNC4zNzU0LCAzNS45Mzc1XSxcbiAgJ01vbnRlbmVncm8nOiBbMTkuMzc0NCwgNDIuNzA4N10sXG4gICdOaWdlcic6IFs4LjA4MTcsIDE3LjYwNzhdLFxuICAnU2VuZWdhbCc6IFstMTQuNDUyNCwgMTQuNDk3NF0sXG4gICdBbnRpZ3VhIGFuZCBCYXJidWRhJzogWy02MS43OTY0LCAxNy4wNjA4XSxcbiAgJ0JlbmluJzogWzIuMzE1OCwgOS4zMDc3XSxcbiAgJ0JydW5laSc6IFsxMTQuNzI3NywgNC41MzUzXSxcbiAgJ0VxdWF0b3JpYWwgR3VpbmVhJzogWzEwLjI2NzksIDEuNjUwOF0sXG4gICdHYW1iaWEnOiBbLTE1LjMxMDEsIDEzLjQ0MzJdLFxuICAnTWFsYXdpJzogWzM0LjMwMTUsIC0xMy4yNTQzXSxcbiAgJ01hdXJpdGl1cyc6IFs1Ny41NTIyLCAtMjAuMzQ4NF0sXG4gICdTZXljaGVsbGVzJzogWzU1LjQ5MTksIC00LjY3OTZdLFxuICAnU3VyaW5hbWUnOiBbLTU2LjAyNzgsIDMuOTE5M10sXG4gICdUcmluaWRhZCBhbmQgVG9iYWdvJzogWy02MS4yMjI1LCAxMC42OTE4XVxufTtcblxuZXhwb3J0IGRlZmF1bHQgY291bnRyeUNvb3JkaW5hdGVzO1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgRGVja0dMIGZyb20gJ0BkZWNrLmdsL3JlYWN0JztcbmltcG9ydCB7IEFyY0xheWVyIH0gZnJvbSAnQGRlY2suZ2wvbGF5ZXJzJztcbmltcG9ydCB7IE1hcCB9IGZyb20gJ3JlYWN0LW1hcC1nbCc7XG5pbXBvcnQgJ21hcGJveC1nbC9kaXN0L21hcGJveC1nbC5jc3MnO1xuaW1wb3J0IGNvdW50cnlDb29yZGluYXRlcyBmcm9tICcuL2NvdW50cnlDb29yZGluYXRlcyc7XG5cbmNvbnN0IE1BUEJPWF9UT0tFTiA9ICdway5leUoxSWpvaWEzZHdkR2hsWjNKbFlYUWlMQ0poSWpvaVkyMHphamxqZDNaMk1ERXhaakp5Y0hSdmNHRTBkbTl1WXlKOS45SXdzV0tkM3JNMGFWeGpYTkQ0TFVRJzsgLy8gUmVwbGFjZSB3aXRoIHlvdXIgYWN0dWFsIE1hcGJveCB0b2tlblxuXG4vLyBGdW5jdGlvbiB0byBleHRyYWN0IHRoZSB5ZWFyIGZyb20gYSByZWNvcmQgZHluYW1pY2FsbHlcbmZ1bmN0aW9uIGV4dHJhY3RZZWFyRnJvbVJlY29yZChyZWNvcmQpIHtcbiAgLy8gRXhhbXBsZTogSWYgdGhlIHJlY29yZCBoYXMgYSBgZGF0ZWAgZmllbGQgd2l0aCBhIHllYXIsIGV4dHJhY3QgaXRcbiAgaWYgKHJlY29yZC5kYXRlKSB7XG4gICAgY29uc3QgbWF0Y2ggPSByZWNvcmQuZGF0ZS5tYXRjaCgvXFxiKDIwXFxkezJ9KVxcYi8pOyAvLyBNYXRjaCB5ZWFycyBsaWtlIDIwMDAtMjA5OVxuICAgIHJldHVybiBtYXRjaCA/IHBhcnNlSW50KG1hdGNoWzBdLCAxMCkgOiBudWxsO1xuICB9XG5cbiAgLy8gSWYgbm8gdmFsaWQgeWVhciBjYW4gYmUgZXh0cmFjdGVkLCByZXR1cm4gbnVsbFxuICAvKlxuICBjb25zb2xlLndhcm4oJ1llYXIgbm90IGZvdW5kIGZvciByZWNvcmQ6JywgcmVjb3JkKTtcbiAgKi9cbiAgcmV0dXJuIG51bGw7XG59XG5cbmZ1bmN0aW9uIFdvcmxkQ2hvcmQoKSB7XG4gIGNvbnN0IFtkYXRhLCBzZXREYXRhXSA9IHVzZVN0YXRlKFtdKTtcbiAgY29uc3QgW2ZpbHRlcmVkRGF0YSwgc2V0RmlsdGVyZWREYXRhXSA9IHVzZVN0YXRlKFtdKTtcbiAgY29uc3QgW3llYXIsIHNldFllYXJdID0gdXNlU3RhdGUoMjAxNCk7IC8vIERlZmF1bHQgeWVhciBmb3IgdGhlIHNsaWRlciBmaWx0ZXJcbiAgY29uc3QgW3NlbGVjdGVkQ291bnRyeSwgc2V0U2VsZWN0ZWRDb3VudHJ5XSA9IHVzZVN0YXRlKCdhbGwnKTtcbiAgY29uc3QgW2hvdmVyZWRJbmZvLCBzZXRIb3ZlcmVkSW5mb10gPSB1c2VTdGF0ZShudWxsKTtcbiAgXG4gIGNvbnN0IGNvdW50cnlDb2xvcnMgPSB7XG4gICAgXCJVbml0ZWQgU3RhdGVzXCI6IFs3MCwgMTMwLCAxODBdLCAvLyBTdGVlbCBCbHVlIChyZ2IgZm9ybWF0KVxuICAgIFwiUnVzc2lhXCI6IFsyMjAsIDIwLCA2MF0sIC8vIENyaW1zb24gKHJnYiBmb3JtYXQpXG4gICAgXCJDaGluYVwiOiBbMjU1LCAyMTksIDg4XSwgLy8gTGlnaHQgR29sZCAocmdiIGZvcm1hdClcbiAgICAvLyBBZGQgbW9yZSBjb3VudHJpZXMgYW5kIGNvbG9ycyBhcyBuZWVkZWRcbiAgfTtcbiAgXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgLy8gRmV0Y2ggZGF0YSBmcm9tIGNvbnZlcnRlZF9kYXRhLmpzb25cbiAgICBmZXRjaChgJHtwcm9jZXNzLmVudi5QVUJMSUNfVVJMfS9kYXRhL3Byb2Nlc3NlZC9jb252ZXJ0ZWRfZGF0YS5qc29uYClcbiAgICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSlcbiAgICAgIC50aGVuKGZldGNoZWREYXRhID0+IHtcblxuICAgICAgICAvLyBBZGQgdGhlIGB5ZWFyYCBmaWVsZCBkeW5hbWljYWxseSBpZiBtaXNzaW5nXG4gICAgICAgIGNvbnN0IHVwZGF0ZWREYXRhID0gZmV0Y2hlZERhdGEubWFwKGQgPT4gKHtcbiAgICAgICAgICAuLi5kLFxuICAgICAgICAgIHllYXI6IGQueWVhciB8fCBleHRyYWN0WWVhckZyb21SZWNvcmQoZCkgLy8gQWRkIHllYXIgZHluYW1pY2FsbHkgaWYgbmVlZGVkXG4gICAgICAgIH0pKTtcblxuICAgICAgICBzZXREYXRhKHVwZGF0ZWREYXRhKTtcblxuICAgICAgICAvLyBGaWx0ZXIgdGhlIGRhdGEgZm9yIHRoZSBpbml0aWFsIHllYXJcbiAgICAgICAgY29uc3QgaW5pdGlhbEZpbHRlcmVkRGF0YSA9IHVwZGF0ZWREYXRhLmZpbHRlcihkID0+IGQueWVhciA9PT0geWVhcik7XG4gICAgICAgIHNldEZpbHRlcmVkRGF0YShpbml0aWFsRmlsdGVyZWREYXRhKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goZXJyb3IgPT4gY29uc29sZS5lcnJvcignRXJyb3IgbG9hZGluZyBKU09OIGRhdGE6JywgZXJyb3IpKTtcbiAgfSwgW3llYXJdKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIC8vIFVwZGF0ZSBmaWx0ZXJlZCBkYXRhIHdoZW4geWVhciBjaGFuZ2VzXG4gICAgaWYgKGRhdGEubGVuZ3RoID4gMCkge1xuICAgICAgY29uc3QgdXBkYXRlZEZpbHRlcmVkRGF0YSA9IGRhdGEuZmlsdGVyKGQgPT4gZC55ZWFyID09PSB5ZWFyKTtcbiAgICAgIHNldEZpbHRlcmVkRGF0YSh1cGRhdGVkRmlsdGVyZWREYXRhKTtcbiAgICB9XG4gIH0sIFt5ZWFyLCBkYXRhXSk7XG5cbiAgY29uc3QgZmlsdGVyZWRCeUNvdW50cnkgPSBmaWx0ZXJlZERhdGEuZmlsdGVyKGQgPT4ge1xuICAgIGlmIChzZWxlY3RlZENvdW50cnkgPT09ICdhbGwnKSByZXR1cm4gdHJ1ZTsgLy8gU2hvdyBhbGwgaWYgJ2FsbCcgaXMgc2VsZWN0ZWRcbiAgICByZXR1cm4gZC5vcmlnaW4udG9Mb3dlckNhc2UoKSA9PT0gc2VsZWN0ZWRDb3VudHJ5LnRvTG93ZXJDYXNlKCk7IC8vIEZpbHRlciBieSBzZWxlY3RlZCBjb3VudHJ5XG4gIH0pO1xuICAvLyBGaWx0ZXIgb3V0IGludmFsaWQgcmVjb3Jkc1xuICBjb25zdCB2YWxpZEZpbHRlcmVkRGF0YSA9IGZpbHRlcmVkQnlDb3VudHJ5LmZpbHRlcihkID0+IHtcbiAgICBjb25zdCBzb3VyY2UgPSBjb3VudHJ5Q29vcmRpbmF0ZXNbZC5vcmlnaW5dO1xuICAgIGNvbnN0IHRhcmdldCA9IGNvdW50cnlDb29yZGluYXRlc1tkLmRlc3RpbmF0aW9uXTtcblxuICAgIGlmICghW1wiQ2hpbmFcIiwgXCJSdXNzaWFcIiwgXCJVbml0ZWQgU3RhdGVzXCJdLmluY2x1ZGVzKGQub3JpZ2luKSkge1xuICAgICAgcmV0dXJuIGZhbHNlOyAvLyBTa2lwIHJlY29yZHMgd2hlcmUgdGhlIG9yaWdpbiBpcyBub3Qgb25lIG9mIHRoZXNlXG4gICAgfVxuXG4gICAgLy8gTG9nIG1pc3NpbmcgY291bnRyaWVzXG4gICAgLypcbiAgICBpZiAoIXNvdXJjZSkgY29uc29sZS53YXJuKGBNaXNzaW5nIHNvdXJjZSBjb29yZGluYXRlcyBmb3I6ICR7ZC5vcmlnaW59YCk7XG4gICAgaWYgKCF0YXJnZXQpIGNvbnNvbGUud2FybihgTWlzc2luZyB0YXJnZXQgY29vcmRpbmF0ZXMgZm9yOiAke2QuZGVzdGluYXRpb259YCk7XG4gICAgKi9cbiAgICAvLyBLZWVwIG9ubHkgdmFsaWQgcmVjb3Jkc1xuICAgIHJldHVybiBzb3VyY2UgJiYgdGFyZ2V0O1xuICB9KTtcblxuICBjb25zdCBsYXllcnMgPSBuZXcgQXJjTGF5ZXIoe1xuICAgIGlkOiAnYXJjLWxheWVyJyxcbiAgICBkYXRhOiB2YWxpZEZpbHRlcmVkRGF0YSwgLy8gVXNlIG9ubHkgdmFsaWRhdGVkIGRhdGFcbiAgICBnZXRTb3VyY2VQb3NpdGlvbjogZCA9PiBjb3VudHJ5Q29vcmRpbmF0ZXNbZC5vcmlnaW5dLFxuICAgIGdldFRhcmdldFBvc2l0aW9uOiBkID0+IGNvdW50cnlDb29yZGluYXRlc1tkLmRlc3RpbmF0aW9uXSxcbiAgICBnZXRTb3VyY2VDb2xvcjogZCA9PiBjb3VudHJ5Q29sb3JzW2Qub3JpZ2luXSB8fCBbMjU1LCAyNTUsIDI1NV0sXG4gICAgZ2V0VGFyZ2V0Q29sb3I6IGQgPT4gY291bnRyeUNvbG9yc1tkLm9yaWdpbl0gfHwgWzAsIDEyOCwgMjU1XSwgLy8gRGVmYXVsdCB0byBibHVlIGlmIGNvdW50cnkgY29sb3IgaXMgbWlzc2luZ1xuICAgIGdldFdpZHRoOiBkID0+IE1hdGgubG9nKGQucXVhbnRpdHkgKyAxKSxcbiAgICBwaWNrYWJsZTogdHJ1ZSxcbiAgICBnZXRUb29sdGlwOiAoeyBvYmplY3QgfSkgPT4ge1xuICAgICAgcmV0dXJuIG9iamVjdFxuICAgICAgICA/IGAke29iamVjdC5vcmlnaW59IHRvICR7b2JqZWN0LmRlc3RpbmF0aW9ufTogJHtvYmplY3QucXVhbnRpdHl9ICR7b2JqZWN0LndlYXBvbn0gKCR7b2JqZWN0LnllYXJ9KWBcbiAgICAgICAgOiBudWxsO1xuICAgIH0sXG4gIH0pO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBzdHlsZT17eyBwb3NpdGlvbjogJ3JlbGF0aXZlJywgd2lkdGg6ICcxMDAlJywgaGVpZ2h0OiAnODB2aCd9fT5cblxuICAgICAgPGgzIHN0eWxlPXt7dGV4dEFsaWduOiAnY2VudGVyJywgZm9udFNpemU6ICcyNHB4JywgY29sb3I6ICcjZTc0YzNjJywgcGFkZGluZ1RvcDogJzIwcHgnLH19PlxuICAgICAgICAgIEdsb2JhbCBBcm1zIFByb2xpZmVyYXRpb24ge3llYXJ9XG4gICAgICA8L2gzPlxuXG4gICAgICA8aW5wdXRcbiAgICAgICAgICB0eXBlPVwicmFuZ2VcIlxuICAgICAgICAgIG1pbj1cIjE5NTBcIlxuICAgICAgICAgIG1heD1cIjIwMjNcIlxuICAgICAgICAgIHZhbHVlPXt5ZWFyfVxuICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0WWVhcigrZS50YXJnZXQudmFsdWUpfVxuICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICB3aWR0aDogJzgwJScsXG4gICAgICAgICAgICBhcHBlYXJhbmNlOiAnbm9uZScsXG4gICAgICAgICAgICBoZWlnaHQ6ICc4cHgnLFxuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnZ3JheScsXG4gICAgICAgICAgICBib3JkZXJSYWRpdXM6ICc1cHgnLFxuICAgICAgICAgICAgb3V0bGluZTogJ25vbmUnLFxuICAgICAgICAgICAgbWFyZ2luOiAnMjBweCBhdXRvIDEwcHgnLFxuICAgICAgICAgICAgZGlzcGxheTogJ2Jsb2NrJyxcbiAgICAgICAgICAgIGFjY2VudENvbG9yOiAnI2U3NGMzYycsXG4gICAgICAgICAgfX1cbiAgICAgIC8+XG4gICAgICA8ZGl2IHN0eWxlPXt7cG9zaXRpb246ICdhYnNvbHV0ZScsIGJvdHRvbTogMCwgd2lkdGg6ICcxMDAlJywgaGVpZ2h0OiAnY2FsYygxMDAlIC0gOTBweCknfX0+XG4gICAgICAgIDxEZWNrR0xcbiAgICAgICAgICBzdHlsZT17eyB3aWR0aDogJzEwMCUnLCBoZWlnaHQ6ICcxMDAlJywgYm9yZGVyOiAnM3B4IHNvbGlkICNlNzRjM2MnLCBib3JkZXJSYWRpdXM6ICc4cHgnIH19XG4gICAgICAgICAgaW5pdGlhbFZpZXdTdGF0ZT17e1xuICAgICAgICAgICAgbGF0aXR1ZGU6IDIwLFxuICAgICAgICAgICAgbG9uZ2l0dWRlOiAwLFxuICAgICAgICAgICAgem9vbTogMS41LFxuICAgICAgICAgICAgcGl0Y2g6IDMwXG4gICAgICAgICAgfX1cbiAgICAgICAgICBjb250cm9sbGVyPXt0cnVlfVxuICAgICAgICAgIGxheWVycz17W2xheWVyc119b25Ib3Zlcj17KGluZm8pID0+IHtcbiAgICAgICAgICAgIGlmIChpbmZvLm9iamVjdCkge1xuICAgICAgICAgICAgICBzZXRIb3ZlcmVkSW5mbyhpbmZvKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHNldEhvdmVyZWRJbmZvKG51bGwpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH19XG4gICAgICAgID5cbiAgICAgICAgICA8TWFwXG4gICAgICAgICAgICBtYXBib3hBY2Nlc3NUb2tlbj17TUFQQk9YX1RPS0VOfVxuICAgICAgICAgICAgbWFwU3R5bGU9XCJtYXBib3g6Ly9zdHlsZXMvbWFwYm94L2xpZ2h0LXYxMFwiXG4gICAgICAgICAgICBhdHRyaWJ1dGlvbkNvbnRyb2w9e2ZhbHNlfVxuICAgICAgICAgICAgaW50ZXJhY3RpdmVMYXllcklkcz17WydhcmMtbGF5ZXInXX1cbiAgICAgICAgICAvPlxuICAgICAgICAgIHtob3ZlcmVkSW5mbyAmJiBob3ZlcmVkSW5mby5vYmplY3QgJiYgKFxuICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgICAgICAgICAgICAgbGVmdDogaG92ZXJlZEluZm8ueCxcbiAgICAgICAgICAgICAgICAgIHRvcDogaG92ZXJlZEluZm8ueSxcbiAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMCwgMCwgMCwgMC44KScsXG4gICAgICAgICAgICAgICAgICBjb2xvcjogJ2UwZTBlMCcsXG4gICAgICAgICAgICAgICAgICBwYWRkaW5nOiAnOHB4IDEycHgnLFxuICAgICAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAnOHB4JyxcbiAgICAgICAgICAgICAgICAgIHBvaW50ZXJFdmVudHM6ICdub25lJyxcbiAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiAnMTZweCcsXG4gICAgICAgICAgICAgICAgICB3aGl0ZVNwYWNlOiAnbm93cmFwJyxcbiAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge2Ake2hvdmVyZWRJbmZvLm9iamVjdC5vcmlnaW59IHRvICR7aG92ZXJlZEluZm8ub2JqZWN0LmRlc3RpbmF0aW9ufTogJHtob3ZlcmVkSW5mby5vYmplY3QucXVhbnRpdHl9YH1cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApfVxuICAgICAgICA8L0RlY2tHTD5cblxuICAgICAgPGRpdiBzdHlsZT17e1xuICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgaGVpZ2h0OiAnODBweCcsXG4gICAgICAgIHdpZHRoOiAnMTIwcHgnLFxuICAgICAgICB0b3A6ICcyMHB4JyxcbiAgICAgICAgbGVmdDogJzIwcHgnLFxuICAgICAgICBiYWNrZ3JvdW5kOiAncmdiYSgwLCAwLCAwLCAwLjkpJyxcbiAgICAgICAgcGFkZGluZzogJzEwcHgnLFxuICAgICAgICBib3JkZXJSYWRpdXM6ICc4cHgnLFxuICAgICAgICBmb250U2l6ZTogJzE0cHgnLFxuICAgICAgICBjb2xvcjogJyNlMGUwZTAnLFxuICAgICAgfX0+XG4gICAgICAgIDxwIHN0eWxlPXt7IGRpc3BsYXk6ICdibG9jaycsIG1hcmdpbkJvdHRvbTogJzEwcHgnLCBjb2xvcjogJyNlMGUwZTAnLCBmb250U2l6ZTogJzE0cHgnLCBmb250V2VpZ2h0OiAnYm9sZCd9fT5TZWxlY3QgQ291bnRyeTwvcD5cblxuICAgICAgICA8c2VsZWN0IFxuICAgICAgICAgIG5hbWU9XCJjb3VudHJ5U2VsZWN0b3JcIlxuICAgICAgICAgIHZhbHVlPXtzZWxlY3RlZENvdW50cnl9XG4gICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRTZWxlY3RlZENvdW50cnkoZS50YXJnZXQudmFsdWUpfVxuICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgICAgIHBhZGRpbmc6ICc2cHggMTBweCcsXG4gICAgICAgICAgICB3aWR0aDogJzEwMHB4JyxcbiAgICAgICAgICAgIGNvbG9yOiAnI2UwZTBlMCcsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICdibGFjaycsXG4gICAgICAgICAgICBib3JkZXJSYWRpdXM6ICc4cHgnLFxuICAgICAgICAgICAgZm9udFNpemU6ICcxNHB4JyxcbiAgICAgICAgICB9fVxuICAgICAgICA+XG4gICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cImFsbFwiPkFsbDwvb3B0aW9uPlxuICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJVbml0ZWQgU3RhdGVzXCI+VVM8L29wdGlvbj5cbiAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiUnVzc2lhXCI+UnVzc2lhPC9vcHRpb24+XG4gICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIkNoaW5hXCI+Q2hpbmE8L29wdGlvbj5cbiAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFdvcmxkQ2hvcmQ7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IE1pZ3JhdGlvbk1hcCBmcm9tICcuL2dyYXBocy8wMDNfTWlncmF0aW9uTWFwJztcbmltcG9ydCBGb3JjZURpcmVjdGVkR3JhcGggZnJvbSAnLi9ncmFwaHMvMDAzX0ZvcmNlRGlyZWN0ZWRHcmFwaCc7XG5pbXBvcnQgV29ybGRDaG9yZCBmcm9tICcuL2dyYXBocy8wMDNfV29ybGRDaG9yZCc7XG5cbmNvbnN0IGFsbGlhbmNlID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxzZWN0aW9uIGlkPVwiMDAzXCI+XG4gICAgICA8cCBjbGFzc05hbWU9XCJjdXN0b20tdGl0bGVcIiBzdHlsZT17eyBjc3NUZXh0OiAnbWFyZ2luLXRvcDogMCcgfX0+XG4gICAgICAgIFN0cmVuZ3RoIGluIEFsbGlhbmNlICYgUGFydG5lcnNoaXBcbiAgICAgIDwvcD5cblxuICAgICAgPHAgY2xhc3NOYW1lPVwiY3VzdG9tLXBhcmFncmFwaFwiPlxuICAgICAgICBUaGUgPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiIzQ2ODJCNFwiIH19PlVuaXRlZCBTdGF0ZXM8L3NwYW4+IHVzZXMgYXJtcyBleHBvcnRzIHN0cmF0ZWdpY2FsbHkgdG8gYnVpbGQgYWxsaWFuY2VzIGFuZCBzaGFwZSByZWdpb25hbCBwb3dlciBkeW5hbWljcywgZXNwZWNpYWxseSBhZ2FpbnN0IG1ham9yIHBvd2VycyBsaWtlIFxuICAgICAgICA8c3BhbiBzdHlsZT17eyBjb2xvcjogXCIjREMxNDNDXCIgfX0+IFJ1c3NpYTwvc3Bhbj4gYW5kIDxzcGFuIHN0eWxlPXt7IGNvbG9yOiBcIiNGRkRCNThcIiB9fT5DaGluYTwvc3Bhbj4uIFxuICAgICAgICBCeSBlcXVpcHBpbmcgYWxsaWVzIGluIGtleSBhcmVhc+KAlHN1Y2ggYXMgPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiI0QyQjQ4Q1wiIH19PkVhc3Rlcm4gRXVyb3BlPC9zcGFuPiwgPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiI0QyQjQ4Q1wiIH19PnRoZSBNaWRkbGUgRWFzdDwvc3Bhbj4sIGFuZCA8c3BhbiBzdHlsZT17eyBjb2xvcjogXCIjRDJCNDhDXCIgfX0+QXNpYS1QYWNpZmljPC9zcGFuPuKAlHRoZSA8c3BhbiBzdHlsZT17eyBjb2xvcjogXCIjNDY4MkI0XCIgfX0+VW5pdGVkIFN0YXRlczwvc3Bhbj4gYm9sc3RlcnMgZGVmZW5zZSwgZGV0ZXJzIGFnZ3Jlc3Npb24sIGFuZCBzdHJlbmd0aGVucyBsb25nLXRlcm0gcGFydG5lcnNoaXBzLiBcbiAgICAgICAgVGhlc2UgYWxsaWFuY2VzLCBzdXBwb3J0ZWQgYnkgYWR2YW5jZWQgd2VhcG9ucnksIGNyZWF0ZSBhIGNvb3JkaW5hdGVkIGZyb250IHRoYXQgY291bnRlcnMgPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiI0ZGREI1OFwiIH19PkNoaW5hJ3M8L3NwYW4+IGFuZCA8c3BhbiBzdHlsZT17eyBjb2xvcjogXCIjREMxNDNDXCIgfX0+UnVzc2lhJ3M8L3NwYW4+IGluZmx1ZW5jZS5cbiAgICAgIDwvcD5cblxuICAgICAgPHAgY2xhc3NOYW1lPVwiY3VzdG9tLXBhcmFncmFwaFwiPlxuICAgICAgICBJbiBjb250cmFzdCwgPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiI0RDMTQzQ1wiIH19PlJ1c3NpYTwvc3Bhbj4gYW5kIDxzcGFuIHN0eWxlPXt7IGNvbG9yOiBcIiNGRkRCNThcIiB9fT5DaGluYTwvc3Bhbj4gdXNlIGFybXMgdHJhbnNmZXJzIHRvIGVzdGFibGlzaCBmb290aG9sZHMgaW4gdGhlaXIgb3duIHNwaGVyZXMsIHBhcnRpY3VsYXJseSBpbiB0aGUgPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiI0QyQjQ4Q1wiIH19Pk1pZGRsZSBFYXN0PC9zcGFuPiwgPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiI0QyQjQ4Q1wiIH19PkFmcmljYTwvc3Bhbj4sIGFuZCA8c3BhbiBzdHlsZT17eyBjb2xvcjogXCIjRDJCNDhDXCIgfX0+U291dGhlYXN0IEFzaWE8L3NwYW4+LiBcbiAgICAgICAgVGhpcyBkaXN0cmlidXRpb24gZXZpZGVuY2VzIGFuIGVmZm9ydCBieSB0aGUgPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiIzQ2ODJCNFwiIH19PlVTPC9zcGFuPiwgPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiI0ZGREI1OFwiIH19PiBDaGluYTwvc3Bhbj4sIGFuZCA8c3BhbiBzdHlsZT17eyBjb2xvcjogXCIjREMxNDNDXCIgfX0+UnVzc2lhPC9zcGFuPiB0byBleHBhbmQgdGhlaXIgc3BoZXJlcyBvZiBpbmZsdWVuY2Ugb3IgY29udGFpbiBlYWNoIG90aGVyLlxuICAgICAgPC9wPlxuXG4gICAgICA8cCBjbGFzc05hbWU9XCJjdXN0b20tcGFyYWdyYXBoXCI+XG4gICAgICAgIEEgcXVpY2sgY2FzZSBzdHVkeSwgYXMgc2hvd24gb24gdGhlIG1hcCwgaGlnaGxpZ2h0cyBhIHNpZ25pZmljYW50IGluY3JlYXNlIGluIDxzcGFuIHN0eWxlPXt7IGNvbG9yOiBcIiNGRkRCNThcIiB9fT5DaGluYSdzPC9zcGFuPiBhcm1zIHRyYWRlIHdpdGggPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiI0QyQjQ4Q1wiIH19PkFmcmljYTwvc3Bhbj4gcHJpb3IgdG8gdGhlIGluaXRpYXRpb24gb2YgdGhlIEJlbHQgYW5kIFJvYWQgSW5pdGlhdGl2ZSwgd2hpY2ggb2ZmaWNpYWxseSBzdGFydGVkIGluIDIwMTMuIFRoaXMgZW1waGFzaXplcyBDaGluYSdzIGJyb2FkZXIgZ2VvcG9saXRpY2FsIHN0cmF0ZWd5IG9mIGxldmVyYWdpbmcgYXJtcyB0cmFkZSB0byBzZWN1cmUgYWNjZXNzIHRvIHJlc291cmNlcyBhbmQgZXN0YWJsaXNoIGluZmx1ZW5jZSBpbiBkZXZlbG9waW5nIHJlZ2lvbnMuXG4gICAgICA8L3A+XG4gICAgICBcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2hhcnQtY29udGFpbmVyXCIgc3R5bGU9e3sgd2lkdGg6ICc4MCUnIH19PlxuICAgICAgICA8V29ybGRDaG9yZCAvPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxwIGNsYXNzTmFtZT1cImN1c3RvbS10aXRsZVwiPlxuICAgICAgICBBbiBBbHRlcm5hdGl2ZSBXYXkgdG8gVmlzdWFsaXplIEludGVybmF0aW9uYWwgUmVsYXRpb25zOiBGb3JjZSBEaXJlY3RlZCBHcmFwaCBcbiAgICAgIDwvcD5cblxuICAgICAgPHAgY2xhc3NOYW1lPVwiY3VzdG9tLXBhcmFncmFwaFwiPlxuICAgICAgICBUaGlzIEdsb2JhbCBBcm1zIFRyYWRlIE5ldHdvcmsgZnVydGhlciBpbGx1c3RyYXRlcyBhIGNvbXBsZXggZ2VvcG9saXRpY2FsIGNoZXNzYm9hcmQgd2hlcmUgdGhlIDxzcGFuIHN0eWxlPXt7IGNvbG9yOiBcIiM0NjgyQjRcIiB9fT5Vbml0ZWQgU3RhdGVzPC9zcGFuPiwgPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiI0RDMTQzQ1wiIH19PlJ1c3NpYTwvc3Bhbj4sIGFuZCA8c3BhbiBzdHlsZT17eyBjb2xvcjogXCIjRkZEQjU4XCIgfX0+Q2hpbmEgPC9zcGFuPlxuICAgICAgICB1c2UgYXJtcyBleHBvcnRzIHRvIGV4cGFuZCBpbmZsdWVuY2UgYW5kIHNlY3VyZSBhbGxpYW5jZXMgYWNyb3NzIHN0cmF0ZWdpYyByZWdpb25zLiBFYWNoIHN1cGVycG93ZXLigJlzIG5ldHdvcmsgY2VudGVycyBhcm91bmQga2V5IGFsbGllczpcbiAgICAgIDwvcD5cbiAgICAgIFxuICAgICAgPHVsPlxuICAgICAgICA8bGk+XG4gICAgICAgICAgVGhlIDxzcGFuIHN0eWxlPXt7IGNvbG9yOiBcIiM0NjgyQjRcIiB9fT5Vbml0ZWQgU3RhdGVzPC9zcGFuPiBzdXBwb3J0cyBjb3VudHJpZXMgaW4gXG4gICAgICAgICAgPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiI0QyQjQ4Q1wiLCBmb250U3R5bGU6IFwiaXRhbGljXCIgfX0+IEV1cm9wZSwgdGhlIE1pZGRsZSBFYXN0LCBhbmQgQXNpYS1QYWNpZmljPC9zcGFuPiwgcmVpbmZvcmNpbmcgYSBkZWZlbnNlIGxpbmUgYWdhaW5zdCByaXZhbHMuXG4gICAgICAgIDwvbGk+PGJyLz5cbiAgICAgICAgPGxpPlxuICAgICAgICAgIDxzcGFuIHN0eWxlPXt7IGNvbG9yOiBcIiNEQzE0M0NcIiB9fT5SdXNzaWE8L3NwYW4+IHN1cHBsaWVzIG5hdGlvbnMgaW4gXG4gICAgICAgICAgPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiI0QyQjQ4Q1wiLCBmb250U3R5bGU6IFwiaXRhbGljXCIgfX0+IEVhc3Rlcm4gRXVyb3BlIGFuZCBDZW50cmFsIEFzaWE8L3NwYW4+IHRvIGNvdW50ZXIgTkFUTydzIHJlYWNoLlxuICAgICAgICA8L2xpPjxici8+XG4gICAgICAgIDxsaT5cbiAgICAgICAgICA8c3BhbiBzdHlsZT17eyBjb2xvcjogXCIjRkZEQjU4XCIgfX0+Q2hpbmE8L3NwYW4+IGFybXMgY291bnRyaWVzIGluIFxuICAgICAgICAgIDxzcGFuIHN0eWxlPXt7IGNvbG9yOiBcIiNEMkI0OENcIiwgZm9udFN0eWxlOiBcIml0YWxpY1wiIH19PiBTb3V0aGVhc3QgQXNpYSwgQWZyaWNhLCBhbmQgU291dGggQXNpYTwvc3Bhbj4sIGV4cGFuZGluZyBpdHMgZm9vdGhvbGQgaW4gcmVzb3VyY2UtcmljaCBhcmVhcy5cbiAgICAgICAgPC9saT48YnIvPlxuICAgICAgICA8bGk+XG4gICAgICAgICAgQ291bnRyaWVzIGxpa2UgPHNwYW4gc3R5bGU9e3sgY29sb3I6IFwiI0ZGNjcxRlwiIH19PkluZGlhPC9zcGFuPiBpbGx1c3RyYXRlIGEgbXVsdGlsYXRlcmFsIGFwcHJvYWNoLCBiYWxhbmNpbmcgcmVsYXRpb25zaGlwcyB3aXRoIHRoZSA8c3BhbiBzdHlsZT17eyBjb2xvcjogXCIjNDY4MkI0XCIgfX0+VVM8L3NwYW4+LCA8c3BhbiBzdHlsZT17eyBjb2xvcjogXCIjREMxNDNDXCIgfX0+UnVzc2lhPC9zcGFuPiwgYW5kIG90aGVycy5cbiAgICAgICAgPC9saT5cbiAgICAgIDwvdWw+IFxuXG4gICAgICA8cCBjbGFzc05hbWU9XCJjdXN0b20tcGFyYWdyYXBoXCI+ICAgIFxuICAgICAgICBUaHJvdWdoIHRoaXMgbmV0d29yaywgYXJtcyB0cmFuc2ZlcnMgcmV2ZWFsIGludGVyZGVwZW5kZW50IGFsbGlhbmNlcywgYm9sc3RlcmVkIGluZmx1ZW5jZSwgYW5kIGVmZm9ydHMgdG8gY29udGFpbiByaXZhbHMuIFRoZSBtYXAgdW5kZXJzY29yZXMgaG93IGFybXMgZXhwb3J0cyBhcmUgbm90IGp1c3QgYWJvdXQgbWlsaXRhcnkgc3RyZW5ndGggYnV0IGFsc28gYWJvdXQgc2hhcGluZyB0aGUgc3RyYXRlZ2ljIHJlbGF0aW9uc2hpcHMgdGhhdCBkZWZpbmUgdGhlIGdsb2JhbCBvcmRlci5cbiAgICAgIDwvcD5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJjaGFydC1jb250YWluZXJcIiBzdHlsZT17eyB3aWR0aDogJzgwJScgfX0+XG4gICAgICAgIDxGb3JjZURpcmVjdGVkR3JhcGggLz5cbiAgICAgIDwvZGl2PlxuICAgIDwvc2VjdGlvbj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGFsbGlhbmNlO1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlRWZmZWN0IiwidXNlUmVmIiwidXNlU3RhdGUiLCJkMyIsInRvcG9qc29uIiwiTWlncmF0aW9uTWFwIiwic3ZnUmVmIiwid2lkdGgiLCJoZWlnaHQiLCJfdXNlU3RhdGUiLCJfdXNlU3RhdGUyIiwiX3NsaWNlZFRvQXJyYXkiLCJ3b3JsZEdlb0pTT04iLCJzZXRXb3JsZEdlb0pTT04iLCJfdXNlU3RhdGUzIiwiX3VzZVN0YXRlNCIsImNvdW50cnlDZW50cm9pZHMiLCJzZXRDb3VudHJ5Q2VudHJvaWRzIiwiX3VzZVN0YXRlNSIsIl91c2VTdGF0ZTYiLCJ0cmFkZURhdGEiLCJzZXRUcmFkZURhdGEiLCJfdXNlU3RhdGU3IiwiX3VzZVN0YXRlOCIsInNlbGVjdGVkWWVhciIsInNldFNlbGVjdGVkWWVhciIsIl91c2VTdGF0ZTkiLCJfdXNlU3RhdGUxMCIsInNlbGVjdGVkQ291bnRyeSIsInNldFNlbGVjdGVkQ291bnRyeSIsIl91c2VTdGF0ZTExIiwiX3VzZVN0YXRlMTIiLCJlcnJvciIsInNldEVycm9yIiwib3JpZ2luQ29sb3JzIiwidXJscyIsImNvbmNhdCIsInByb2Nlc3MiLCJlbnYiLCJQVUJMSUNfVVJMIiwiZ2VvSlNPTlVybCIsIm5vcm1hbGl6ZUNvdW50cnlOYW1lIiwibmFtZSIsIm1hcHBpbmciLCJqc29uIiwidGhlbiIsIndvcmxkRGF0YSIsImNlbnRyb2lkcyIsImZlYXR1cmUiLCJvYmplY3RzIiwiY291bnRyaWVzIiwiZmVhdHVyZXMiLCJmb3JFYWNoIiwiY291bnRyeU5hbWUiLCJwcm9wZXJ0aWVzIiwiZ2VvQ2VudHJvaWQiLCJPYmplY3QiLCJrZXlzIiwiY291bnRyeSIsImRhdGEiLCJyZWNpcGllbnRzIiwicHJldkRhdGEiLCJfb2JqZWN0U3ByZWFkIiwiX2RlZmluZVByb3BlcnR5IiwidmFsdWVzIiwiZXZlcnkiLCJsZW5ndGgiLCJzdmciLCJzZWxlY3QiLCJjdXJyZW50IiwiYXR0ciIsInN0eWxlIiwic2VsZWN0QWxsIiwicmVtb3ZlIiwicHJvamVjdGlvbiIsImdlb01lcmNhdG9yIiwiY2VudGVyIiwic2NhbGUiLCJ0cmFuc2xhdGUiLCJwYXRoIiwiZ2VvUGF0aCIsIm1hcENvbnRhaW5lciIsImFwcGVuZCIsInpvb20iLCJzY2FsZUV4dGVudCIsIm9uIiwiZXZlbnQiLCJ0cmFuc2Zvcm0iLCJjYWxsIiwidG9vbHRpcCIsImVudGVyIiwiY291bnRyaWVzVG9TaG93IiwidmFsaWRUcmFkZXMiLCJtYXAiLCJyZWNpcGllbnQiLCJvcmlnaW5Db29yZHMiLCJkZXN0Q291bnRyeSIsImRlc3RDb29yZHMiLCJ0cmFkZVZhbHVlIiwieWVhcnMiLCJvcmlnaW5Db3VudHJ5Iiwib3JpZ2luWCIsIm9yaWdpblkiLCJkZXN0WCIsImRlc3RZIiwiZmlsdGVyIiwiZCIsInRvcFJlY2lwaWVudHMiLCJzb3J0IiwiYSIsImIiLCJzbGljZSIsIm1heFRyYWRlVmFsdWUiLCJtYXgiLCJzdHJva2VTY2FsZSIsInNjYWxlU3FydCIsImRvbWFpbiIsInJhbmdlIiwiaHRtbCIsInBhZ2VYIiwicGFnZVkiLCJpbmNsdWRlcyIsIkxlZ2VuZCIsImNyZWF0ZUVsZW1lbnQiLCJwb3NpdGlvbiIsImJvdHRvbSIsImxlZnQiLCJiYWNrZ3JvdW5kIiwicGFkZGluZyIsImJvcmRlclJhZGl1cyIsImZvbnRTaXplIiwiY29sb3IiLCJtYXJnaW5Cb3R0b20iLCJlbnRyaWVzIiwiX3JlZiIsIl9yZWYyIiwiX3JlZjMiLCJfcmVmNCIsImtleSIsImRpc3BsYXkiLCJhbGlnbkl0ZW1zIiwiYmFja2dyb3VuZENvbG9yIiwibWFyZ2luUmlnaHQiLCJtYXJnaW5Ub3AiLCJjeCIsImN5IiwiciIsImZpbGwiLCJ0ZXh0QWxpZ24iLCJwYWRkaW5nVG9wIiwidG9wIiwidHlwZSIsIm1pbiIsInZhbHVlIiwib25DaGFuZ2UiLCJlIiwidGFyZ2V0IiwiYXBwZWFyYW5jZSIsIm91dGxpbmUiLCJtYXJnaW4iLCJhY2NlbnRDb2xvciIsInJlZiIsImJvcmRlciIsInNvbWUiLCJmbGV4RGlyZWN0aW9uIiwiaHRtbEZvciIsImZvbnRXZWlnaHQiLCJpZCIsIkZvcmNlRGlyZWN0ZWRHcmFwaCIsImRhdGFVcmwiLCJyYXdEYXRhIiwibm9kZXNBcnJheSIsImxpbmtzIiwibm9kZU1hcCIsIk1hcCIsInN1cHBsaWVyRW50cnkiLCJzdXBwbGllciIsImhhcyIsInNldCIsImdyb3VwIiwicHVzaCIsInJlY2lwaWVudEVudHJ5Iiwic291cmNlIiwiY29sb3JTY2FsZSIsInNjYWxlT3JkaW5hbCIsIm5vZGVTaXplU2NhbGUiLCJjb250YWluZXIiLCJkZWZhdWx0VHJhbnNmb3JtIiwiem9vbUlkZW50aXR5IiwibGluayIsImpvaW4iLCJub2RlIiwiX2xpbmtzJGZpbmQiLCJmaW5kIiwiZHJhZyIsImFjdGl2ZSIsInNpbXVsYXRpb24iLCJhbHBoYVRhcmdldCIsInJlc3RhcnQiLCJmeCIsIngiLCJmeSIsInkiLCJsYWJlbCIsIl9saW5rcyRmaW5kMiIsIm5vZGVWYWx1ZSIsInRleHQiLCJmb3JjZVNpbXVsYXRpb24iLCJmb3JjZSIsImZvcmNlTGluayIsImRpc3RhbmNlIiwic3RyZW5ndGgiLCJmb3JjZU1hbnlCb2R5IiwiZm9yY2VDZW50ZXIiLCJjb3VudHJ5Q29vcmRpbmF0ZXMiLCJEZWNrR0wiLCJBcmNMYXllciIsIk1BUEJPWF9UT0tFTiIsImV4dHJhY3RZZWFyRnJvbVJlY29yZCIsInJlY29yZCIsImRhdGUiLCJtYXRjaCIsInBhcnNlSW50IiwiV29ybGRDaG9yZCIsInNldERhdGEiLCJmaWx0ZXJlZERhdGEiLCJzZXRGaWx0ZXJlZERhdGEiLCJ5ZWFyIiwic2V0WWVhciIsImhvdmVyZWRJbmZvIiwic2V0SG92ZXJlZEluZm8iLCJjb3VudHJ5Q29sb3JzIiwiZmV0Y2giLCJyZXNwb25zZSIsImZldGNoZWREYXRhIiwidXBkYXRlZERhdGEiLCJpbml0aWFsRmlsdGVyZWREYXRhIiwiY29uc29sZSIsInVwZGF0ZWRGaWx0ZXJlZERhdGEiLCJmaWx0ZXJlZEJ5Q291bnRyeSIsIm9yaWdpbiIsInRvTG93ZXJDYXNlIiwidmFsaWRGaWx0ZXJlZERhdGEiLCJkZXN0aW5hdGlvbiIsImxheWVycyIsImdldFNvdXJjZVBvc2l0aW9uIiwiZ2V0VGFyZ2V0UG9zaXRpb24iLCJnZXRTb3VyY2VDb2xvciIsImdldFRhcmdldENvbG9yIiwiZ2V0V2lkdGgiLCJNYXRoIiwibG9nIiwicXVhbnRpdHkiLCJwaWNrYWJsZSIsImdldFRvb2x0aXAiLCJvYmplY3QiLCJ3ZWFwb24iLCJpbml0aWFsVmlld1N0YXRlIiwibGF0aXR1ZGUiLCJsb25naXR1ZGUiLCJwaXRjaCIsImNvbnRyb2xsZXIiLCJvbkhvdmVyIiwiaW5mbyIsIm1hcGJveEFjY2Vzc1Rva2VuIiwibWFwU3R5bGUiLCJhdHRyaWJ1dGlvbkNvbnRyb2wiLCJpbnRlcmFjdGl2ZUxheWVySWRzIiwicG9pbnRlckV2ZW50cyIsIndoaXRlU3BhY2UiLCJhbGxpYW5jZSIsImNsYXNzTmFtZSIsImNzc1RleHQiLCJmb250U3R5bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///699\n')},9098:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill-rule=%27evenodd%27 fill=%27%23fff%27%3E%3Cpath d=%27M4 10a6 6 0 1 0 12 0 6 6 0 1 0-12 0m5-3a1 1 0 1 0 2 0 1 1 0 1 0-2 0m0 3a1 1 0 1 1 2 0v3a1 1 0 1 1-2 0%27/%3E%3C/svg%3E"},8548:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill-rule=%27evenodd%27%3E%3Cpath d=%27M4 10a6 6 0 1 0 12 0 6 6 0 1 0-12 0m5-3a1 1 0 1 0 2 0 1 1 0 1 0-2 0m0 3a1 1 0 1 1 2 0v3a1 1 0 1 1-2 0%27/%3E%3C/svg%3E"},6008:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E"},1991:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E"},2990:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%2333b5e5%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27 display=%27none%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E"},311:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%2333b5e5%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E"},5721:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23666%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 fill=%27%23f00%27/%3E%3C/svg%3E"},1340:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23999%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 fill=%27%23f00%27/%3E%3C/svg%3E"},3764:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23aaa%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 fill=%27%23f00%27/%3E%3C/svg%3E"},3200:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23e54e33%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27 display=%27none%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E"},20:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23e58978%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E"},5454:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg viewBox=%270 0 20 20%27 xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27%3E%3Cpath d=%27M10 4C9 4 9 5 9 5v.1A5 5 0 0 0 5.1 9H5s-1 0-1 1 1 1 1 1h.1A5 5 0 0 0 9 14.9v.1s0 1 1 1 1-1 1-1v-.1a5 5 0 0 0 3.9-3.9h.1s1 0 1-1-1-1-1-1h-.1A5 5 0 0 0 11 5.1V5s0-1-1-1zm0 2.5a3.5 3.5 0 1 1 0 7 3.5 3.5 0 1 1 0-7z%27/%3E%3Ccircle id=%27dot%27 cx=%2710%27 cy=%2710%27 r=%272%27/%3E%3Cpath id=%27stroke%27 d=%27M14 5l1 1-9 9-1-1 9-9z%27 display=%27none%27/%3E%3C/svg%3E"},3825:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10 13c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h9c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-9z%27/%3E%3C/svg%3E"},5565:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10.5 14l4-8 4 8h-8z%27/%3E%3Cpath id=%27south%27 d=%27M10.5 16l4 8 4-8h-8z%27 fill=%27%23ccc%27/%3E%3C/svg%3E"},6686:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M14.5 8.5c-.75 0-1.5.75-1.5 1.5v3h-3c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h3v3c0 .75.75 1.5 1.5 1.5S16 19.75 16 19v-3h3c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-3v-3c0-.75-.75-1.5-1.5-1.5z%27/%3E%3C/svg%3E"},2556:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M18.5 16c-1.75 0-2.5.75-2.5 2.5V24h1l1.5-3 5.5 4 1-1-4-5.5 3-1.5v-1h-5.5zM13 18.5c0-1.75-.75-2.5-2.5-2.5H5v1l3 1.5L4 24l1 1 5.5-4 1.5 3h1v-5.5zm3-8c0 1.75.75 2.5 2.5 2.5H24v-1l-3-1.5L25 5l-1-1-5.5 4L17 5h-1v5.5zM10.5 13c1.75 0 2.5-.75 2.5-2.5V5h-1l-1.5 3L5 4 4 5l4 5.5L5 12v1h5.5z%27/%3E%3C/svg%3E"},2912:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23000%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M24 16v5.5c0 1.75-.75 2.5-2.5 2.5H16v-1l3-1.5-4-5.5 1-1 5.5 4 1.5-3h1zM6 16l1.5 3 5.5-4 1 1-4 5.5 3 1.5v1H7.5C5.75 24 5 23.25 5 21.5V16h1zm7-11v1l-3 1.5 4 5.5-1 1-5.5-4L6 13H5V7.5C5 5.75 5.75 5 7.5 5H13zm11 2.5c0-1.75-.75-2.5-2.5-2.5H16v1l3 1.5-4 5.5 1 1 5.5-4 1.5 3h1V7.5z%27/%3E%3C/svg%3E"},426:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10 13c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h9c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-9z%27/%3E%3C/svg%3E"},3750:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10.5 14l4-8 4 8h-8z%27/%3E%3Cpath id=%27south%27 d=%27M10.5 16l4 8 4-8h-8z%27 fill=%27%23ccc%27/%3E%3C/svg%3E"},3873:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M14.5 8.5c-.75 0-1.5.75-1.5 1.5v3h-3c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h3v3c0 .75.75 1.5 1.5 1.5S16 19.75 16 19v-3h3c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-3v-3c0-.75-.75-1.5-1.5-1.5z%27/%3E%3C/svg%3E"},6827:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23333%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M24 16v5.5c0 1.75-.75 2.5-2.5 2.5H16v-1l3-1.5-4-5.5 1-1 5.5 4 1.5-3h1zM6 16l1.5 3 5.5-4 1 1-4 5.5 3 1.5v1H7.5C5.75 24 5 23.25 5 21.5V16h1zm7-11v1l-3 1.5 4 5.5-1 1-5.5-4L6 13H5V7.5C5 5.75 5.75 5 7.5 5H13zm11 2.5c0-1.75-.75-2.5-2.5-2.5H16v1l3 1.5-4 5.5 1 1 5.5-4 1.5 3h1V7.5z%27/%3E%3C/svg%3E"},6839:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10 13c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h9c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-9z%27/%3E%3C/svg%3E"},577:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M10.5 14l4-8 4 8h-8z%27/%3E%3Cpath id=%27south%27 d=%27M10.5 16l4 8 4-8h-8z%27 fill=%27%23999%27/%3E%3C/svg%3E"},4972:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M14.5 8.5c-.75 0-1.5.75-1.5 1.5v3h-3c-.75 0-1.5.75-1.5 1.5S9.25 16 10 16h3v3c0 .75.75 1.5 1.5 1.5S16 19.75 16 19v-3h3c.75 0 1.5-.75 1.5-1.5S19.75 13 19 13h-3v-3c0-.75-.75-1.5-1.5-1.5z%27/%3E%3C/svg%3E"},4262:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M18.5 16c-1.75 0-2.5.75-2.5 2.5V24h1l1.5-3 5.5 4 1-1-4-5.5 3-1.5v-1h-5.5zM13 18.5c0-1.75-.75-2.5-2.5-2.5H5v1l3 1.5L4 24l1 1 5.5-4 1.5 3h1v-5.5zm3-8c0 1.75.75 2.5 2.5 2.5H24v-1l-3-1.5L25 5l-1-1-5.5 4L17 5h-1v5.5zM10.5 13c1.75 0 2.5-.75 2.5-2.5V5h-1l-1.5 3L5 4 4 5l4 5.5L5 12v1h5.5z%27/%3E%3C/svg%3E"},690:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M24 16v5.5c0 1.75-.75 2.5-2.5 2.5H16v-1l3-1.5-4-5.5 1-1 5.5 4 1.5-3h1zM6 16l1.5 3 5.5-4 1 1-4 5.5 3 1.5v1H7.5C5.75 24 5 23.25 5 21.5V16h1zm7-11v1l-3 1.5 4 5.5-1 1-5.5-4L6 13H5V7.5C5 5.75 5.75 5 7.5 5H13zm11 2.5c0-1.75-.75-2.5-2.5-2.5H16v1l3 1.5-4 5.5 1 1 5.5-4 1.5 3h1V7.5z%27/%3E%3C/svg%3E"},7324:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 29 29%27%3E%3Cpath d=%27M18.5 16c-1.75 0-2.5.75-2.5 2.5V24h1l1.5-3 5.5 4 1-1-4-5.5 3-1.5v-1h-5.5zM13 18.5c0-1.75-.75-2.5-2.5-2.5H5v1l3 1.5L4 24l1 1 5.5-4 1.5 3h1v-5.5zm3-8c0 1.75.75 2.5 2.5 2.5H24v-1l-3-1.5L25 5l-1-1-5.5 4L17 5h-1v5.5zM10.5 13c1.75 0 2.5-.75 2.5-2.5V5h-1l-1.5 3L5 4 4 5l4 5.5L5 12v1h5.5z%27/%3E%3C/svg%3E"},7138:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 xmlns:xlink=%27http://www.w3.org/1999/xlink%27 fill-rule=%27evenodd%27 viewBox=%270 0 88 23%27%3E%3Cdefs%3E%3Cpath id=%27logo%27 d=%27M11.5 2.25c5.105 0 9.25 4.145 9.25 9.25s-4.145 9.25-9.25 9.25-9.25-4.145-9.25-9.25 4.145-9.25 9.25-9.25zM6.997 15.983c-.051-.338-.828-5.802 2.233-8.873a4.395 4.395 0 013.13-1.28c1.27 0 2.49.51 3.39 1.42.91.9 1.42 2.12 1.42 3.39 0 1.18-.449 2.301-1.28 3.13C12.72 16.93 7 16 7 16l-.003-.017zM15.3 10.5l-2 .8-.8 2-.8-2-2-.8 2-.8.8-2 .8 2 2 .8z%27/%3E%3Cpath id=%27text%27 d=%27M50.63 8c.13 0 .23.1.23.23V9c.7-.76 1.7-1.18 2.73-1.18 2.17 0 3.95 1.85 3.95 4.17s-1.77 4.19-3.94 4.19c-1.04 0-2.03-.43-2.74-1.18v3.77c0 .13-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V8.23c0-.12.1-.23.23-.23h1.4zm-3.86.01c.01 0 .01 0 .01-.01.13 0 .22.1.22.22v7.55c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V15c-.7.76-1.69 1.19-2.73 1.19-2.17 0-3.94-1.87-3.94-4.19 0-2.32 1.77-4.19 3.94-4.19 1.03 0 2.02.43 2.73 1.18v-.75c0-.12.1-.23.23-.23h1.4zm26.375-.19a4.24 4.24 0 00-4.16 3.29c-.13.59-.13 1.19 0 1.77a4.233 4.233 0 004.17 3.3c2.35 0 4.26-1.87 4.26-4.19 0-2.32-1.9-4.17-4.27-4.17zM60.63 5c.13 0 .23.1.23.23v3.76c.7-.76 1.7-1.18 2.73-1.18 1.88 0 3.45 1.4 3.84 3.28.13.59.13 1.2 0 1.8-.39 1.88-1.96 3.29-3.84 3.29-1.03 0-2.02-.43-2.73-1.18v.77c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V5.23c0-.12.1-.23.23-.23h1.4zm-34 11h-1.4c-.13 0-.23-.11-.23-.23V8.22c.01-.13.1-.22.23-.22h1.4c.13 0 .22.11.23.22v.68c.5-.68 1.3-1.09 2.16-1.1h.03c1.09 0 2.09.6 2.6 1.55.45-.95 1.4-1.55 2.44-1.56 1.62 0 2.93 1.25 2.9 2.78l.03 5.2c0 .13-.1.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.8 0-1.46.7-1.59 1.62l.01 4.68c0 .13-.11.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.85 0-1.54.79-1.6 1.8v4.5c0 .13-.1.23-.23.23zm53.615 0h-1.61c-.04 0-.08-.01-.12-.03-.09-.06-.13-.19-.06-.28l2.43-3.71-2.39-3.65a.213.213 0 01-.03-.12c0-.12.09-.21.21-.21h1.61c.13 0 .24.06.3.17l1.41 2.37 1.4-2.37a.34.34 0 01.3-.17h1.6c.04 0 .08.01.12.03.09.06.13.19.06.28l-2.37 3.65 2.43 3.7c0 .05.01.09.01.13 0 .12-.09.21-.21.21h-1.61c-.13 0-.24-.06-.3-.17l-1.44-2.42-1.44 2.42a.34.34 0 01-.3.17zm-7.12-1.49c-1.33 0-2.42-1.12-2.42-2.51 0-1.39 1.08-2.52 2.42-2.52 1.33 0 2.42 1.12 2.42 2.51 0 1.39-1.08 2.51-2.42 2.52zm-19.865 0c-1.32 0-2.39-1.11-2.42-2.48v-.07c.02-1.38 1.09-2.49 2.4-2.49 1.32 0 2.41 1.12 2.41 2.51 0 1.39-1.07 2.52-2.39 2.53zm-8.11-2.48c-.01 1.37-1.09 2.47-2.41 2.47s-2.42-1.12-2.42-2.51c0-1.39 1.08-2.52 2.4-2.52 1.33 0 2.39 1.11 2.41 2.48l.02.08zm18.12 2.47c-1.32 0-2.39-1.11-2.41-2.48v-.06c.02-1.38 1.09-2.48 2.41-2.48s2.42 1.12 2.42 2.51c0 1.39-1.09 2.51-2.42 2.51z%27/%3E%3C/defs%3E%3Cmask id=%27clip%27%3E%3Crect x=%270%27 y=%270%27 width=%27100%25%27 height=%27100%25%27 fill=%27white%27/%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/mask%3E%3Cg id=%27outline%27 opacity=%270.3%27 stroke=%27%23000%27 stroke-width=%273%27%3E%3Ccircle mask=%27url%28%23clip%29%27 cx=%2711.5%27 cy=%2711.5%27 r=%279.25%27/%3E%3Cuse xlink:href=%27%23text%27 mask=%27url%28%23clip%29%27/%3E%3C/g%3E%3Cg id=%27fill%27 opacity=%270.9%27 fill=%27%23fff%27%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/g%3E%3C/svg%3E"},7256:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 xmlns:xlink=%27http://www.w3.org/1999/xlink%27 fill-rule=%27evenodd%27 viewBox=%270 0 88 23%27%3E%3Cdefs%3E%3Cpath id=%27logo%27 d=%27M11.5 2.25c5.105 0 9.25 4.145 9.25 9.25s-4.145 9.25-9.25 9.25-9.25-4.145-9.25-9.25 4.145-9.25 9.25-9.25zM6.997 15.983c-.051-.338-.828-5.802 2.233-8.873a4.395 4.395 0 013.13-1.28c1.27 0 2.49.51 3.39 1.42.91.9 1.42 2.12 1.42 3.39 0 1.18-.449 2.301-1.28 3.13C12.72 16.93 7 16 7 16l-.003-.017zM15.3 10.5l-2 .8-.8 2-.8-2-2-.8 2-.8.8-2 .8 2 2 .8z%27/%3E%3Cpath id=%27text%27 d=%27M50.63 8c.13 0 .23.1.23.23V9c.7-.76 1.7-1.18 2.73-1.18 2.17 0 3.95 1.85 3.95 4.17s-1.77 4.19-3.94 4.19c-1.04 0-2.03-.43-2.74-1.18v3.77c0 .13-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V8.23c0-.12.1-.23.23-.23h1.4zm-3.86.01c.01 0 .01 0 .01-.01.13 0 .22.1.22.22v7.55c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V15c-.7.76-1.69 1.19-2.73 1.19-2.17 0-3.94-1.87-3.94-4.19 0-2.32 1.77-4.19 3.94-4.19 1.03 0 2.02.43 2.73 1.18v-.75c0-.12.1-.23.23-.23h1.4zm26.375-.19a4.24 4.24 0 00-4.16 3.29c-.13.59-.13 1.19 0 1.77a4.233 4.233 0 004.17 3.3c2.35 0 4.26-1.87 4.26-4.19 0-2.32-1.9-4.17-4.27-4.17zM60.63 5c.13 0 .23.1.23.23v3.76c.7-.76 1.7-1.18 2.73-1.18 1.88 0 3.45 1.4 3.84 3.28.13.59.13 1.2 0 1.8-.39 1.88-1.96 3.29-3.84 3.29-1.03 0-2.02-.43-2.73-1.18v.77c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V5.23c0-.12.1-.23.23-.23h1.4zm-34 11h-1.4c-.13 0-.23-.11-.23-.23V8.22c.01-.13.1-.22.23-.22h1.4c.13 0 .22.11.23.22v.68c.5-.68 1.3-1.09 2.16-1.1h.03c1.09 0 2.09.6 2.6 1.55.45-.95 1.4-1.55 2.44-1.56 1.62 0 2.93 1.25 2.9 2.78l.03 5.2c0 .13-.1.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.8 0-1.46.7-1.59 1.62l.01 4.68c0 .13-.11.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.85 0-1.54.79-1.6 1.8v4.5c0 .13-.1.23-.23.23zm53.615 0h-1.61c-.04 0-.08-.01-.12-.03-.09-.06-.13-.19-.06-.28l2.43-3.71-2.39-3.65a.213.213 0 01-.03-.12c0-.12.09-.21.21-.21h1.61c.13 0 .24.06.3.17l1.41 2.37 1.4-2.37a.34.34 0 01.3-.17h1.6c.04 0 .08.01.12.03.09.06.13.19.06.28l-2.37 3.65 2.43 3.7c0 .05.01.09.01.13 0 .12-.09.21-.21.21h-1.61c-.13 0-.24-.06-.3-.17l-1.44-2.42-1.44 2.42a.34.34 0 01-.3.17zm-7.12-1.49c-1.33 0-2.42-1.12-2.42-2.51 0-1.39 1.08-2.52 2.42-2.52 1.33 0 2.42 1.12 2.42 2.51 0 1.39-1.08 2.51-2.42 2.52zm-19.865 0c-1.32 0-2.39-1.11-2.42-2.48v-.07c.02-1.38 1.09-2.49 2.4-2.49 1.32 0 2.41 1.12 2.41 2.51 0 1.39-1.07 2.52-2.39 2.53zm-8.11-2.48c-.01 1.37-1.09 2.47-2.41 2.47s-2.42-1.12-2.42-2.51c0-1.39 1.08-2.52 2.4-2.52 1.33 0 2.39 1.11 2.41 2.48l.02.08zm18.12 2.47c-1.32 0-2.39-1.11-2.41-2.48v-.06c.02-1.38 1.09-2.48 2.41-2.48s2.42 1.12 2.42 2.51c0 1.39-1.09 2.51-2.42 2.51z%27/%3E%3C/defs%3E%3Cmask id=%27clip%27%3E%3Crect x=%270%27 y=%270%27 width=%27100%25%27 height=%27100%25%27 fill=%27white%27/%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/mask%3E%3Cg id=%27outline%27 opacity=%271%27 stroke=%27%23000%27 stroke-width=%273%27%3E%3Ccircle mask=%27url%28%23clip%29%27 cx=%2711.5%27 cy=%2711.5%27 r=%279.25%27/%3E%3Cuse xlink:href=%27%23text%27 mask=%27url%28%23clip%29%27/%3E%3C/g%3E%3Cg id=%27fill%27 opacity=%271%27 fill=%27%23fff%27%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/g%3E%3C/svg%3E"},7354:Q=>{Q.exports="data:image/svg+xml;charset=utf-8,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 xmlns:xlink=%27http://www.w3.org/1999/xlink%27 fill-rule=%27evenodd%27 viewBox=%270 0 88 23%27%3E%3Cdefs%3E%3Cpath id=%27logo%27 d=%27M11.5 2.25c5.105 0 9.25 4.145 9.25 9.25s-4.145 9.25-9.25 9.25-9.25-4.145-9.25-9.25 4.145-9.25 9.25-9.25zM6.997 15.983c-.051-.338-.828-5.802 2.233-8.873a4.395 4.395 0 013.13-1.28c1.27 0 2.49.51 3.39 1.42.91.9 1.42 2.12 1.42 3.39 0 1.18-.449 2.301-1.28 3.13C12.72 16.93 7 16 7 16l-.003-.017zM15.3 10.5l-2 .8-.8 2-.8-2-2-.8 2-.8.8-2 .8 2 2 .8z%27/%3E%3Cpath id=%27text%27 d=%27M50.63 8c.13 0 .23.1.23.23V9c.7-.76 1.7-1.18 2.73-1.18 2.17 0 3.95 1.85 3.95 4.17s-1.77 4.19-3.94 4.19c-1.04 0-2.03-.43-2.74-1.18v3.77c0 .13-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V8.23c0-.12.1-.23.23-.23h1.4zm-3.86.01c.01 0 .01 0 .01-.01.13 0 .22.1.22.22v7.55c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V15c-.7.76-1.69 1.19-2.73 1.19-2.17 0-3.94-1.87-3.94-4.19 0-2.32 1.77-4.19 3.94-4.19 1.03 0 2.02.43 2.73 1.18v-.75c0-.12.1-.23.23-.23h1.4zm26.375-.19a4.24 4.24 0 00-4.16 3.29c-.13.59-.13 1.19 0 1.77a4.233 4.233 0 004.17 3.3c2.35 0 4.26-1.87 4.26-4.19 0-2.32-1.9-4.17-4.27-4.17zM60.63 5c.13 0 .23.1.23.23v3.76c.7-.76 1.7-1.18 2.73-1.18 1.88 0 3.45 1.4 3.84 3.28.13.59.13 1.2 0 1.8-.39 1.88-1.96 3.29-3.84 3.29-1.03 0-2.02-.43-2.73-1.18v.77c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V5.23c0-.12.1-.23.23-.23h1.4zm-34 11h-1.4c-.13 0-.23-.11-.23-.23V8.22c.01-.13.1-.22.23-.22h1.4c.13 0 .22.11.23.22v.68c.5-.68 1.3-1.09 2.16-1.1h.03c1.09 0 2.09.6 2.6 1.55.45-.95 1.4-1.55 2.44-1.56 1.62 0 2.93 1.25 2.9 2.78l.03 5.2c0 .13-.1.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.8 0-1.46.7-1.59 1.62l.01 4.68c0 .13-.11.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.85 0-1.54.79-1.6 1.8v4.5c0 .13-.1.23-.23.23zm53.615 0h-1.61c-.04 0-.08-.01-.12-.03-.09-.06-.13-.19-.06-.28l2.43-3.71-2.39-3.65a.213.213 0 01-.03-.12c0-.12.09-.21.21-.21h1.61c.13 0 .24.06.3.17l1.41 2.37 1.4-2.37a.34.34 0 01.3-.17h1.6c.04 0 .08.01.12.03.09.06.13.19.06.28l-2.37 3.65 2.43 3.7c0 .05.01.09.01.13 0 .12-.09.21-.21.21h-1.61c-.13 0-.24-.06-.3-.17l-1.44-2.42-1.44 2.42a.34.34 0 01-.3.17zm-7.12-1.49c-1.33 0-2.42-1.12-2.42-2.51 0-1.39 1.08-2.52 2.42-2.52 1.33 0 2.42 1.12 2.42 2.51 0 1.39-1.08 2.51-2.42 2.52zm-19.865 0c-1.32 0-2.39-1.11-2.42-2.48v-.07c.02-1.38 1.09-2.49 2.4-2.49 1.32 0 2.41 1.12 2.41 2.51 0 1.39-1.07 2.52-2.39 2.53zm-8.11-2.48c-.01 1.37-1.09 2.47-2.41 2.47s-2.42-1.12-2.42-2.51c0-1.39 1.08-2.52 2.4-2.52 1.33 0 2.39 1.11 2.41 2.48l.02.08zm18.12 2.47c-1.32 0-2.39-1.11-2.41-2.48v-.06c.02-1.38 1.09-2.48 2.41-2.48s2.42 1.12 2.42 2.51c0 1.39-1.09 2.51-2.42 2.51z%27/%3E%3C/defs%3E%3Cmask id=%27clip%27%3E%3Crect x=%270%27 y=%270%27 width=%27100%25%27 height=%27100%25%27 fill=%27white%27/%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/mask%3E%3Cg id=%27outline%27 opacity=%271%27 stroke=%27%23fff%27 stroke-width=%273%27 fill=%27%23fff%27%3E%3Ccircle mask=%27url%28%23clip%29%27 cx=%2711.5%27 cy=%2711.5%27 r=%279.25%27/%3E%3Cuse xlink:href=%27%23text%27 mask=%27url%28%23clip%29%27/%3E%3C/g%3E%3Cg id=%27fill%27 opacity=%271%27 fill=%27%23000%27%3E%3Cuse xlink:href=%27%23logo%27/%3E%3Cuse xlink:href=%27%23text%27/%3E%3C/g%3E%3C/svg%3E"}}]);